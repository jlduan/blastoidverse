[
  {
    "objectID": "summarize_datasets.html",
    "href": "summarize_datasets.html",
    "title": "Dataset Summary",
    "section": "",
    "text": "Sys.time()\n\n[1] \"2023-08-12 11:00:56 CDT\"\nSys.timezone()\n\n[1] \"America/Chicago\""
  },
  {
    "objectID": "summarize_datasets.html#preparation",
    "href": "summarize_datasets.html#preparation",
    "title": "Dataset Summary",
    "section": "Preparation",
    "text": "Preparation\n\nPROJECT_DIR &lt;- \"/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation\"\n\nFunctions\nLoad required packages.\n\nlibrary(tidyverse)\n## ── Attaching core tidyverse packages ─────────────────── tidyverse 2.0.0.9000 ──\n## ✔ dplyr     1.1.2.9000     ✔ readr     2.1.4.9000\n## ✔ forcats   1.0.0.9000     ✔ stringr   1.5.0.9000\n## ✔ ggplot2   3.4.2.9000     ✔ tibble    3.2.1.9005\n## ✔ lubridate 1.9.2.9000     ✔ tidyr     1.3.0.9000\n## ✔ purrr     1.0.2.9000     \n## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n## ✖ dplyr::filter() masks stats::filter()\n## ✖ dplyr::lag()    masks stats::lag()\n## ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\nlibrary(Matrix)\n## \n## Attaching package: 'Matrix'\n## \n## The following objects are masked from 'package:tidyr':\n## \n##     expand, pack, unpack\nlibrary(patchwork)\nlibrary(extrafont)\n## Registering fonts with R\nlibrary(furrr)\n## Loading required package: future\n\n\nsource(\n    file = file.path(\n        SCRIPT_DIR,\n        \"utilities.R\"\n    )\n)\n\n\ncreate_gt &lt;- function(x) {\n    x |&gt;\n        gt::gt() |&gt;\n        gt::data_color(\n            columns = c(median_umis),\n            fn = scales::col_numeric(\n                palette = c(\n                    \"green\", \"orange\", \"red\"\n                ),\n                domain = NULL\n            )\n        ) |&gt;\n        gt::fmt_number(\n            columns = c(num_cells),\n            sep_mark = \",\",\n            decimals = 0,\n            suffixing = FALSE\n        ) |&gt;\n        gt::fmt_number(\n            columns = c(median_umis),\n            sep_mark = \",\",\n            decimals = 1,\n            suffixing = FALSE\n        ) |&gt;\n        gt::grand_summary_rows(\n            columns = c(num_cells),\n            fns = c(\n                Sum = ~ sum(.)\n            ),\n            fmt = ~ gt::fmt_number(., decimals = 0, use_seps = TRUE),\n            suffixing = FALSE\n        )\n}\n\nPython env\n\nad &lt;- reticulate::import(module = \"anndata\", convert = TRUE)\nprint(ad$`__version__`)\n\n[1] \"0.8.0\"\n\n\n\nreticulate::py_config()\n\npython:         /Users/jialei/.pyenv/shims/python\nlibpython:      /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/libpython3.10.dylib\npythonhome:     /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3:/Users/jialei/.pyenv/versions/mambaforge-22.9.0-3\nversion:        3.10.9 | packaged by conda-forge | (main, Feb  2 2023, 20:26:08) [Clang 14.0.6 ]\nnumpy:          /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/numpy\nnumpy_version:  1.24.3\nanndata:        /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/anndata\n\nNOTE: Python version was forced by RETICULATE_PYTHON\n\n\nMatrix\n\n# Petropoulos et al. 2016; PRJEB11202\n# Zhou et al. 2019; PRJNA431392\n# Xiang et al. 2020; PRJNA562548\n# Tyser et al. 2021; PRJEB40781\n# Zheng et al. 2019; PRJNA555602\n# Yanagida et al. 2021; PRJNA720968\nadata_files &lt;- purrr::map(\n    c(\n        \"PRJEB11202\", \"PRJNA431392\", \"PRJNA562548\",\n        \"PRJEB40781\", \"PRJNA555602\", \"PRJNA720968\"\n    ), \\(x) {\n        file.path(\n            PROJECT_DIR,\n            \"raw\",\n            \"public\",\n            x,\n            \"matrix\",\n            \"adata.h5ad\"\n        )\n    }\n)\n\nadata_files &lt;- unique(adata_files)\npurrr::map_lgl(adata_files, file.exists)\n\n[1] TRUE TRUE TRUE TRUE TRUE TRUE\n\n\n\nBACKED &lt;- NULL\nmatrix_readcount_use &lt;- purrr::map(adata_files, function(x) {\n    cat(x, \"\\n\")\n\n    ad$read_h5ad(\n        filename = x, backed = BACKED\n    ) |&gt;\n        extract_matrix_from_adata()\n}) |&gt;\n    purrr::reduce(cbind)\n\n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/public/PRJEB11202/matrix/adata.h5ad \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/public/PRJNA431392/matrix/adata.h5ad \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/public/PRJNA562548/matrix/adata.h5ad \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/public/PRJEB40781/matrix/adata.h5ad \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/public/PRJNA555602/matrix/adata.h5ad \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/public/PRJNA720968/matrix/adata.h5ad \n\nmatrix_readcount_use &lt;- matrix_readcount_use[\n    , sort(colnames(matrix_readcount_use))\n]\ndim(matrix_readcount_use)\n\n[1] 33538 19651\n\n\nMetadata\n\nBACKED &lt;- \"r\"\ncell_metadata &lt;- purrr::map(adata_files, function(x) {\n    ad$read_h5ad(\n        filename = x, backed = BACKED\n    )$obs |&gt;\n        tibble::rownames_to_column(var = \"cell\") |&gt;\n        dplyr::select(cell, dplyr::everything())\n}) |&gt;\n    dplyr::bind_rows()\n\ncell_metadata |&gt; head()\n\n        cell      batch num_umis num_features mt_percentage\n1 ERS1079290 PRJEB11202  1884175        10506   0.006999350\n2 ERS1079291 PRJEB11202  1290557         8956   0.009932920\n3 ERS1079292 PRJEB11202  1686855        10893   0.007484935\n4 ERS1079293 PRJEB11202  1181562         9858   0.010599528\n5 ERS1079294 PRJEB11202  1868361        10619   0.007091777\n6 ERS1079295 PRJEB11202  1331354         8659   0.009590988"
  },
  {
    "objectID": "summarize_datasets.html#summary",
    "href": "summarize_datasets.html#summary",
    "title": "Dataset Summary",
    "section": "Summary",
    "text": "Summary\nPetropoulos et al. 2016; PRJEB11202\n\ncell_metadata_PRJEB11202 &lt;- vroom::vroom(\n    file = file.path(\n        PROJECT_DIR,\n        \"raw\",\n        \"public\",\n        \"PRJEB11202\",\n        \"matrix/cell_metadata.csv\"\n    ),\n    show_col_types = FALSE\n) |&gt;\n    dplyr::mutate(\n        developmental_stage = stringr::str_remove(\n            string = individual,\n            pattern = \"\\\\..+$\"\n        ),\n        developmental_stage = factor(\n            developmental_stage,\n            levels = stringr::str_sort(\n                unique(developmental_stage),\n                numeric = TRUE\n            )\n        ),\n        #\n        lineage = factor(\n            inferred_lineage,\n            levels = c(\n                \"epiblast\",\n                \"primitive_endoderm\",\n                \"trophectoderm\",\n                \"not_applicable\"\n            )\n        )\n    ) |&gt;\n    dplyr::select(\n        cell, lineage, developmental_stage\n    )\n\n\n\nLineage\nDevelopmental stage\n\n\n\n\nCodecell_metadata_PRJEB11202 |&gt;\n    dplyr::left_join(\n        cell_metadata,\n        by = \"cell\"\n    ) |&gt;\n    dplyr::group_by(lineage) |&gt;\n    dplyr::summarise(\n        num_cells = n(),\n        median_umis = median(num_umis)\n    ) |&gt;\n    create_gt()\n\n\n\n\n\n\n      lineage\n      num_cells\n      median_umis\n    \n\n\n\nepiblast\n127\n1,501,176.0\n\n\n\nprimitive_endoderm\n108\n1,626,576.5\n\n\n\ntrophectoderm\n861\n1,528,414.0\n\n\n\nnot_applicable\n433\n1,574,032.0\n\n\nSum\n—\n1,529\n—\n\n\n\n\n\n\n\n\n\nCodecell_metadata_PRJEB11202 |&gt;\n    dplyr::left_join(\n        cell_metadata,\n        by = \"cell\"\n    ) |&gt;\n    dplyr::group_by(developmental_stage) |&gt;\n    dplyr::summarise(\n        num_cells = n(),\n        median_umis = median(num_umis)\n    ) |&gt;\n    create_gt()\n\n\n\n\n\n\n      developmental_stage\n      num_cells\n      median_umis\n    \n\n\n\nE3\n81\n1,560,759.0\n\n\n\nE4\n190\n1,737,179.5\n\n\n\nE5\n377\n1,320,641.0\n\n\n\nE6\n415\n1,303,893.0\n\n\n\nE7\n466\n1,826,628.0\n\n\nSum\n—\n1,529\n—\n\n\n\n\n\n\n\n\n\nXiang et al. 2020; PRJNA562548\n\ncell_metadata_PRJNA562548 &lt;- vroom::vroom(\n    file = file.path(\n        PROJECT_DIR,\n        \"raw\",\n        \"public\",\n        \"PRJNA562548\",\n        \"matrix/cell_metadata.csv\"\n    ),\n    show_col_types = FALSE\n) |&gt;\n    dplyr::select(\n        cell = `Sample Name`,\n        developmental_stage = Age,\n        lineage = Cell_type\n    ) |&gt;\n    dplyr::mutate(\n        developmental_stage = stringr::str_replace(\n            string = developmental_stage,\n            pattern = \"embryo invitro day \",\n            replacement = \"E\"\n        ),\n        developmental_stage = factor(\n            developmental_stage,\n            levels = stringr::str_sort(\n                x = unique(developmental_stage),\n                numeric = TRUE\n            )\n        ),\n        lineage = factor(\n            lineage,\n            levels = c(\n                \"ICM\",\n                \"EPI\",\n                \"PSA-EPI\",\n                \"Hypoblast\",\n                \"CTBs\",\n                \"STBs\",\n                \"EVTs\"\n            )\n        )\n    )\n\n\n\nLineage\nDevelopmental stage\n\n\n\n\nCodecell_metadata_PRJNA562548 |&gt;\n    dplyr::left_join(\n        cell_metadata,\n        by = \"cell\"\n    ) |&gt;\n    dplyr::group_by(lineage) |&gt;\n    dplyr::summarise(\n        num_cells = n(),\n        median_umis = median(num_umis)\n    ) |&gt;\n    create_gt()\n\n\n\n\n\n\n      lineage\n      num_cells\n      median_umis\n    \n\n\n\nICM\n52\n9,301,780.5\n\n\n\nEPI\n126\n8,140,892.0\n\n\n\nPSA-EPI\n44\n10,626,505.5\n\n\n\nHypoblast\n25\n10,352,781.0\n\n\n\nCTBs\n159\n11,932,826.0\n\n\n\nSTBs\n109\n10,947,518.0\n\n\n\nEVTs\n40\n7,776,425.0\n\n\nSum\n—\n555\n—\n\n\n\n\n\n\n\n\n\nCodecell_metadata_PRJNA562548 |&gt;\n    dplyr::left_join(\n        cell_metadata,\n        by = \"cell\"\n    ) |&gt;\n    dplyr::group_by(developmental_stage) |&gt;\n    dplyr::summarise(\n        num_cells = n(),\n        median_umis = median(num_umis)\n    ) |&gt;\n    create_gt()\n\n\n\n\n\n\n      developmental_stage\n      num_cells\n      median_umis\n    \n\n\n\nE6\n63\n8,417,642.0\n\n\n\nE7\n65\n10,379,784.0\n\n\n\nE8\n59\n12,844,992.0\n\n\n\nE9\n68\n11,678,631.0\n\n\n\nE10\n77\n10,266,959.0\n\n\n\nE12\n88\n9,614,121.5\n\n\n\nE13.5\n15\n12,687,897.0\n\n\n\nE14\n120\n8,247,721.5\n\n\nSum\n—\n555\n—\n\n\n\n\n\n\n\n\n\nTyser et al. 2021; PRJEB40781\n\ncell_metadata_PRJEB40781 &lt;- vroom::vroom(\n    file = file.path(\n        PROJECT_DIR,\n        \"raw\",\n        \"public\",\n        \"PRJEB40781\",\n        \"matrix/cell_metadata.csv\"\n    ),\n    show_col_types = FALSE\n) |&gt;\n    dplyr::mutate(\n        lineage = factor(lineage),\n        lineage_ontology = factor(lineage_ontology),\n        sampling_site = factor(sampling_site)\n    )\n\n\n\nLineage\nDevelopmental stage\n\n\n\n\nCodecell_metadata_PRJEB40781 |&gt;\n    dplyr::left_join(\n        cell_metadata,\n        by = \"cell\"\n    ) |&gt;\n    dplyr::group_by(lineage) |&gt;\n    dplyr::summarise(\n        num_cells = n(),\n        median_umis = median(num_umis)\n    ) |&gt;\n    create_gt()\n\n\n\n\n\n\n      lineage\n      num_cells\n      median_umis\n    \n\n\n\nadvanced mesoderm\n164\n993,741.0\n\n\n\naxial mesoderm\n23\n853,681.0\n\n\n\nectodermal cell\n29\n996,476.0\n\n\n\nemergent mesoderm\n185\n911,736.0\n\n\n\nendodermal cell\n135\n989,383.0\n\n\n\nepiblast cell\n133\n790,584.0\n\n\n\nerythrocyte\n32\n716,602.0\n\n\n\nhemogenic endothelial progenitor\n111\n925,287.0\n\n\n\nnascent mesoderm\n98\n787,231.5\n\n\n\nprimitive streak\n202\n826,282.5\n\n\n\nyolk sac mesoderm\n83\n1,124,901.0\n\n\nSum\n—\n1,195\n—\n\n\n\n\n\n\n\n\n\nCodecell_metadata_PRJEB40781 |&gt;\n    dplyr::left_join(\n        cell_metadata,\n        by = \"cell\"\n    ) |&gt;\n    dplyr::group_by(developmental_stage) |&gt;\n    dplyr::summarise(\n        num_cells = n(),\n        median_umis = median(num_umis)\n    ) |&gt;\n    create_gt()\n\n\n\n\n\n\n      developmental_stage\n      num_cells\n      median_umis\n    \n\n\n\n16 to 19\n1,195\n899,241.0\n\n\nSum\n—\n1,195\n—\n\n\n\n\n\n\n\n\n\nZheng et al. 2019; PRJNA555602\n\ncell_metadata_PRJNA555602 &lt;- vroom::vroom(\n    file = file.path(\n        PROJECT_DIR,\n        \"raw\",\n        \"public\",\n        \"PRJNA555602\",\n        \"matrix/cell_metadata.csv\"\n    ),\n    show_col_types = FALSE\n) |&gt;\n    dplyr::mutate(\n        batch = case_when(\n            old_ident == \"10X_Embryoid\" ~ \"GSM3956280\",\n            old_ident == \"10X_H9_Amnion\" ~ \"GSM3956281\"\n        ),\n        cell = stringr::str_remove(string = cell, pattern = \"\\\\..+\"),\n        # cell = paste(batch, cell, sep = \"_\"),\n        #\n        cell_type = case_when(\n            rna_snn_res_0.3 %in% 0 ~ \"Transwell-AMLC\",\n            rna_snn_res_0.3 %in% 1 ~ \"MeLC2\",\n            rna_snn_res_0.3 %in% 2 ~ \"Human_ES_cell\",\n            rna_snn_res_0.3 %in% 3 ~ \"MeLC1\",\n            rna_snn_res_0.3 %in% 4 ~ \"hPGCLC\",\n            rna_snn_res_0.3 %in% 5 ~ \"AMLC\"\n        ),\n        cell_type = factor(\n            cell_type,\n            levels = c(\n                \"Human_ES_cell\",\n                # human PGC-like cells\n                \"hPGCLC\",\n                \"Transwell-AMLC\",\n                # amniotic ectoderm-like cells\n                \"AMLC\",\n                # mesoderm-like cell\n                \"MeLC1\",\n                \"MeLC2\"\n            )\n        )\n    )\n\n\n\nCell type\nIdentity\n\n\n\n\nCodecell_metadata_PRJNA555602 |&gt;\n    dplyr::left_join(\n        cell_metadata,\n        by = \"cell\"\n    ) |&gt;\n    dplyr::group_by(cell_type) |&gt;\n    dplyr::summarise(\n        num_cells = n(),\n        median_umis = median(num_umis)\n    ) |&gt;\n    create_gt()\n\n\n\n\n\n\n      cell_type\n      num_cells\n      median_umis\n    \n\n\n\nHuman_ES_cell\n1,677\n28,735.0\n\n\n\nhPGCLC\n1,224\n21,419.0\n\n\n\nTranswell-AMLC\n2,845\n27,137.0\n\n\n\nAMLC\n979\n22,686.0\n\n\n\nMeLC1\n1,405\n23,269.0\n\n\n\nMeLC2\n1,836\n25,066.5\n\n\nSum\n—\n9,966\n—\n\n\n\n\n\n\n\n\n\nCodecell_metadata_PRJNA555602 |&gt;\n    dplyr::left_join(\n        cell_metadata,\n        by = \"cell\"\n    ) |&gt;\n    dplyr::group_by(old_ident) |&gt;\n    dplyr::summarise(\n        num_cells = n(),\n        median_umis = median(num_umis)\n    ) |&gt;\n    create_gt()\n\n\n\n\n\n\n      old_ident\n      num_cells\n      median_umis\n    \n\n\n\n10X_Embryoid\n5,454\n23,322.0\n\n\n\n10X_H9_Amnion\n4,512\n27,887.0\n\n\nSum\n—\n9,966\n—\n\n\n\n\n\n\n\n\n\nYanagida et al. 2021; PRJNA720968\n\ncell_metadata_PRJNA720968 &lt;- vroom::vroom(\n    file = file.path(\n        PROJECT_DIR,\n        \"raw/public\",\n        \"PRJNA720968\",\n        \"matrix\",\n        \"cell_metadata.csv\"\n    ),\n    show_col_types = FALSE\n) |&gt;\n    dplyr::mutate(\n        origin = factor(\n            origin,\n            levels = c(\"Blastocyst\", \"Blastoid\")\n        ),\n        #\n        developmental_stage = factor(\n            developmental_stage,\n            levels = stringr::str_sort(\n                unique(developmental_stage),\n                numeric = TRUE\n            )\n        ),\n        #\n        lineage = paste(origin, lineage, sep = \": \"),\n        lineage = factor(\n            lineage,\n            levels = c(\n                \"Blastocyst: Epiblast\",\n                \"Blastocyst: Hypoblast\",\n                \"Blastocyst: Inner Cell Mass\",\n                \"Blastocyst: Inner Cell Mass-Trophectoderm Transition\",\n                \"Blastocyst: Early Trophectoderm\",\n                \"Blastocyst: Trophectoderm\",\n                #\n                \"Blastoid: Epiblast\",\n                \"Blastoid: Hypoblast\",\n                \"Blastoid: Transitioning\",\n                \"Blastoid: Trophectoderm\"\n            )\n        )\n    )\n\n\n\nLineage\nDevelopmental stage\n\n\n\n\nCodecell_metadata_PRJNA720968 |&gt;\n    dplyr::left_join(\n        cell_metadata,\n        by = \"cell\"\n    ) |&gt;\n    dplyr::group_by(lineage) |&gt;\n    dplyr::summarise(\n        num_cells = n(),\n        median_umis = median(num_umis)\n    ) |&gt;\n    create_gt()\n\n\n\n\n\n\n      lineage\n      num_cells\n      median_umis\n    \n\n\n\nBlastocyst: Epiblast\n31\n8,126,430.0\n\n\n\nBlastocyst: Hypoblast\n14\n9,776,420.5\n\n\n\nBlastocyst: Inner Cell Mass\n22\n7,335,337.0\n\n\n\nBlastocyst: Inner Cell Mass-Trophectoderm Transition\n23\n8,187,758.0\n\n\n\nBlastocyst: Early Trophectoderm\n18\n8,361,591.5\n\n\n\nBlastocyst: Trophectoderm\n117\n7,541,800.0\n\n\n\nBlastoid: Epiblast\n73\n7,916,385.0\n\n\n\nBlastoid: Hypoblast\n13\n8,166,701.0\n\n\n\nBlastoid: Transitioning\n7\n4,276,121.0\n\n\n\nBlastoid: Trophectoderm\n174\n7,467,628.5\n\n\n\nNA\n3\n4,890,522.0\n\n\nSum\n—\n495\n—\n\n\n\n\n\n\n\n\n\nCodecell_metadata_PRJNA720968 |&gt;\n    dplyr::left_join(\n        cell_metadata,\n        by = \"cell\"\n    ) |&gt;\n    dplyr::group_by(developmental_stage) |&gt;\n    dplyr::summarise(\n        num_cells = n(),\n        median_umis = median(num_umis)\n    ) |&gt;\n    create_gt()\n\n\n\n\n\n\n      developmental_stage\n      num_cells\n      median_umis\n    \n\n\n\nDay3\n159\n7,329,571.0\n\n\n\nDay4\n108\n7,685,250.0\n\n\n\nDay5\n68\n7,692,113.5\n\n\n\nDay6\n80\n6,475,820.5\n\n\n\nDay7\n80\n8,645,422.0\n\n\nSum\n—\n495\n—"
  },
  {
    "objectID": "summarize_datasets.html#r-session-info",
    "href": "summarize_datasets.html#r-session-info",
    "title": "Dataset Summary",
    "section": "R session info",
    "text": "R session info\n\ndevtools::session_info()\n\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.1 (2023-06-16)\n os       macOS Ventura 13.5\n system   aarch64, darwin22.4.0\n ui       unknown\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       America/Chicago\n date     2023-08-12\n pandoc   2.19.2 @ /Users/jialei/.pyenv/shims/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package     * version     date (UTC) lib source\n bit           4.0.5       2022-11-15 [1] CRAN (R 4.3.0)\n bit64         4.0.5       2020-08-30 [1] CRAN (R 4.3.0)\n cachem        1.0.8       2023-05-01 [1] CRAN (R 4.3.0)\n callr         3.7.3       2022-11-02 [1] CRAN (R 4.3.0)\n cli           3.6.1       2023-03-23 [1] CRAN (R 4.3.0)\n codetools     0.2-19      2023-02-01 [2] CRAN (R 4.3.1)\n colorspace    2.1-0       2023-01-23 [1] CRAN (R 4.3.0)\n crayon        1.5.2       2022-09-29 [1] CRAN (R 4.3.0)\n devtools      2.4.5.9000  2023-08-11 [1] Github (r-lib/devtools@163c3f2)\n digest        0.6.33      2023-07-07 [1] CRAN (R 4.3.1)\n dplyr       * 1.1.2.9000  2023-07-19 [1] Github (tidyverse/dplyr@c963d4d)\n ellipsis      0.3.2       2021-04-29 [1] CRAN (R 4.3.0)\n evaluate      0.21        2023-05-05 [1] CRAN (R 4.3.0)\n extrafont   * 0.19        2023-01-18 [1] CRAN (R 4.3.0)\n extrafontdb   1.0         2012-06-11 [1] CRAN (R 4.3.0)\n fansi         1.0.4       2023-01-22 [1] CRAN (R 4.3.0)\n farver        2.1.1       2022-07-06 [1] CRAN (R 4.3.0)\n fastmap       1.1.1       2023-02-24 [1] CRAN (R 4.3.0)\n forcats     * 1.0.0.9000  2023-04-23 [1] Github (tidyverse/forcats@4a8525a)\n fs            1.6.3       2023-07-20 [1] CRAN (R 4.3.1)\n furrr       * 0.3.1       2022-08-15 [1] CRAN (R 4.3.1)\n future      * 1.33.0      2023-07-01 [1] CRAN (R 4.3.1)\n generics      0.1.3       2022-07-05 [1] CRAN (R 4.3.0)\n ggplot2     * 3.4.2.9000  2023-08-11 [1] Github (tidyverse/ggplot2@2cd0e96)\n globals       0.16.2      2022-11-21 [1] CRAN (R 4.3.0)\n glue          1.6.2.9000  2023-04-23 [1] Github (tidyverse/glue@cbac82a)\n gt            0.9.0.9000  2023-08-11 [1] Github (rstudio/gt@a3cc005)\n gtable        0.3.3.9000  2023-04-23 [1] Github (r-lib/gtable@c56fd4f)\n hms           1.1.3       2023-03-21 [1] CRAN (R 4.3.0)\n htmltools     0.5.6       2023-08-10 [1] CRAN (R 4.3.1)\n htmlwidgets   1.6.2       2023-03-17 [1] CRAN (R 4.3.0)\n jsonlite      1.8.7       2023-06-29 [1] CRAN (R 4.3.1)\n knitr         1.43        2023-05-25 [1] CRAN (R 4.3.0)\n lattice       0.21-8      2023-04-05 [2] CRAN (R 4.3.1)\n lifecycle     1.0.3       2022-10-07 [1] CRAN (R 4.3.0)\n listenv       0.9.0       2022-12-16 [1] CRAN (R 4.3.0)\n lubridate   * 1.9.2.9000  2023-07-22 [1] Github (tidyverse/lubridate@cae67ea)\n magrittr      2.0.3       2022-03-30 [1] CRAN (R 4.3.0)\n Matrix      * 1.6-0       2023-07-08 [2] CRAN (R 4.3.1)\n memoise       2.0.1       2021-11-26 [1] CRAN (R 4.3.0)\n munsell       0.5.0       2018-06-12 [1] CRAN (R 4.3.0)\n parallelly    1.36.0      2023-05-26 [1] CRAN (R 4.3.0)\n patchwork   * 1.1.2.9000  2023-08-11 [1] Github (thomasp85/patchwork@bd57553)\n pillar        1.9.0       2023-03-22 [1] CRAN (R 4.3.0)\n pkgbuild      1.4.2       2023-06-26 [1] CRAN (R 4.3.1)\n pkgconfig     2.0.3       2019-09-22 [1] CRAN (R 4.3.0)\n pkgload       1.3.2.9000  2023-07-05 [1] Github (r-lib/pkgload@3cf9896)\n png           0.1-8       2022-11-29 [1] CRAN (R 4.3.0)\n prettyunits   1.1.1.9000  2023-04-23 [1] Github (r-lib/prettyunits@8706d89)\n processx      3.8.2       2023-06-30 [1] CRAN (R 4.3.1)\n ps            1.7.5       2023-04-18 [1] CRAN (R 4.3.0)\n purrr       * 1.0.2.9000  2023-08-11 [1] Github (tidyverse/purrr@ac4f5a9)\n R.cache       0.16.0      2022-07-21 [1] CRAN (R 4.3.0)\n R.methodsS3   1.8.2       2022-06-13 [1] CRAN (R 4.3.0)\n R.oo          1.25.0      2022-06-12 [1] CRAN (R 4.3.0)\n R.utils       2.12.2      2022-11-11 [1] CRAN (R 4.3.0)\n R6            2.5.1.9000  2023-04-23 [1] Github (r-lib/R6@e97cca7)\n Rcpp          1.0.11      2023-07-06 [1] CRAN (R 4.3.1)\n readr       * 2.1.4.9000  2023-08-03 [1] Github (tidyverse/readr@80e4dc1)\n remotes       2.4.2.9000  2023-06-09 [1] Github (r-lib/remotes@8875171)\n reticulate    1.31        2023-08-10 [1] CRAN (R 4.3.1)\n rlang         1.1.1.9000  2023-06-09 [1] Github (r-lib/rlang@c55f602)\n rmarkdown     2.23.4      2023-07-27 [1] Github (rstudio/rmarkdown@054d735)\n rstudioapi    0.15.0.9000 2023-07-19 [1] Github (rstudio/rstudioapi@feceaef)\n Rttf2pt1      1.3.12      2023-01-22 [1] CRAN (R 4.3.0)\n sass          0.4.7       2023-07-15 [1] CRAN (R 4.3.1)\n scales        1.2.1       2022-08-20 [1] CRAN (R 4.3.0)\n sessioninfo   1.2.2       2021-12-06 [1] CRAN (R 4.3.0)\n stringi       1.7.12      2023-01-11 [1] CRAN (R 4.3.0)\n stringr     * 1.5.0.9000  2023-08-11 [1] Github (tidyverse/stringr@08ff36f)\n styler      * 1.10.1      2023-07-17 [1] Github (r-lib/styler@aca7223)\n tibble      * 3.2.1.9005  2023-05-28 [1] Github (tidyverse/tibble@4de5c15)\n tidyr       * 1.3.0.9000  2023-04-23 [1] Github (tidyverse/tidyr@0764e65)\n tidyselect    1.2.0       2022-10-10 [1] CRAN (R 4.3.0)\n tidyverse   * 2.0.0.9000  2023-04-23 [1] Github (tidyverse/tidyverse@8ec2e1f)\n timechange    0.2.0       2023-01-11 [1] CRAN (R 4.3.0)\n tzdb          0.4.0       2023-05-12 [1] CRAN (R 4.3.0)\n usethis       2.2.2.9000  2023-07-11 [1] Github (r-lib/usethis@467ff57)\n utf8          1.2.3       2023-01-31 [1] CRAN (R 4.3.0)\n vctrs         0.6.3       2023-06-14 [1] CRAN (R 4.3.0)\n vroom         1.6.3.9000  2023-04-30 [1] Github (tidyverse/vroom@89b6aac)\n withr         2.5.0       2022-03-03 [1] CRAN (R 4.3.0)\n xfun          0.40        2023-08-09 [1] CRAN (R 4.3.1)\n xml2          1.3.5       2023-07-06 [1] CRAN (R 4.3.1)\n yaml          2.3.7       2023-01-23 [1] CRAN (R 4.3.0)\n\n [1] /opt/homebrew/lib/R/4.3/site-library\n [2] /opt/homebrew/Cellar/r/4.3.1/lib/R/library\n\n─ Python configuration ───────────────────────────────────────────────────────\n python:         /Users/jialei/.pyenv/shims/python\n libpython:      /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/libpython3.10.dylib\n pythonhome:     /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3:/Users/jialei/.pyenv/versions/mambaforge-22.9.0-3\n version:        3.10.9 | packaged by conda-forge | (main, Feb  2 2023, 20:26:08) [Clang 14.0.6 ]\n numpy:          /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/numpy\n numpy_version:  1.24.3\n anndata:        /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/anndata\n \n NOTE: Python version was forced by RETICULATE_PYTHON\n\n──────────────────────────────────────────────────────────────────────────────\n\n\n\n\nStyling  1  files:\n summarize_datasets.qmd ✔ \n────────────────────────────────────────\nStatus  Count   Legend \n✔   1   File unchanged.\nℹ   0   File changed.\n✖   0   Styling threw an error.\n────────────────────────────────────────"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "from datetime import datetime\ndatetime.today().strftime(\"%Y-%m-%d %H:%M:%S\")\n\n'2023-08-12 10:59:42'"
  },
  {
    "objectID": "preprocess.html",
    "href": "preprocess.html",
    "title": "Data Preprocessing",
    "section": "",
    "text": "Sys.time()\n\n[1] \"2023-08-12 10:58:13 CDT\"\nSys.timezone()\n\n[1] \"America/Chicago\""
  },
  {
    "objectID": "preprocess.html#preparation",
    "href": "preprocess.html#preparation",
    "title": "Data Preprocessing",
    "section": "Preparation",
    "text": "Preparation\n\nPROJECT_DIR &lt;- \"/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation\"\n\nFunctions\nLoad required packages.\n\nlibrary(tidyverse)\n## ── Attaching core tidyverse packages ─────────────────── tidyverse 2.0.0.9000 ──\n## ✔ dplyr     1.1.2.9000     ✔ readr     2.1.4.9000\n## ✔ forcats   1.0.0.9000     ✔ stringr   1.5.0.9000\n## ✔ ggplot2   3.4.2.9000     ✔ tibble    3.2.1.9005\n## ✔ lubridate 1.9.2.9000     ✔ tidyr     1.3.0.9000\n## ✔ purrr     1.0.2.9000     \n## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n## ✖ dplyr::filter() masks stats::filter()\n## ✖ dplyr::lag()    masks stats::lag()\n## ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\nlibrary(Matrix)\n## \n## Attaching package: 'Matrix'\n## \n## The following objects are masked from 'package:tidyr':\n## \n##     expand, pack, unpack\nlibrary(patchwork)\nlibrary(extrafont)\n## Registering fonts with R\n\n\nsource(\n    file = file.path(\n        SCRIPT_DIR,\n        \"utilities.R\"\n    )\n)\n\n\n`%+replace%` &lt;- ggplot2::`%+replace%`\n\n\nlibrary(knitr)\n\nknit_print.data.frame &lt;- function(x, options, ...) {\n    rmarkdown::paged_table(x, options) |&gt;\n        rmarkdown:::print.paged_df()\n}\n\nregisterS3method(\"knit_print\", \"data.frame\", knit_print.data.frame)\n\nPython env\n\nad &lt;- reticulate::import(module = \"anndata\", convert = TRUE)\nprint(ad$`__version__`)\n\n[1] \"0.8.0\"\n\n\n\nreticulate::py_config()\n\npython:         /Users/jialei/.pyenv/shims/python\nlibpython:      /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/libpython3.10.dylib\npythonhome:     /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3:/Users/jialei/.pyenv/versions/mambaforge-22.9.0-3\nversion:        3.10.9 | packaged by conda-forge | (main, Feb  2 2023, 20:26:08) [Clang 14.0.6 ]\nnumpy:          /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/numpy\nnumpy_version:  1.24.3\nanndata:        /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/anndata\n\nNOTE: Python version was forced by RETICULATE_PYTHON"
  },
  {
    "objectID": "preprocess.html#preprocessing",
    "href": "preprocess.html#preprocessing",
    "title": "Data Preprocessing",
    "section": "Preprocessing",
    "text": "Preprocessing\n\nlibraries &lt;- c(\n    \"LW119\",\n    \"LW120\",\n    \"LW121\",\n    \"LW122\",\n    \"LW186\",\n    \"LW187\",\n    \"LW188\",\n    \"LW189\",\n    \"LW202\",\n    \"LW203\",\n    \"LW204\"\n)\n\nCheck files.\n\npurrr::map_lgl(libraries, \\(x) {\n    file_path &lt;- file.path(\n        PROJECT_DIR,\n        \"raw\",\n        x,\n        \"preprocessing\",\n        \"filtered_feature_bc_matrix.h5\"\n    )\n    cat(file_path, \"\\n\")\n    file.exists(file_path)\n})\n\n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/LW119/preprocessing/filtered_feature_bc_matrix.h5 \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/LW120/preprocessing/filtered_feature_bc_matrix.h5 \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/LW121/preprocessing/filtered_feature_bc_matrix.h5 \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/LW122/preprocessing/filtered_feature_bc_matrix.h5 \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/LW186/preprocessing/filtered_feature_bc_matrix.h5 \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/LW187/preprocessing/filtered_feature_bc_matrix.h5 \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/LW188/preprocessing/filtered_feature_bc_matrix.h5 \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/LW189/preprocessing/filtered_feature_bc_matrix.h5 \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/LW202/preprocessing/filtered_feature_bc_matrix.h5 \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/LW203/preprocessing/filtered_feature_bc_matrix.h5 \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/LW204/preprocessing/filtered_feature_bc_matrix.h5 \n\n\n [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n\n\ncells_selected_files &lt;- c(\n    file.path(\n        PROJECT_DIR,\n        \"raw\",\n        \"LW119\",\n        \"preprocessing\",\n        \"cells_scrublet_log_0.39_98_0.0418.txt\"\n    ),\n    file.path(\n        PROJECT_DIR,\n        \"raw\",\n        \"LW120\",\n        \"matrix\",\n        \"cells_selected_cumulative.txt\"\n    ),\n    file.path(\n        PROJECT_DIR,\n        \"raw\",\n        \"LW121\",\n        \"preprocessing\",\n        \"cells_scrublet_zscore_0.16_753_0.1174.txt\"\n    ),\n    file.path(\n        PROJECT_DIR,\n        \"raw\",\n        \"LW122\",\n        \"matrix\",\n        \"cells_selected_cumulative.txt\"\n    ),\n    NA,\n    NA,\n    NA,\n    NA,\n    file.path(\n        PROJECT_DIR,\n        \"raw\",\n        \"LW202\",\n        \"preprocessing\",\n        \"cells_scrublet_log_0.42_86_0.0153.txt\"\n    ),\n    NA,\n    NA\n)\n\n\npurrr::map_lgl(cells_selected_files, \\(x) {\n    cat(x, \"\\n\")\n    file.exists(x)\n})\n\n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/LW119/preprocessing/cells_scrublet_log_0.39_98_0.0418.txt \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/LW120/matrix/cells_selected_cumulative.txt \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/LW121/preprocessing/cells_scrublet_zscore_0.16_753_0.1174.txt \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/LW122/matrix/cells_selected_cumulative.txt \nNA \nNA \nNA \nNA \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/LW202/preprocessing/cells_scrublet_log_0.42_86_0.0153.txt \nNA \nNA \n\n\n [1]  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE\n\n\n\nCreate anndata objects.\n\nadatas &lt;- purrr::map2(libraries, cells_selected_files, \\(x, y) {\n    adata &lt;- construct_h5ad(\n        h5_file = file.path(\n            PROJECT_DIR,\n            \"raw\",\n            x,\n            \"preprocessing\",\n            \"filtered_feature_bc_matrix.h5\"\n        ),\n        cell_id_prefix = x,\n        cells_selected_file = y\n    )\n})\nnames(adatas) &lt;- libraries\n\n\nadatas\n\n$LW119\nAnnData object with n_obs × n_vars = 2246 × 33538\n    obs: 'batch', 'num_umis', 'num_features', 'mt_percentage'\n    var: 'feature', 'symbol'\n\n$LW120\nAnnData object with n_obs × n_vars = 550 × 33538\n    obs: 'batch', 'num_umis', 'num_features', 'mt_percentage'\n    var: 'feature', 'symbol'\n\n$LW121\nAnnData object with n_obs × n_vars = 5660 × 33538\n    obs: 'batch', 'num_umis', 'num_features', 'mt_percentage'\n    var: 'feature', 'symbol'\n\n$LW122\nAnnData object with n_obs × n_vars = 375 × 33538\n    obs: 'batch', 'num_umis', 'num_features', 'mt_percentage'\n    var: 'feature', 'symbol'\n\n$LW186\nAnnData object with n_obs × n_vars = 12303 × 33538\n    obs: 'batch', 'num_umis', 'num_features', 'mt_percentage'\n    var: 'feature', 'symbol'\n\n$LW187\nAnnData object with n_obs × n_vars = 4263 × 33538\n    obs: 'batch', 'num_umis', 'num_features', 'mt_percentage'\n    var: 'feature', 'symbol'\n\n$LW188\nAnnData object with n_obs × n_vars = 7185 × 33538\n    obs: 'batch', 'num_umis', 'num_features', 'mt_percentage'\n    var: 'feature', 'symbol'\n\n$LW189\nAnnData object with n_obs × n_vars = 3808 × 33538\n    obs: 'batch', 'num_umis', 'num_features', 'mt_percentage'\n    var: 'feature', 'symbol'\n\n$LW202\nAnnData object with n_obs × n_vars = 5534 × 33538\n    obs: 'batch', 'num_umis', 'num_features', 'mt_percentage'\n    var: 'feature', 'symbol'\n\n$LW203\nAnnData object with n_obs × n_vars = 2631 × 33538\n    obs: 'batch', 'num_umis', 'num_features', 'mt_percentage'\n    var: 'feature', 'symbol'\n\n$LW204\nAnnData object with n_obs × n_vars = 8800 × 33538\n    obs: 'batch', 'num_umis', 'num_features', 'mt_percentage'\n    var: 'feature', 'symbol'\n\n\n\nVisualize mitochondrial UMI percentage.\n\npurrr::map(names(adatas), \\(x) {\n    plot_mt_percentage(adata = adatas[[x]]) +\n        ggplot2::ggtitle(x) +\n        ggplot2::theme(plot.title = element_text(size = 7))\n}) |&gt;\n    purrr::reduce(`+`) +\n    patchwork::plot_layout(ncol = 1) +\n    patchwork::plot_annotation(\n        theme = ggplot2::theme(plot.margin = ggplot2::margin())\n    )"
  },
  {
    "objectID": "preprocess.html#r-session-info",
    "href": "preprocess.html#r-session-info",
    "title": "Data Preprocessing",
    "section": "R session info",
    "text": "R session info\n\ndevtools::session_info()\n\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.1 (2023-06-16)\n os       macOS Ventura 13.5\n system   aarch64, darwin22.4.0\n ui       unknown\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       America/Chicago\n date     2023-08-12\n pandoc   2.19.2 @ /Users/jialei/.pyenv/shims/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package      * version     date (UTC) lib source\n cachem         1.0.8       2023-05-01 [1] CRAN (R 4.3.0)\n callr          3.7.3       2022-11-02 [1] CRAN (R 4.3.0)\n cli            3.6.1       2023-03-23 [1] CRAN (R 4.3.0)\n colorspace     2.1-0       2023-01-23 [1] CRAN (R 4.3.0)\n crayon         1.5.2       2022-09-29 [1] CRAN (R 4.3.0)\n devtools       2.4.5.9000  2023-08-11 [1] Github (r-lib/devtools@163c3f2)\n digest         0.6.33      2023-07-07 [1] CRAN (R 4.3.1)\n dplyr        * 1.1.2.9000  2023-07-19 [1] Github (tidyverse/dplyr@c963d4d)\n ellipsis       0.3.2       2021-04-29 [1] CRAN (R 4.3.0)\n evaluate       0.21        2023-05-05 [1] CRAN (R 4.3.0)\n extrafont    * 0.19        2023-01-18 [1] CRAN (R 4.3.0)\n extrafontdb    1.0         2012-06-11 [1] CRAN (R 4.3.0)\n fansi          1.0.4       2023-01-22 [1] CRAN (R 4.3.0)\n farver         2.1.1       2022-07-06 [1] CRAN (R 4.3.0)\n fastmap        1.1.1       2023-02-24 [1] CRAN (R 4.3.0)\n forcats      * 1.0.0.9000  2023-04-23 [1] Github (tidyverse/forcats@4a8525a)\n fs             1.6.3       2023-07-20 [1] CRAN (R 4.3.1)\n generics       0.1.3       2022-07-05 [1] CRAN (R 4.3.0)\n ggplot2      * 3.4.2.9000  2023-08-11 [1] Github (tidyverse/ggplot2@2cd0e96)\n glue           1.6.2.9000  2023-04-23 [1] Github (tidyverse/glue@cbac82a)\n gtable         0.3.3.9000  2023-04-23 [1] Github (r-lib/gtable@c56fd4f)\n hms            1.1.3       2023-03-21 [1] CRAN (R 4.3.0)\n htmltools      0.5.6       2023-08-10 [1] CRAN (R 4.3.1)\n htmlwidgets    1.6.2       2023-03-17 [1] CRAN (R 4.3.0)\n jsonlite       1.8.7       2023-06-29 [1] CRAN (R 4.3.1)\n knitr        * 1.43        2023-05-25 [1] CRAN (R 4.3.0)\n labeling       0.4.2       2020-10-20 [1] CRAN (R 4.3.0)\n lattice        0.21-8      2023-04-05 [2] CRAN (R 4.3.1)\n lifecycle      1.0.3       2022-10-07 [1] CRAN (R 4.3.0)\n lubridate    * 1.9.2.9000  2023-07-22 [1] Github (tidyverse/lubridate@cae67ea)\n magrittr       2.0.3       2022-03-30 [1] CRAN (R 4.3.0)\n Matrix       * 1.6-0       2023-07-08 [2] CRAN (R 4.3.1)\n memoise        2.0.1       2021-11-26 [1] CRAN (R 4.3.0)\n munsell        0.5.0       2018-06-12 [1] CRAN (R 4.3.0)\n patchwork    * 1.1.2.9000  2023-08-11 [1] Github (thomasp85/patchwork@bd57553)\n pillar         1.9.0       2023-03-22 [1] CRAN (R 4.3.0)\n pkgbuild       1.4.2       2023-06-26 [1] CRAN (R 4.3.1)\n pkgconfig      2.0.3       2019-09-22 [1] CRAN (R 4.3.0)\n pkgload        1.3.2.9000  2023-07-05 [1] Github (r-lib/pkgload@3cf9896)\n png            0.1-8       2022-11-29 [1] CRAN (R 4.3.0)\n prettyunits    1.1.1.9000  2023-04-23 [1] Github (r-lib/prettyunits@8706d89)\n processx       3.8.2       2023-06-30 [1] CRAN (R 4.3.1)\n ps             1.7.5       2023-04-18 [1] CRAN (R 4.3.0)\n purrr        * 1.0.2.9000  2023-08-11 [1] Github (tidyverse/purrr@ac4f5a9)\n R.cache        0.16.0      2022-07-21 [1] CRAN (R 4.3.0)\n R.methodsS3    1.8.2       2022-06-13 [1] CRAN (R 4.3.0)\n R.oo           1.25.0      2022-06-12 [1] CRAN (R 4.3.0)\n R.utils        2.12.2      2022-11-11 [1] CRAN (R 4.3.0)\n R6             2.5.1.9000  2023-04-23 [1] Github (r-lib/R6@e97cca7)\n Rcpp           1.0.11      2023-07-06 [1] CRAN (R 4.3.1)\n readr        * 2.1.4.9000  2023-08-03 [1] Github (tidyverse/readr@80e4dc1)\n remotes        2.4.2.9000  2023-06-09 [1] Github (r-lib/remotes@8875171)\n reticulate     1.31        2023-08-10 [1] CRAN (R 4.3.1)\n rhdf5          2.44.0      2023-04-25 [1] Bioconductor\n rhdf5filters   1.12.1      2023-04-30 [1] Bioconductor\n Rhdf5lib       1.22.0      2023-04-25 [1] Bioconductor\n rlang          1.1.1.9000  2023-06-09 [1] Github (r-lib/rlang@c55f602)\n rmarkdown      2.23.4      2023-07-27 [1] Github (rstudio/rmarkdown@054d735)\n rstudioapi     0.15.0.9000 2023-07-19 [1] Github (rstudio/rstudioapi@feceaef)\n Rttf2pt1       1.3.12      2023-01-22 [1] CRAN (R 4.3.0)\n scales         1.2.1       2022-08-20 [1] CRAN (R 4.3.0)\n sessioninfo    1.2.2       2021-12-06 [1] CRAN (R 4.3.0)\n stringi        1.7.12      2023-01-11 [1] CRAN (R 4.3.0)\n stringr      * 1.5.0.9000  2023-08-11 [1] Github (tidyverse/stringr@08ff36f)\n styler       * 1.10.1      2023-07-17 [1] Github (r-lib/styler@aca7223)\n tibble       * 3.2.1.9005  2023-05-28 [1] Github (tidyverse/tibble@4de5c15)\n tidyr        * 1.3.0.9000  2023-04-23 [1] Github (tidyverse/tidyr@0764e65)\n tidyselect     1.2.0       2022-10-10 [1] CRAN (R 4.3.0)\n tidyverse    * 2.0.0.9000  2023-04-23 [1] Github (tidyverse/tidyverse@8ec2e1f)\n timechange     0.2.0       2023-01-11 [1] CRAN (R 4.3.0)\n tzdb           0.4.0       2023-05-12 [1] CRAN (R 4.3.0)\n usethis        2.2.2.9000  2023-07-11 [1] Github (r-lib/usethis@467ff57)\n utf8           1.2.3       2023-01-31 [1] CRAN (R 4.3.0)\n vctrs          0.6.3       2023-06-14 [1] CRAN (R 4.3.0)\n withr          2.5.0       2022-03-03 [1] CRAN (R 4.3.0)\n xfun           0.40        2023-08-09 [1] CRAN (R 4.3.1)\n yaml           2.3.7       2023-01-23 [1] CRAN (R 4.3.0)\n\n [1] /opt/homebrew/lib/R/4.3/site-library\n [2] /opt/homebrew/Cellar/r/4.3.1/lib/R/library\n\n─ Python configuration ───────────────────────────────────────────────────────\n python:         /Users/jialei/.pyenv/shims/python\n libpython:      /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/libpython3.10.dylib\n pythonhome:     /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3:/Users/jialei/.pyenv/versions/mambaforge-22.9.0-3\n version:        3.10.9 | packaged by conda-forge | (main, Feb  2 2023, 20:26:08) [Clang 14.0.6 ]\n numpy:          /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/numpy\n numpy_version:  1.24.3\n anndata:        /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/anndata\n \n NOTE: Python version was forced by RETICULATE_PYTHON\n\n──────────────────────────────────────────────────────────────────────────────\n\n\n\n\nStyling  1  files:\n preprocess.qmd ✔ \n────────────────────────────────────────\nStatus  Count   Legend \n✔   1   File unchanged.\nℹ   0   File changed.\n✖   0   Styling threw an error.\n────────────────────────────────────────"
  },
  {
    "objectID": "cluster_blastoids_public.html",
    "href": "cluster_blastoids_public.html",
    "title": "Clustering of Human Blastoid Cells with Public Datasets",
    "section": "",
    "text": "Sys.time()\n\n[1] \"2023-02-25 17:07:22 CST\"\nSys.timezone()\n\n[1] \"America/Chicago\"\nimport multiprocessing\nimport sys\n\nsys.path.append(\"/Users/jialei/Dropbox/Data/Projects/UTSW/Scripts/utilities\")\nsys.path.append(\"/project/GCRB/Hon_lab/s166631/00.bin/utilities/\")\n\nfrom pathlib import Path\nfrom random import sample\n\nimport harmonypy as hm\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport phate\nimport scanpy as sc\nimport umap\n\nfrom utilities import (\n    plot_embedding,\n    plot_pca_variance_explained,\n    plot_cluster_composition,\n)\nparams = {\n    \"pdf.fonttype\": 42,\n    \"font.family\": \"sans-serif\",\n    \"font.sans-serif\": \"Arial\",\n    \"mathtext.default\": \"regular\",\n    \"figure.dpi\": 96 * 1.5,\n}\nplt.rcParams.update(params)"
  },
  {
    "objectID": "cluster_blastoids_public.html#parameters",
    "href": "cluster_blastoids_public.html#parameters",
    "title": "Clustering of Human Blastoid Cells with Public Datasets",
    "section": "Parameters",
    "text": "Parameters\n\nPROJECT_DIR = Path(\n    \"/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation\") / \"raw\"\n\nSEED = 20210719\nN_COMPONENTS = 100\n\nMINIMAL_NUM_GENES_REQUIRED_FOR_CELL = 200\nMINIMAL_NUM_CELLS_REQUIRED_FOR_GENE = 30\nMINIMAL_NUM_COUNTS_REQUIRED_FOR_GENE = 60\nMT_PERCENTAGE_CUTOFF = 0.2\n\nN_THREADS = multiprocessing.cpu_count() - 1\nN_SAMPLING = None"
  },
  {
    "objectID": "cluster_blastoids_public.html#data-preparation",
    "href": "cluster_blastoids_public.html#data-preparation",
    "title": "Clustering of Human Blastoid Cells with Public Datasets",
    "section": "Data preparation",
    "text": "Data preparation\nData loading\nThis study\n\n# This study; LW119_LW120_LW121_LW122\nlibraries = [\"LW119\", \"LW120\", \"LW121\", \"LW122\"]\nadatas = [\n    sc.read_h5ad(filename=PROJECT_DIR / i / \"matrix\" / \"adata.h5ad\")\n    for i in libraries\n]\n\nYu et al. 2021\n\n# Yu et al. 2021; PRJNA632839; LW60_LW61\nadata = sc.read_h5ad(\n    filename=PROJECT_DIR\n    / \"PRJNA632839/LW36_LW58_LW59_LW60_LW61\"\n    / \"matrix\"\n    / \"adata.h5ad\"\n)\nadatas.append(adata[adata.obs[\"batch\"].isin([\"LW60\", \"LW61\"]), :])\n\n# filter mt_percentage\nadatas = [\n    i[\n        i.obs[\"mt_percentage\"] &lt;= MT_PERCENTAGE_CUTOFF,\n    ]\n    for i in adatas\n]\n\nPublic\n\n# Petropoulos et al. 2016; PRJEB11202\n# Xiang et al. 2020; PRJNA562548\n# Tyser et al. 2021; PRJEB40781\n# Zheng et al. 2019; PRJNA555602\n# Yanagida et al. 2021; PRJNA720968\nlibraries = [\n    \"PRJEB11202\",\n    \"PRJNA562548\",\n    \"PRJEB40781\",\n    \"PRJNA555602\",\n    \"PRJNA720968\",\n]\n\nadatas_public = [\n    sc.read_h5ad(filename=PROJECT_DIR / \"public\" / i / \"matrix\" / \"adata.h5ad\")\n    for i in libraries\n]\nadatas.extend(adatas_public)\n\ndel adatas_public\n\n\n# merge adatas\nadata = sc.concat(adatas, axis=0)\n\n\nprint(f\"Raw median UMIs per cell: {np.median(a=adata.X.sum(axis=1).A1):,}\")\n## Raw median UMIs per cell: 19,032.0\nprint(f\"Number of cells before filtering: {adata.n_obs:,}\")\n## Number of cells before filtering: 31,481\nprint(f\"Number of features before filtering: {adata.n_vars:,}\")\n## Number of features before filtering: 33,538\nprint(adata.obs[\"batch\"].value_counts())\n## GSM3956280     5454\n## LW61           5156\n## LW121          5130\n## GSM3956281     4512\n## LW60           4497\n## LW119          2236\n## PRJEB11202     1529\n## PRJEB40781     1195\n## PRJNA562548     555\n## PRJNA720968     495\n## LW120           435\n## LW122           287\n## Name: batch, dtype: int64\n\nPreprocessing\n\n# reorder cells\nadata = adata[np.sort(adata.obs.index), :]\n\n# filter cells\nadata = adata[\n    (adata.X &gt; 0).sum(axis=1).A1 &gt;= MINIMAL_NUM_GENES_REQUIRED_FOR_CELL, :\n]\n\n\nmatrix_cpm_use = adata.X.transpose(copy=True)\nfeatures = adata.var_names\n\n\n# sample cells\nif N_SAMPLING:\n    adata = adata[sample(list(adata.obs.index.values), N_SAMPLING), :]\n    print(f\"Number of cells after sampling: {adata.n_obs:,}\")\n\n# filter features\nrow_idx = np.logical_and(\n    (adata.X &gt; 0).sum(axis=0).A1 &gt;= MINIMAL_NUM_CELLS_REQUIRED_FOR_GENE,\n    (adata.X).sum(axis=0).A1 &gt;= MINIMAL_NUM_COUNTS_REQUIRED_FOR_GENE,\n)\nadata = adata[:, row_idx]\n\n\nprint(f\"Median UMIs per cell: {np.median(a=adata.X.sum(axis=1).A1):,}\")\n## Median UMIs per cell: 19,032.0\nprint(f\"Number of cells after filtering: {adata.n_obs:,}\")\n## Number of cells after filtering: 31,481\nprint(f\"Number of features after filtering: {adata.n_vars:,}\")\n## Number of features after filtering: 26,297\n\n\n# normalize\nsc.pp.normalize_total(\n    adata=adata,\n    target_sum=np.median(a=adata.X.sum(axis=1).A1),\n    exclude_highly_expressed=False,\n)\n\n/Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/scanpy/preprocessing/_normalization.py:138: UserWarning: Revieved a view of an AnnData. Making a copy.\n  view_to_actual(adata)\n/Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/scanpy/preprocessing/_normalization.py:138: FutureWarning: X.dtype being converted to np.float32 from int64. In the next version of anndata (0.9) conversion will not be automatic. Pass dtype explicitly to avoid this warning. Pass `AnnData(X, dtype=X.dtype, ...)` to get the future behavour.\n  view_to_actual(adata)\n\n\n\n# logarithmize\nsc.pp.log1p(adata)\n\n\n# detect hvgs\nif HVG:\n    sc.pp.highly_variable_genes(\n        adata,\n        min_mean=0.0125,\n        max_mean=3,\n        min_disp=0.5,\n        flavor=\"seurat\",\n        batch_key=\"batch\",\n    )\n\n# standardize\n\n/Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:475: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n  hvg = hvg.append(missing_hvg, ignore_index=True)\n/Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:475: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n  hvg = hvg.append(missing_hvg, ignore_index=True)\n/Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:475: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n  hvg = hvg.append(missing_hvg, ignore_index=True)\n/Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:475: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n  hvg = hvg.append(missing_hvg, ignore_index=True)\n/Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:475: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n  hvg = hvg.append(missing_hvg, ignore_index=True)\n/Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:475: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n  hvg = hvg.append(missing_hvg, ignore_index=True)\n/Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:475: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n  hvg = hvg.append(missing_hvg, ignore_index=True)\n/Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:475: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n  hvg = hvg.append(missing_hvg, ignore_index=True)\n/Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:475: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n  hvg = hvg.append(missing_hvg, ignore_index=True)\n/Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:475: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n  hvg = hvg.append(missing_hvg, ignore_index=True)\n/Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:475: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n  hvg = hvg.append(missing_hvg, ignore_index=True)\n/Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:475: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n  hvg = hvg.append(missing_hvg, ignore_index=True)\n\nsc.pp.scale(\n    adata,\n    zero_center=ZERO_CENTER,\n    max_value=None,\n    copy=False,\n    layer=None,\n    obsm=None,\n)"
  },
  {
    "objectID": "cluster_blastoids_public.html#dimensionality-reduction",
    "href": "cluster_blastoids_public.html#dimensionality-reduction",
    "title": "Clustering of Human Blastoid Cells with Public Datasets",
    "section": "Dimensionality reduction",
    "text": "Dimensionality reduction\nPCA\n\nsc.tl.pca(\n    adata,\n    n_comps=N_COMPONENTS,\n    zero_center=ZERO_CENTER,\n    svd_solver=\"arpack\",\n    random_state=SEED,\n    return_info=False,\n    use_highly_variable=HVG,\n    dtype=\"float64\",\n    copy=False,\n    chunked=False,\n)\n\nprincipal_components = adata.obsm[\"X_pca\"]\n\n\nwith plt.style.context(\"ggplot\"):\n    fig, ax = plt.subplots(nrows=1, ncols=1, figsize=(5, 2.5))\n\n    plot_pca_variance_explained(\n        x=adata.uns[\"pca\"][\"variance_ratio\"],\n        num_pcs=30,\n        ax=ax,\n    )\n\n    ax.set(ylim=(-0.0025, max(ax.get_ylim())))\n\n    plt.tight_layout()\n    plt.show()\n\n    plt.close(fig=fig)\n\n&lt;AxesSubplot: xlabel='Principal component', ylabel='Explained variance ratio'&gt;\n[(-0.0025, 0.049999999999999996)]\n\n\n\n\n\n\n\n\nBatch effect removal\n\n# remove batch effect\nbatches = adata.obs[\"batch\"].values\nprint(adata.obs[\"batch\"].value_counts())\n\nGSM3956280     5454\nLW61           5156\nLW121          5130\nGSM3956281     4512\nLW60           4497\nLW119          2236\nPRJEB11202     1529\nPRJEB40781     1195\nPRJNA562548     555\nPRJNA720968     495\nLW120           435\nLW122           287\nName: batch, dtype: int64\n\n\n\nif len(set(batches)) &gt; 1:\n\n    ho = hm.run_harmony(\n        data_mat=principal_components,\n        meta_data=pd.DataFrame(\n            {\"batch\": batches}, index=adata.obs.index.values\n        ),\n        vars_use=\"batch\",\n        random_state=SEED,\n    )\n    principal_components_selected = ho.Z_corr.T.astype(np.float64)\n\nelse:\n    principal_components_selected = principal_components.astype(np.float64)\n\n2023-02-25 17:08:20,808 - harmonypy - INFO - Iteration 1 of 10\n2023-02-25 17:08:28,362 - harmonypy - INFO - Iteration 2 of 10\n2023-02-25 17:08:35,736 - harmonypy - INFO - Converged after 2 iterations\n\nprincipal_components_use = principal_components_selected[:, range(16)]\n\nUMAP\n\nembedding_umap = umap.UMAP(\n    n_neighbors=15,\n    n_components=2,\n    metric=\"euclidean\",\n    min_dist=0.1,\n    spread=1.0,\n    random_state=SEED,\n    transform_seed=42,\n    verbose=True,\n).fit_transform(principal_components_use)\n\nUMAP(random_state=20210719, verbose=True)\nSat Feb 25 17:08:37 2023 Construct fuzzy simplicial set\nSat Feb 25 17:08:37 2023 Finding Nearest Neighbors\nSat Feb 25 17:08:37 2023 Building RP forest with 14 trees\nSat Feb 25 17:08:37 2023 NN descent for 15 iterations\n     1  /  15\n     2  /  15\n     3  /  15\n    Stopping threshold met -- exiting after 3 iterations\nSat Feb 25 17:08:44 2023 Finished Nearest Neighbor Search\nSat Feb 25 17:08:45 2023 Construct embedding\nSat Feb 25 17:08:57 2023 Finished embedding\n\n\nEpochs completed:   0%|            0/200 [00:00]\nEpochs completed:   0%|            1/200 [00:00]\nEpochs completed:   2%| 2          5/200 [00:00]\nEpochs completed:   4%| 3          7/200 [00:00]\nEpochs completed:   4%| 4          9/200 [00:00]\nEpochs completed:   6%| 5          11/200 [00:00]\nEpochs completed:   6%| 6          13/200 [00:00]\nEpochs completed:   8%| 7          15/200 [00:00]\nEpochs completed:   8%| 8          17/200 [00:01]\nEpochs completed:  10%| 9          19/200 [00:01]\nEpochs completed:  10%| #          21/200 [00:01]\nEpochs completed:  12%| #1         23/200 [00:01]\nEpochs completed:  12%| #2         25/200 [00:01]\nEpochs completed:  14%| #3         27/200 [00:01]\nEpochs completed:  14%| #4         29/200 [00:01]\nEpochs completed:  16%| #5         31/200 [00:01]\nEpochs completed:  16%| #6         33/200 [00:01]\nEpochs completed:  18%| #7         35/200 [00:02]\nEpochs completed:  18%| #8         37/200 [00:02]\nEpochs completed:  20%| #9         39/200 [00:02]\nEpochs completed:  20%| ##         41/200 [00:02]\nEpochs completed:  22%| ##1        43/200 [00:02]\nEpochs completed:  22%| ##2        45/200 [00:02]\nEpochs completed:  24%| ##3        47/200 [00:02]\nEpochs completed:  24%| ##4        49/200 [00:02]\nEpochs completed:  26%| ##5        51/200 [00:02]\nEpochs completed:  26%| ##6        53/200 [00:03]\nEpochs completed:  28%| ##7        55/200 [00:03]\nEpochs completed:  28%| ##8        57/200 [00:03]\nEpochs completed:  30%| ##9        59/200 [00:03]\nEpochs completed:  30%| ###        61/200 [00:03]\nEpochs completed:  32%| ###1       63/200 [00:03]\nEpochs completed:  32%| ###2       65/200 [00:03]\nEpochs completed:  34%| ###3       67/200 [00:03]\nEpochs completed:  34%| ###4       69/200 [00:03]\nEpochs completed:  36%| ###5       71/200 [00:04]\nEpochs completed:  36%| ###6       73/200 [00:04]\nEpochs completed:  38%| ###7       75/200 [00:04]\nEpochs completed:  38%| ###8       77/200 [00:04]\nEpochs completed:  40%| ###9       79/200 [00:04]\nEpochs completed:  40%| ####       81/200 [00:04]\nEpochs completed:  42%| ####1      83/200 [00:04]\nEpochs completed:  42%| ####2      85/200 [00:04]\nEpochs completed:  44%| ####3      87/200 [00:04]\nEpochs completed:  44%| ####4      89/200 [00:05]\nEpochs completed:  46%| ####5      91/200 [00:05]\nEpochs completed:  46%| ####6      93/200 [00:05]\nEpochs completed:  48%| ####7      95/200 [00:05]\nEpochs completed:  48%| ####8      97/200 [00:05]\nEpochs completed:  50%| ####9      99/200 [00:05]\nEpochs completed:  50%| #####      101/200 [00:05]\nEpochs completed:  52%| #####1     103/200 [00:05]\nEpochs completed:  52%| #####2     105/200 [00:05]\nEpochs completed:  54%| #####3     107/200 [00:06]\nEpochs completed:  55%| #####4     109/200 [00:06]\nEpochs completed:  56%| #####5     111/200 [00:06]\nEpochs completed:  56%| #####6     113/200 [00:06]\nEpochs completed:  57%| #####7     115/200 [00:06]\nEpochs completed:  58%| #####8     117/200 [00:06]\nEpochs completed:  60%| #####9     119/200 [00:06]\nEpochs completed:  60%| ######     121/200 [00:06]\nEpochs completed:  62%| ######1    123/200 [00:06]\nEpochs completed:  62%| ######2    125/200 [00:07]\nEpochs completed:  64%| ######3    127/200 [00:07]\nEpochs completed:  64%| ######4    129/200 [00:07]\nEpochs completed:  66%| ######5    131/200 [00:07]\nEpochs completed:  66%| ######6    133/200 [00:07]\nEpochs completed:  68%| ######7    135/200 [00:07]\nEpochs completed:  68%| ######8    137/200 [00:07]\nEpochs completed:  70%| ######9    139/200 [00:07]\nEpochs completed:  70%| #######    141/200 [00:07]\nEpochs completed:  72%| #######1   143/200 [00:08]\nEpochs completed:  72%| #######2   145/200 [00:08]\nEpochs completed:  74%| #######3   147/200 [00:08]\nEpochs completed:  74%| #######4   149/200 [00:08]\nEpochs completed:  76%| #######5   151/200 [00:08]\nEpochs completed:  76%| #######6   153/200 [00:08]\nEpochs completed:  78%| #######7   155/200 [00:08]\nEpochs completed:  78%| #######8   157/200 [00:08]\nEpochs completed:  80%| #######9   159/200 [00:08]\nEpochs completed:  80%| ########   161/200 [00:09]\nEpochs completed:  82%| ########1  163/200 [00:09]\nEpochs completed:  82%| ########2  165/200 [00:09]\nEpochs completed:  84%| ########3  167/200 [00:09]\nEpochs completed:  84%| ########4  169/200 [00:09]\nEpochs completed:  86%| ########5  171/200 [00:09]\nEpochs completed:  86%| ########6  173/200 [00:09]\nEpochs completed:  88%| ########7  175/200 [00:09]\nEpochs completed:  88%| ########8  177/200 [00:09]\nEpochs completed:  90%| ########9  179/200 [00:10]\nEpochs completed:  90%| #########  181/200 [00:10]\nEpochs completed:  92%| #########1 183/200 [00:10]\nEpochs completed:  92%| #########2 185/200 [00:10]\nEpochs completed:  94%| #########3 187/200 [00:10]\nEpochs completed:  94%| #########4 189/200 [00:10]\nEpochs completed:  96%| #########5 191/200 [00:10]\nEpochs completed:  96%| #########6 193/200 [00:10]\nEpochs completed:  98%| #########7 195/200 [00:10]\nEpochs completed:  98%| #########8 197/200 [00:11]\nEpochs completed: 100%| #########9 199/200 [00:11]\nEpochs completed: 100%| ########## 200/200 [00:11]"
  },
  {
    "objectID": "cluster_blastoids_public.html#clustering",
    "href": "cluster_blastoids_public.html#clustering",
    "title": "Clustering of Human Blastoid Cells with Public Datasets",
    "section": "Clustering",
    "text": "Clustering\n\nadata = sc.AnnData(\n    X=principal_components_use,\n    obs={\"cell\": adata.obs.index.values, \"batch\": batches},\n    dtype=\"float64\",\n)\nadata.obs.index = adata.obs[\"cell\"]\n\nsc.pp.neighbors(\n    adata=adata,\n    n_neighbors=30,\n    n_pcs=0,\n    use_rep=None,\n    knn=True,\n    random_state=SEED,\n    method=\"umap\",\n    metric=\"euclidean\",\n    copy=False,\n)\n\nsc.tl.leiden(\n    adata=adata,\n    resolution=1,\n    random_state=SEED,\n    key_added=\"leiden\",\n    directed=True,\n    use_weights=True,\n    partition_type=None,\n    copy=False,\n)\n\n\nembedding = pd.DataFrame(\n    data=np.concatenate(\n        (adata.obs[[\"batch\", \"leiden\"]], embedding_umap),\n        axis=1,\n    ),\n    index=adata.obs[\"cell\"],\n    columns=[\"batch\", \"leiden\", \"x_umap_min_dist=0.1\", \"y_umap_min_dist=0.1\"],\n)\n\nembedding = embedding.astype(\n    {\n        \"leiden\": int,\n        \"x_umap_min_dist=0.1\": float,\n        \"y_umap_min_dist=0.1\": float,\n    }\n)"
  },
  {
    "objectID": "cluster_blastoids_public.html#visualization",
    "href": "cluster_blastoids_public.html#visualization",
    "title": "Clustering of Human Blastoid Cells with Public Datasets",
    "section": "Visualization",
    "text": "Visualization\nCluster embedding\n\nfig, ax = plt.subplots(nrows=1 * 1, ncols=1, figsize=(4 * 1, 3 * 1))\n\nplot_embedding(\n    embedding=embedding.loc[:, [\"x_umap_min_dist=0.1\", \"y_umap_min_dist=0.1\"]],\n    ax=ax,\n    color_values=[str(i) for i in embedding[\"leiden\"]],\n    title=\"UMAP; Leiden\",\n    show_color_value_labels=True,\n    rasterise=True,\n)\n\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\nplt.close(fig=fig)\n\nCluster distribution\n\nembedding.groupby(by=\"batch\").size().to_frame(name=\"num_cells\")\n\n             num_cells\nbatch                 \nGSM3956280        5454\nGSM3956281        4512\nLW119             2236\nLW120              435\nLW121             5130\nLW122              287\nLW60              4497\nLW61              5156\nPRJEB11202        1529\nPRJEB40781        1195\nPRJNA562548        555\nPRJNA720968        495\n\n\n\n\ncluster_composition = (\n    (\n        embedding.groupby(by=\"leiden\").aggregate(\"batch\").value_counts()\n        / embedding.groupby(by=\"leiden\").aggregate(\"batch\").size()\n    )\n    .to_frame(name=\"percentage\")\n    .reset_index()\n)\n\ncluster_composition = cluster_composition.astype({\"leiden\": str})\n\nclusters_selected = list(\n    np.sort(embedding[\"leiden\"].unique()).astype(dtype=str)[::-1]\n)\n\nbatches_selected = list(embedding[\"batch\"].unique())\n\ncluster_composition = cluster_composition.astype(\n    {\n        \"leiden\": pd.api.types.CategoricalDtype(\n            categories=clusters_selected, ordered=True\n        ),\n        \"batch\": pd.api.types.CategoricalDtype(\n            categories=batches_selected, ordered=True\n        ),\n    }\n)\n\n\nfig, ax = plt.subplots(nrows=1, ncols=1, figsize=(4.5, 4))\n\nplot_cluster_composition(\n    cluster_composition=cluster_composition,\n    x=\"batch\",\n    y=\"leiden\",\n    ax=ax,\n    x_order=batches_selected,\n    y_order=clusters_selected,\n)\n\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\nplt.close(fig=fig)\n\nExpression\n\nmatrix_cpm_use.data = (\n    1_000_000\n    * matrix_cpm_use.data\n    / np.repeat(matrix_cpm_use.sum(axis=0).A1, np.diff(matrix_cpm_use.indptr))\n)\n\n\nFEATURES_SELECTED = [\n    \"ENSG00000204531_POU5F1\",\n    \"ENSG00000203909_DPPA5\",\n    \"ENSG00000184344_GDF3\",\n    \"ENSG00000156574_NODAL\",\n    \"ENSG00000111704_NANOG\",\n    \"ENSG00000075388_FGF4\",\n    #\n    \"ENSG00000164736_SOX17\",\n    \"ENSG00000125798_FOXA2\",\n    \"ENSG00000136574_GATA4\",\n    \"ENSG00000141448_GATA6\",\n    \"ENSG00000134853_PDGFRA\",\n    \"ENSG00000115414_FN1\",\n    #\n    \"ENSG00000107485_GATA3\",\n    \"ENSG00000118777_ABCG2\",\n    \"ENSG00000165556_CDX2\",\n    \"ENSG00000137869_CYP19A1\",\n    \"ENSG00000172818_OVOL1\",\n    \"ENSG00000126353_CCR7\"\n]\n\n\nfor selected_feature in FEATURES_SELECTED:\n    print(selected_feature)\n\n    idx = np.where([i == selected_feature for i in features])[0]\n    values = matrix_cpm_use[idx, :].toarray().flatten()\n    values = np.log10(values + 1)\n\n    fig, ax = plt.subplots(nrows=1 * 1, ncols=1, figsize=(4 * 1, 3 * 1))\n\n    p = plot_embedding(\n        embedding=embedding.loc[\n            adata.obs.index, [\"x_umap_min_dist=0.1\", \"y_umap_min_dist=0.1\"]\n        ],\n        ax=ax,\n        color_values=values,\n        title=f\"UMAP; {selected_feature}\",\n        show_color_value_labels=False,\n        marker_size=4,\n        sort_values=True,\n    )\n\n    ax_ins = ax.inset_axes((0.06, 0.70, 0.03, 0.2))\n\n    cbar = fig.colorbar(\n        mappable=p,\n        cax=ax_ins,\n        orientation=\"vertical\",\n        label=\"\",\n        ticks=range(np.ceil(max(values)).astype(int)),\n    )\n\n    cbar.outline.set_linewidth(w=0.2)\n    cbar.outline.set_visible(b=False)\n\n    ax_ins.tick_params(\n        axis=\"y\",\n        direction=\"out\",\n        length=1.5,\n        width=0.2,\n        color=\"#333333\",\n        pad=1.25,\n        labelsize=6,\n        labelcolor=\"#4D4D4D\",\n    )\n\n    plt.tight_layout()\n    plt.show()\n\n    plt.close(fig=fig)\n\nENSG00000204531_POU5F1\nENSG00000203909_DPPA5\nENSG00000184344_GDF3\nENSG00000156574_NODAL\nENSG00000111704_NANOG\nENSG00000075388_FGF4\nENSG00000164736_SOX17\nENSG00000125798_FOXA2\nENSG00000136574_GATA4\nENSG00000141448_GATA6\nENSG00000134853_PDGFRA\nENSG00000115414_FN1\nENSG00000107485_GATA3\nENSG00000118777_ABCG2\nENSG00000165556_CDX2\nENSG00000137869_CYP19A1\nENSG00000172818_OVOL1\nENSG00000126353_CCR7"
  },
  {
    "objectID": "cluster_blastoids_stromal.html",
    "href": "cluster_blastoids_stromal.html",
    "title": "Clustering of Human Blastocyst Cells and Blastoid Cells Co-Cultured With Endometrial Stromal Cells",
    "section": "",
    "text": "Sys.time()\n\n[1] \"2023-02-25 17:04:52 CST\"\nSys.timezone()\n\n[1] \"America/Chicago\"\nimport multiprocessing\nimport sys\n\nsys.path.append(\"/Users/jialei/Dropbox/Data/Projects/UTSW/Scripts/utilities\")\nsys.path.append(\"/project/GCRB/Hon_lab/s166631/00.bin/utilities/\")\n\nfrom pathlib import Path\nfrom random import sample\n\nimport harmonypy as hm\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport phate\nimport scanpy as sc\nimport umap\n\nfrom utilities import (\n    plot_embedding,\n    plot_pca_variance_explained,\n    plot_cluster_composition,\n)\nparams = {\n    \"pdf.fonttype\": 42,\n    \"font.family\": \"sans-serif\",\n    \"font.sans-serif\": \"Arial\",\n    \"mathtext.default\": \"regular\",\n    \"figure.dpi\": 96 * 1.5,\n}\nplt.rcParams.update(params)"
  },
  {
    "objectID": "cluster_blastoids_stromal.html#parameters",
    "href": "cluster_blastoids_stromal.html#parameters",
    "title": "Clustering of Human Blastocyst Cells and Blastoid Cells Co-Cultured With Endometrial Stromal Cells",
    "section": "Parameters",
    "text": "Parameters\n\nPROJECT_DIR = Path(\n    \"/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation\") / \"raw\"\n\nSEED = 20210719\nN_COMPONENTS = 100\n\nMINIMAL_NUM_GENES_REQUIRED_FOR_CELL = 200\nMINIMAL_NUM_CELLS_REQUIRED_FOR_GENE = 30\nMINIMAL_NUM_COUNTS_REQUIRED_FOR_GENE = 60\nMT_PERCENTAGE_CUTOFF = 0.2\n\nN_THREADS = multiprocessing.cpu_count() - 1\nN_SAMPLING = None"
  },
  {
    "objectID": "cluster_blastoids_stromal.html#data-preparation",
    "href": "cluster_blastoids_stromal.html#data-preparation",
    "title": "Clustering of Human Blastocyst Cells and Blastoid Cells Co-Cultured With Endometrial Stromal Cells",
    "section": "Data preparation",
    "text": "Data preparation\nData loading\nThis study\n\nlibraries = [\"LW186\", \"LW187\", \"LW188\", \"LW189\", \"LW202\", \"LW203\", \"LW204\"]\nadatas = [\n    sc.read_h5ad(filename=PROJECT_DIR / i / \"matrix\" / \"adata.h5ad\")\n    for i in libraries\n]\n\n\nadatas = [\n    i[\n        i.obs[\"mt_percentage\"] &lt;= MT_PERCENTAGE_CUTOFF,\n    ]\n    for i in adatas\n]\n\n\n# merge adatas\nadata = sc.concat(adatas, axis=0)\n\n\nprint(f\"Raw median UMIs per cell: {np.median(a=adata.X.sum(axis=1).A1):,}\")\n## Raw median UMIs per cell: 3,728.0\nprint(f\"Number of cells before filtering: {adata.n_obs:,}\")\n## Number of cells before filtering: 39,755\nprint(f\"Number of features before filtering: {adata.n_vars:,}\")\n## Number of features before filtering: 33,538\nprint(adata.obs[\"batch\"].value_counts())\n## LW186    10977\n## LW204     7596\n## LW188     6838\n## LW202     4833\n## LW187     3690\n## LW189     3250\n## LW203     2571\n## Name: batch, dtype: int64\n\nPreprocessing\n\n# reorder cells\nadata = adata[np.sort(adata.obs.index), :]\n\n# filter cells\nadata = adata[\n    (adata.X &gt; 0).sum(axis=1).A1 &gt;= MINIMAL_NUM_GENES_REQUIRED_FOR_CELL, :\n]\n\n\nmatrix_cpm_use = adata.X.transpose(copy=True)\nfeatures = adata.var_names\n\n\n# sample cells\nif N_SAMPLING:\n    adata = adata[sample(list(adata.obs.index.values), N_SAMPLING), :]\n    print(f\"Number of cells after sampling: {adata.n_obs:,}\")\n\n# filter features\nrow_idx = np.logical_and(\n    (adata.X &gt; 0).sum(axis=0).A1 &gt;= MINIMAL_NUM_CELLS_REQUIRED_FOR_GENE,\n    (adata.X).sum(axis=0).A1 &gt;= MINIMAL_NUM_COUNTS_REQUIRED_FOR_GENE,\n)\nadata = adata[:, row_idx]\n\n\nprint(f\"Median UMIs per cell: {np.median(a=adata.X.sum(axis=1).A1):,}\")\n## Median UMIs per cell: 3,725.0\nprint(f\"Number of cells after filtering: {adata.n_obs:,}\")\n## Number of cells after filtering: 39,755\nprint(f\"Number of features after filtering: {adata.n_vars:,}\")\n## Number of features after filtering: 16,037\n\n\n# normalize\nsc.pp.normalize_total(\n    adata=adata,\n    target_sum=np.median(a=adata.X.sum(axis=1).A1),\n    exclude_highly_expressed=False,\n)\n\n/Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/scanpy/preprocessing/_normalization.py:138: UserWarning: Revieved a view of an AnnData. Making a copy.\n  view_to_actual(adata)\n/Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/scanpy/preprocessing/_normalization.py:138: FutureWarning: X.dtype being converted to np.float32 from int64. In the next version of anndata (0.9) conversion will not be automatic. Pass dtype explicitly to avoid this warning. Pass `AnnData(X, dtype=X.dtype, ...)` to get the future behavour.\n  view_to_actual(adata)\n\n\n\n# logarithmize\nsc.pp.log1p(adata)\n\n\n# detect hvgs\nif HVG:\n    sc.pp.highly_variable_genes(\n        adata,\n        min_mean=0.0125,\n        max_mean=3,\n        min_disp=0.5,\n        flavor=\"seurat\",\n        batch_key=\"batch\",\n    )\n\n# standardize\n\n/Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:475: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n  hvg = hvg.append(missing_hvg, ignore_index=True)\n/Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:475: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n  hvg = hvg.append(missing_hvg, ignore_index=True)\n/Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:475: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n  hvg = hvg.append(missing_hvg, ignore_index=True)\n/Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:475: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n  hvg = hvg.append(missing_hvg, ignore_index=True)\n/Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:475: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n  hvg = hvg.append(missing_hvg, ignore_index=True)\n/Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:475: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n  hvg = hvg.append(missing_hvg, ignore_index=True)\n/Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py:475: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n  hvg = hvg.append(missing_hvg, ignore_index=True)\n\nsc.pp.scale(\n    adata,\n    zero_center=ZERO_CENTER,\n    max_value=None,\n    copy=False,\n    layer=None,\n    obsm=None,\n)"
  },
  {
    "objectID": "cluster_blastoids_stromal.html#dimensionality-reduction",
    "href": "cluster_blastoids_stromal.html#dimensionality-reduction",
    "title": "Clustering of Human Blastocyst Cells and Blastoid Cells Co-Cultured With Endometrial Stromal Cells",
    "section": "Dimensionality reduction",
    "text": "Dimensionality reduction\nPCA\n\nsc.tl.pca(\n    adata,\n    n_comps=N_COMPONENTS,\n    zero_center=ZERO_CENTER,\n    svd_solver=\"arpack\",\n    random_state=SEED,\n    return_info=False,\n    use_highly_variable=HVG,\n    dtype=\"float64\",\n    copy=False,\n    chunked=False,\n)\n\nprincipal_components = adata.obsm[\"X_pca\"]\n\n\nwith plt.style.context(\"ggplot\"):\n    fig, ax = plt.subplots(nrows=1, ncols=1, figsize=(5, 2.5))\n\n    plot_pca_variance_explained(\n        x=adata.uns[\"pca\"][\"variance_ratio\"],\n        num_pcs=30,\n        ax=ax,\n    )\n\n    ax.set(ylim=(-0.0025, max(ax.get_ylim())))\n\n    plt.tight_layout()\n    plt.show()\n\n    plt.close(fig=fig)\n\n&lt;AxesSubplot: xlabel='Principal component', ylabel='Explained variance ratio'&gt;\n[(-0.0025, 0.049999999999999996)]\n\n\n\n\n\n\n\n\nBatch effect removal\n\n# remove batch effect\nbatches = adata.obs[\"batch\"].values\nprint(adata.obs[\"batch\"].value_counts())\n\nLW186    10977\nLW204     7596\nLW188     6838\nLW202     4833\nLW187     3690\nLW189     3250\nLW203     2571\nName: batch, dtype: int64\n\n\n\nif len(set(batches)) &gt; 1:\n\n    ho = hm.run_harmony(\n        data_mat=principal_components,\n        meta_data=pd.DataFrame(\n            {\"batch\": batches}, index=adata.obs.index.values\n        ),\n        vars_use=\"batch\",\n        random_state=SEED,\n    )\n    principal_components_selected = ho.Z_corr.T.astype(np.float64)\n\nelse:\n    principal_components_selected = principal_components.astype(np.float64)\n\n2023-02-25 17:05:41,697 - harmonypy - INFO - Iteration 1 of 10\n2023-02-25 17:05:48,968 - harmonypy - INFO - Iteration 2 of 10\n2023-02-25 17:05:56,651 - harmonypy - INFO - Converged after 2 iterations\n\nprincipal_components_use = principal_components_selected[:, range(28)]\n\nUMAP\n\nembedding_umap = umap.UMAP(\n    n_neighbors=15,\n    n_components=2,\n    metric=\"euclidean\",\n    min_dist=0.1,\n    spread=1.0,\n    random_state=SEED,\n    transform_seed=42,\n    verbose=True,\n).fit_transform(principal_components_use)\n\nUMAP(random_state=20210719, verbose=True)\nSat Feb 25 17:05:58 2023 Construct fuzzy simplicial set\nSat Feb 25 17:05:58 2023 Finding Nearest Neighbors\nSat Feb 25 17:05:58 2023 Building RP forest with 15 trees\nSat Feb 25 17:05:58 2023 NN descent for 15 iterations\n     1  /  15\n     2  /  15\n     3  /  15\n     4  /  15\n    Stopping threshold met -- exiting after 4 iterations\nSat Feb 25 17:06:05 2023 Finished Nearest Neighbor Search\nSat Feb 25 17:06:06 2023 Construct embedding\nSat Feb 25 17:06:21 2023 Finished embedding\n\n\nEpochs completed:   0%|            0/200 [00:00]\nEpochs completed:   0%|            1/200 [00:00]\nEpochs completed:   2%| 2          4/200 [00:00]\nEpochs completed:   3%| 3          6/200 [00:00]\nEpochs completed:   4%| 4          8/200 [00:00]\nEpochs completed:   5%| 5          10/200 [00:00]\nEpochs completed:   6%| 6          12/200 [00:00]\nEpochs completed:   7%| 7          14/200 [00:01]\nEpochs completed:   8%| 8          16/200 [00:01]\nEpochs completed:   9%| 9          18/200 [00:01]\nEpochs completed:  10%| #          20/200 [00:01]\nEpochs completed:  11%| #1         22/200 [00:01]\nEpochs completed:  12%| #2         24/200 [00:01]\nEpochs completed:  13%| #3         26/200 [00:01]\nEpochs completed:  14%| #4         28/200 [00:02]\nEpochs completed:  15%| #5         30/200 [00:02]\nEpochs completed:  16%| #6         32/200 [00:02]\nEpochs completed:  17%| #7         34/200 [00:02]\nEpochs completed:  18%| #8         36/200 [00:02]\nEpochs completed:  19%| #9         38/200 [00:02]\nEpochs completed:  20%| ##         40/200 [00:02]\nEpochs completed:  21%| ##1        42/200 [00:03]\nEpochs completed:  22%| ##2        44/200 [00:03]\nEpochs completed:  23%| ##3        46/200 [00:03]\nEpochs completed:  24%| ##4        48/200 [00:03]\nEpochs completed:  25%| ##5        50/200 [00:03]\nEpochs completed:  26%| ##6        52/200 [00:03]\nEpochs completed:  27%| ##7        54/200 [00:03]\nEpochs completed:  28%| ##8        56/200 [00:04]\nEpochs completed:  29%| ##9        58/200 [00:04]\nEpochs completed:  30%| ###        60/200 [00:04]\nEpochs completed:  31%| ###1       62/200 [00:04]\nEpochs completed:  32%| ###2       64/200 [00:04]\nEpochs completed:  33%| ###3       66/200 [00:04]\nEpochs completed:  34%| ###4       68/200 [00:04]\nEpochs completed:  35%| ###5       70/200 [00:05]\nEpochs completed:  36%| ###6       72/200 [00:05]\nEpochs completed:  37%| ###7       74/200 [00:05]\nEpochs completed:  38%| ###8       76/200 [00:05]\nEpochs completed:  39%| ###9       78/200 [00:05]\nEpochs completed:  40%| ####       80/200 [00:05]\nEpochs completed:  41%| ####1      82/200 [00:05]\nEpochs completed:  42%| ####2      84/200 [00:06]\nEpochs completed:  43%| ####3      86/200 [00:06]\nEpochs completed:  44%| ####4      88/200 [00:06]\nEpochs completed:  45%| ####5      90/200 [00:06]\nEpochs completed:  46%| ####6      92/200 [00:06]\nEpochs completed:  47%| ####6      94/200 [00:06]\nEpochs completed:  48%| ####8      96/200 [00:07]\nEpochs completed:  49%| ####9      98/200 [00:07]\nEpochs completed:  50%| #####      100/200 [00:07]\nEpochs completed:  51%| #####1     102/200 [00:07]\nEpochs completed:  52%| #####2     104/200 [00:07]\nEpochs completed:  53%| #####3     106/200 [00:07]\nEpochs completed:  54%| #####4     108/200 [00:07]\nEpochs completed:  55%| #####5     110/200 [00:08]\nEpochs completed:  56%| #####6     112/200 [00:08]\nEpochs completed:  57%| #####6     114/200 [00:08]\nEpochs completed:  58%| #####8     116/200 [00:08]\nEpochs completed:  59%| #####8     118/200 [00:08]\nEpochs completed:  60%| ######     120/200 [00:08]\nEpochs completed:  61%| ######1    122/200 [00:08]\nEpochs completed:  62%| ######2    124/200 [00:09]\nEpochs completed:  63%| ######3    126/200 [00:09]\nEpochs completed:  64%| ######4    128/200 [00:09]\nEpochs completed:  65%| ######5    130/200 [00:09]\nEpochs completed:  66%| ######6    132/200 [00:09]\nEpochs completed:  67%| ######7    134/200 [00:09]\nEpochs completed:  68%| ######8    136/200 [00:09]\nEpochs completed:  69%| ######9    138/200 [00:10]\nEpochs completed:  70%| #######    140/200 [00:10]\nEpochs completed:  71%| #######1   142/200 [00:10]\nEpochs completed:  72%| #######2   144/200 [00:10]\nEpochs completed:  73%| #######3   146/200 [00:10]\nEpochs completed:  74%| #######4   148/200 [00:10]\nEpochs completed:  75%| #######5   150/200 [00:10]\nEpochs completed:  76%| #######6   152/200 [00:11]\nEpochs completed:  77%| #######7   154/200 [00:11]\nEpochs completed:  78%| #######8   156/200 [00:11]\nEpochs completed:  79%| #######9   158/200 [00:11]\nEpochs completed:  80%| ########   160/200 [00:11]\nEpochs completed:  81%| ########1  162/200 [00:11]\nEpochs completed:  82%| ########2  164/200 [00:11]\nEpochs completed:  83%| ########2  166/200 [00:12]\nEpochs completed:  84%| ########4  168/200 [00:12]\nEpochs completed:  85%| ########5  170/200 [00:12]\nEpochs completed:  86%| ########6  172/200 [00:12]\nEpochs completed:  87%| ########7  174/200 [00:12]\nEpochs completed:  88%| ########8  176/200 [00:12]\nEpochs completed:  89%| ########9  178/200 [00:12]\nEpochs completed:  90%| #########  180/200 [00:13]\nEpochs completed:  91%| #########1 182/200 [00:13]\nEpochs completed:  92%| #########2 184/200 [00:13]\nEpochs completed:  93%| #########3 186/200 [00:13]\nEpochs completed:  94%| #########3 188/200 [00:13]\nEpochs completed:  95%| #########5 190/200 [00:13]\nEpochs completed:  96%| #########6 192/200 [00:13]\nEpochs completed:  97%| #########7 194/200 [00:14]\nEpochs completed:  98%| #########8 196/200 [00:14]\nEpochs completed:  99%| #########9 198/200 [00:14]\nEpochs completed: 100%| ########## 200/200 [00:14]\nEpochs completed: 100%| ########## 200/200 [00:14]"
  },
  {
    "objectID": "cluster_blastoids_stromal.html#clustering",
    "href": "cluster_blastoids_stromal.html#clustering",
    "title": "Clustering of Human Blastocyst Cells and Blastoid Cells Co-Cultured With Endometrial Stromal Cells",
    "section": "Clustering",
    "text": "Clustering\n\nadata = sc.AnnData(\n    X=principal_components_use,\n    obs={\"cell\": adata.obs.index.values, \"batch\": batches},\n    dtype=\"float64\",\n)\nadata.obs.index = adata.obs[\"cell\"]\n\nsc.pp.neighbors(\n    adata=adata,\n    n_neighbors=30,\n    n_pcs=0,\n    use_rep=None,\n    knn=True,\n    random_state=SEED,\n    method=\"umap\",\n    metric=\"euclidean\",\n    copy=False,\n)\n\nsc.tl.leiden(\n    adata=adata,\n    resolution=1,\n    random_state=SEED,\n    key_added=\"leiden\",\n    directed=True,\n    use_weights=True,\n    partition_type=None,\n    copy=False,\n)\n\n\nembedding = pd.DataFrame(\n    data=np.concatenate(\n        (adata.obs[[\"batch\", \"leiden\"]], embedding_umap),\n        axis=1,\n    ),\n    index=adata.obs[\"cell\"],\n    columns=[\"batch\", \"leiden\", \"x_umap_min_dist=0.1\", \"y_umap_min_dist=0.1\"],\n)\n\nembedding = embedding.astype(\n    {\n        \"leiden\": int,\n        \"x_umap_min_dist=0.1\": float,\n        \"y_umap_min_dist=0.1\": float,\n    }\n)"
  },
  {
    "objectID": "cluster_blastoids_stromal.html#visualization",
    "href": "cluster_blastoids_stromal.html#visualization",
    "title": "Clustering of Human Blastocyst Cells and Blastoid Cells Co-Cultured With Endometrial Stromal Cells",
    "section": "Visualization",
    "text": "Visualization\nCluster embedding\n\nfig, ax = plt.subplots(nrows=1 * 1, ncols=1, figsize=(4 * 1, 3 * 1))\n\nplot_embedding(\n    embedding=embedding.loc[:, [\"x_umap_min_dist=0.1\", \"y_umap_min_dist=0.1\"]],\n    ax=ax,\n    color_values=[str(i) for i in embedding[\"leiden\"]],\n    title=\"UMAP; Leiden\",\n    show_color_value_labels=True,\n    rasterise=True,\n)\n\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\nplt.close(fig=fig)\n\nCluster distribution\n\nembedding.groupby(by=\"batch\").size().to_frame(name=\"num_cells\")\n\n       num_cells\nbatch           \nLW186      10977\nLW187       3690\nLW188       6838\nLW189       3250\nLW202       4833\nLW203       2571\nLW204       7596\n\n\n\n\ncluster_composition = (\n    (\n        embedding.groupby(by=\"leiden\").aggregate(\"batch\").value_counts()\n        / embedding.groupby(by=\"leiden\").aggregate(\"batch\").size()\n    )\n    .to_frame(name=\"percentage\")\n    .reset_index()\n)\n\ncluster_composition = cluster_composition.astype({\"leiden\": str})\n\nclusters_selected = list(\n    np.sort(embedding[\"leiden\"].unique()).astype(dtype=str)[::-1]\n)\n\nbatches_selected = list(embedding[\"batch\"].unique())\n\ncluster_composition = cluster_composition.astype(\n    {\n        \"leiden\": pd.api.types.CategoricalDtype(\n            categories=clusters_selected, ordered=True\n        ),\n        \"batch\": pd.api.types.CategoricalDtype(\n            categories=batches_selected, ordered=True\n        ),\n    }\n)\n\n\nfig, ax = plt.subplots(nrows=1, ncols=1, figsize=(4.5, 4))\n\nplot_cluster_composition(\n    cluster_composition=cluster_composition,\n    x=\"batch\",\n    y=\"leiden\",\n    ax=ax,\n    x_order=batches_selected,\n    y_order=clusters_selected,\n)\n\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\nplt.close(fig=fig)\n\nExpression\n\nmatrix_cpm_use.data = (\n    1_000_000\n    * matrix_cpm_use.data\n    / np.repeat(matrix_cpm_use.sum(axis=0).A1, np.diff(matrix_cpm_use.indptr))\n)\n\n\nFEATURES_SELECTED = [\n    \"ENSG00000204531_POU5F1\",\n    \"ENSG00000203909_DPPA5\",\n    \"ENSG00000184344_GDF3\",\n    \"ENSG00000156574_NODAL\",\n    \"ENSG00000111704_NANOG\",\n    \"ENSG00000075388_FGF4\",\n    #\n    \"ENSG00000164736_SOX17\",\n    \"ENSG00000125798_FOXA2\",\n    \"ENSG00000136574_GATA4\",\n    \"ENSG00000141448_GATA6\",\n    \"ENSG00000134853_PDGFRA\",\n    \"ENSG00000115414_FN1\",\n    #\n    \"ENSG00000107485_GATA3\",\n    \"ENSG00000118777_ABCG2\",\n    \"ENSG00000165556_CDX2\",\n    \"ENSG00000137869_CYP19A1\",\n    \"ENSG00000172818_OVOL1\",\n    \"ENSG00000126353_CCR7\"\n]\n\n\nfor selected_feature in FEATURES_SELECTED:\n    print(selected_feature)\n\n    idx = np.where([i == selected_feature for i in features])[0]\n    values = matrix_cpm_use[idx, :].toarray().flatten()\n    values = np.log10(values + 1)\n\n    fig, ax = plt.subplots(nrows=1 * 1, ncols=1, figsize=(4 * 1, 3 * 1))\n\n    p = plot_embedding(\n        embedding=embedding.loc[\n            adata.obs.index, [\"x_umap_min_dist=0.1\", \"y_umap_min_dist=0.1\"]\n        ],\n        ax=ax,\n        color_values=values,\n        title=f\"UMAP; {selected_feature}\",\n        show_color_value_labels=False,\n        marker_size=4,\n        sort_values=True,\n    )\n\n    ax_ins = ax.inset_axes((0.06, 0.70, 0.03, 0.2))\n\n    cbar = fig.colorbar(\n        mappable=p,\n        cax=ax_ins,\n        orientation=\"vertical\",\n        label=\"\",\n        ticks=range(np.ceil(max(values)).astype(int)),\n    )\n\n    cbar.outline.set_linewidth(w=0.2)\n    cbar.outline.set_visible(b=False)\n\n    ax_ins.tick_params(\n        axis=\"y\",\n        direction=\"out\",\n        length=1.5,\n        width=0.2,\n        color=\"#333333\",\n        pad=1.25,\n        labelsize=6,\n        labelcolor=\"#4D4D4D\",\n    )\n\n    plt.tight_layout()\n    plt.show()\n\n    plt.close(fig=fig)\n\nENSG00000204531_POU5F1\nENSG00000203909_DPPA5\nENSG00000184344_GDF3\nENSG00000156574_NODAL\nENSG00000111704_NANOG\nENSG00000075388_FGF4\nENSG00000164736_SOX17\nENSG00000125798_FOXA2\nENSG00000136574_GATA4\nENSG00000141448_GATA6\nENSG00000134853_PDGFRA\nENSG00000115414_FN1\nENSG00000107485_GATA3\nENSG00000118777_ABCG2\nENSG00000165556_CDX2\nENSG00000137869_CYP19A1\nENSG00000172818_OVOL1\nENSG00000126353_CCR7"
  },
  {
    "objectID": "interpret_blastoids_public.html",
    "href": "interpret_blastoids_public.html",
    "title": "Characterization of Human Blastoids",
    "section": "",
    "text": "Sys.time()\n\n[1] \"2023-08-12 10:53:26 CDT\"\nSys.timezone()\n\n[1] \"America/Chicago\""
  },
  {
    "objectID": "interpret_blastoids_public.html#preparation",
    "href": "interpret_blastoids_public.html#preparation",
    "title": "Characterization of Human Blastoids",
    "section": "Preparation",
    "text": "Preparation\n\nPROJECT_DIR &lt;- file.path(\n    \"/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation\"\n)\n\nFunctions\nLoad required packages.\n\nlibrary(tidyverse)\n## ── Attaching core tidyverse packages ─────────────────── tidyverse 2.0.0.9000 ──\n## ✔ dplyr     1.1.2.9000     ✔ readr     2.1.4.9000\n## ✔ forcats   1.0.0.9000     ✔ stringr   1.5.0.9000\n## ✔ ggplot2   3.4.2.9000     ✔ tibble    3.2.1.9005\n## ✔ lubridate 1.9.2.9000     ✔ tidyr     1.3.0.9000\n## ✔ purrr     1.0.2.9000     \n## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n## ✖ dplyr::filter() masks stats::filter()\n## ✖ dplyr::lag()    masks stats::lag()\n## ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\nlibrary(Matrix)\n## \n## Attaching package: 'Matrix'\n## \n## The following objects are masked from 'package:tidyr':\n## \n##     expand, pack, unpack\nlibrary(patchwork)\nlibrary(extrafont)\n## Registering fonts with R\n\n\nsource(file = file.path(SCRIPT_DIR, \"utilities.R\"))\n\n\n`%+replace%` &lt;- ggplot2::`%+replace%`\n\n\nadd_panel_border &lt;- function() {\n    ggplot2::theme(\n        plot.background = element_rect(\n            colour = \"grey70\", fill = NA, linewidth = 0.25\n        )\n    )\n}\n\n\nplot_embedding_highlight &lt;- function(embedding, x, y, label,\n                                     geom_point_size = 0.2,\n                                     n_cols = 3) {\n    cell_metadata_selected &lt;- x\n    selected_column &lt;- y\n\n    purrr::map(levels(cell_metadata_selected[[selected_column]]), \\(x) {\n        values &lt;- embedding |&gt;\n            dplyr::left_join(cell_metadata_selected, by = \"cell\") |&gt;\n            dplyr::mutate(\n                value = case_when(\n                    .data[[selected_column]] == x ~ \"1\",\n                    .data[[selected_column]] != x ~ \"0\"\n                )\n            ) |&gt;\n            dplyr::pull(value) |&gt;\n            as.integer() |&gt;\n            as.factor()\n\n        plot_embedding(\n            data = embedding[, c(x_column, y_column)],\n            color = values,\n            label = glue::glue(\n                \"{label}; \",\n                \"{x}: {sum(as.integer(as.character(values)), na.rm = TRUE)}\"\n            ),\n            color_labels = FALSE,\n            color_legend = FALSE,\n            sort_values = TRUE,\n            shuffle_values = FALSE,\n            rasterise = RASTERISED,\n            geom_point_size = geom_point_size\n        ) +\n            theme_customized_embedding() +\n            ggplot2::scale_color_manual(\n                na.translate = TRUE,\n                values = c(\"#7F7F7F\", \"salmon\"),\n                na.value = \"grey70\"\n            ) +\n            ggplot2::annotate(\n                geom = \"text\",\n                x = Inf,\n                y = Inf,\n                label = sum(as.integer(as.character(values)), na.rm = TRUE),\n                size = 5 / ggplot2::.pt,\n                hjust = 1,\n                vjust = 1,\n                na.rm = FALSE\n            )\n    }) |&gt;\n        purrr::reduce(`+`) +\n        patchwork::plot_layout(ncol = n_cols) +\n        patchwork::plot_annotation(\n            theme = ggplot2::theme(plot.margin = ggplot2::margin())\n        )\n}\n\nPython env\n\nnp &lt;- reticulate::import(\"numpy\", convert = TRUE)\n# scipy.sparse &lt;- reticulate::import(module = \"scipy.sparse\", convert = TRUE)\ncat(\"numpy version:\", np$`__version__`, \"\\n\")\n\nnumpy version: 1.24.3 \n\n\n\nad &lt;- reticulate::import(module = \"anndata\", convert = TRUE)\nprint(ad$`__version__`)\n\n[1] \"0.8.0\"\n\n\n\nreticulate::py_config()\n\npython:         /Users/jialei/.pyenv/shims/python\nlibpython:      /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/libpython3.10.dylib\npythonhome:     /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3:/Users/jialei/.pyenv/versions/mambaforge-22.9.0-3\nversion:        3.10.9 | packaged by conda-forge | (main, Feb  2 2023, 20:26:08) [Clang 14.0.6 ]\nnumpy:          /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/numpy\nnumpy_version:  1.24.3\nnumpy:          /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/numpy\n\nNOTE: Python version was forced by RETICULATE_PYTHON\n\n\nEmbedding\n\nembedding &lt;- vroom::vroom(\n    file = file.path(\n        PROJECT_DIR,\n        \"clustering\",\n        \"LW60_LW61_LW119_LW120_LW121_LW122_PRJEB11202_PRJNA562548_PRJEB40781_PRJNA555602_PRJNA720968\",\n        \"exploring\",\n        CLUSTERING_METHOD,\n        EMBEDDING_FILE\n    ),\n    show_col_types = FALSE\n) |&gt;\n    dplyr::mutate(\n        batch = dplyr::case_when(\n            batch == \"GSM4734573\" ~ \"PRJNA658478\",\n            TRUE ~ batch\n        ),\n        bioproject = dplyr::case_when(\n            batch %in% c(\"LW60\", \"LW61\") ~ \"PRJNA632839\",\n            #\n            batch %in% c(\"GSM3956280\", \"GSM3956281\") ~ \"PRJNA555602\",\n            batch %in% c(\"GSM4734573\") ~ \"PRJNA658478\",\n            #\n            batch %in% c(\n                \"GSM4816780\", \"GSM4816781\", \"GSM4816782\"\n            ) ~ \"PRJNA667174\",\n            batch %in% c(\"GSM5387817\", \"GSM5387818\") ~ \"PRJNA738498\",\n            TRUE ~ batch\n        )\n    )\n\nMatrix\n\n# PRJNA632839 Yu et al. 2021\nadata_files &lt;- purrr::map(c(\"LW36_LW58_LW59_LW60_LW61\"), \\(x) {\n    file.path(\n        PROJECT_DIR,\n        \"raw\",\n        \"PRJNA632839\",\n        x,\n        \"matrix\",\n        \"adata.h5ad\"\n    )\n})\n\n# PRJNA658478 Liu et al. 2021\n# PRJNA720968 Yanagida et al. 2021\n# PRJNA737139 Kagawa et al. 2021\n##\n# PRJNA667174 Fan et al. 2021\n# PRJNA738498 Sozen et al. 2021\nadata_files &lt;- c(\n    adata_files,\n    purrr::map(c(\n        \"PRJNA658478\",\n        \"PRJNA720968\",\n        \"PRJNA737139\",\n        \"PRJNA667174\",\n        \"PRJNA738498\"\n    ), \\(x) {\n        file.path(\n            PROJECT_DIR,\n            \"raw\",\n            \"public\",\n            x,\n            \"matrix\",\n            \"adata.h5ad\"\n        )\n    })\n)\npurrr::map_lgl(adata_files, file.exists)\n\n[1] TRUE TRUE TRUE TRUE TRUE TRUE\n\nadata_files &lt;- c(\n    adata_files,\n    purrr::map(c(\"LW119\", \"LW120\", \"LW121\", \"LW122\"), \\(x) {\n        file.path(\n            PROJECT_DIR,\n            \"raw\",\n            x,\n            \"matrix\",\n            \"adata.h5ad\"\n        )\n    })\n)\n\n# Petropoulos et al. 2016; PRJEB11202\n# Zhou et al. 2019; PRJNA431392\n# Xiang et al. 2020; PRJNA562548\n# Tyser et al. 2021; PRJEB40781\n# Zheng et al. 2019; PRJNA555602\nadata_files &lt;- c(\n    adata_files,\n    purrr::map(\n        c(\n            \"PRJEB11202\",\n            \"PRJNA431392\",\n            \"PRJNA562548\",\n            \"PRJEB40781\",\n            \"PRJNA555602\"\n        ), \\(x) {\n            file.path(\n                PROJECT_DIR,\n                \"raw\",\n                \"public\",\n                x,\n                \"matrix\",\n                \"adata.h5ad\"\n            )\n        }\n    )\n)\npurrr::map_lgl(adata_files, file.exists)\n\n [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nadata_files &lt;- unique(adata_files)\npurrr::map_lgl(adata_files, file.exists)\n\n [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nBACKED &lt;- NULL\nmatrix_readcount_use &lt;- purrr::map(adata_files, function(x) {\n    cat(x, \"\\n\")\n    ad$read_h5ad(\n        filename = x, backed = BACKED\n    ) |&gt;\n        # convert_adata(cells_selected = embedding$cell)\n        extract_matrix_from_adata(cells_selected = embedding$cell)\n}) |&gt;\n    purrr::reduce(cbind)\n\n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/PRJNA632839/LW36_LW58_LW59_LW60_LW61/matrix/adata.h5ad \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/public/PRJNA658478/matrix/adata.h5ad \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/public/PRJNA720968/matrix/adata.h5ad \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/public/PRJNA737139/matrix/adata.h5ad \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/public/PRJNA667174/matrix/adata.h5ad \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/public/PRJNA738498/matrix/adata.h5ad \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/LW119/matrix/adata.h5ad \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/LW120/matrix/adata.h5ad \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/LW121/matrix/adata.h5ad \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/LW122/matrix/adata.h5ad \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/public/PRJEB11202/matrix/adata.h5ad \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/public/PRJNA431392/matrix/adata.h5ad \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/public/PRJNA562548/matrix/adata.h5ad \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/public/PRJEB40781/matrix/adata.h5ad \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/public/PRJNA555602/matrix/adata.h5ad \n\nif (FALSE) {\n    adata_files[[1]]\n\n    adata &lt;- ad$read_h5ad(\n        filename = adata_files[[1]], backed = BACKED\n    )\n\n    m &lt;- Matrix::sparseMatrix(\n        i = as.integer(adata$X$indices),\n        p = as.integer(adata$X$indptr),\n        x = as.numeric(adata$X$data),\n        dims = unlist(adata$shape),\n        dimnames = list(\n            rownames(adata$obs),\n            rownames(adata$var)\n        ),\n        index1 = FALSE\n    )\n}\n\nmatrix_readcount_use &lt;- matrix_readcount_use[\n    ,\n    sort(colnames(matrix_readcount_use))\n]\nmatrix_readcount_use |&gt; dim()\n\n[1] 33538 31481\n\n# sanity check\nstopifnot(\n    ncol(matrix_readcount_use) == nrow(embedding)\n)\n\nMetadata\n\nBACKED &lt;- \"r\"\ncell_metadata &lt;- purrr::map(adata_files, function(x) {\n    ad$read_h5ad(\n        filename = x, backed = BACKED\n    )$obs |&gt;\n        tibble::rownames_to_column(var = \"cell\") |&gt;\n        dplyr::select(cell, everything())\n    # |&gt; dplyr::select(cell : mt_percentage)\n}) |&gt;\n    dplyr::bind_rows()\n\n\nembedding |&gt;\n    dplyr::left_join(\n        cell_metadata |&gt;\n            dplyr::select(cell, num_umis),\n        by = \"cell\"\n    ) |&gt;\n    dplyr::group_by(batch) |&gt;\n    dplyr::summarise(\n        num_cells = n(),\n        meidan_umis = median(num_umis)\n    ) |&gt;\n    gt::gt()\n\n\n\n\n\nbatch\n      num_cells\n      meidan_umis\n    \n\n\nGSM3956280\n5454\n23322.0\n\n\nGSM3956281\n4512\n27887.0\n\n\nLW119\n2236\n2956.5\n\n\nLW120\n435\n17392.0\n\n\nLW121\n5130\n12536.0\n\n\nLW122\n287\n100092.0\n\n\nLW60\n4497\n14421.0\n\n\nLW61\n5156\n7625.0\n\n\nPRJEB11202\n1529\n1551093.0\n\n\nPRJEB40781\n1195\n899241.0\n\n\nPRJNA562548\n555\n10165004.0\n\n\nPRJNA720968\n495\n7690661.0\n\n\n\n\n\n\nCheck memory usage.\n\nwalk(list(matrix_readcount_use, embedding), \\(x) {\n    print(object.size(x), units = \"auto\", standard = \"SI\")\n})\n\n1.5 GB\n6.7 MB"
  },
  {
    "objectID": "interpret_blastoids_public.html#inspection",
    "href": "interpret_blastoids_public.html#inspection",
    "title": "Characterization of Human Blastoids",
    "section": "Inspection",
    "text": "Inspection\n\nstudies &lt;- tibble::tribble(\n    ~bioproject, ~citation,\n    \"PRJNA277181\", \"Blakeley et al. 2015\",\n    \"PRJEB11202\", \"Petropoulos et al. 2016\",\n    \"PRJNA431392\", \"Zhou et al. 2019\",\n    \"PRJNA562548\", \"Xiang et al. 2020\",\n    #\n    \"PRJEB40781\", \"Tyser et al. 2021\",\n    #\n    \"PRJNA555602\", \"Zheng et al. 2019\",\n    #\n    \"PRJNA632839\", \"Yu et al. 2021\",\n    \"PRJNA658478\", \"Liu et al. 2021\",\n    \"PRJNA720968\", \"Yanagida et al. 2021\",\n    \"PRJNA667174\", \"Fan et al. 2021\",\n    \"PRJNA738498\", \"Sozen et al. 2021\",\n    \"PRJNA737139\", \"Kagawa et al. 2021\"\n)\n\nstudies &lt;- setNames(\n    object = studies$citation,\n    nm = studies$bioproject\n)\n\nembedding &lt;- embedding |&gt;\n    dplyr::mutate(\n        study = studies[bioproject],\n        study = dplyr::case_when(\n            is.na(study) ~ \"This study\",\n            TRUE ~ as.character(study)\n        ),\n        study = factor(\n            study,\n            levels = c(\n                \"This study\",\n                \"Yu et al. 2021\",\n                \"Yanagida et al. 2021\",\n                \"Petropoulos et al. 2016\",\n                \"Xiang et al. 2020\",\n                \"Tyser et al. 2021\",\n                \"Zheng et al. 2019\"\n            )\n        ),\n        batch_annotated = paste(study, batch, sep = \"; \")\n    )\n\n\nembedding |&gt;\n    dplyr::left_join(\n        cell_metadata |&gt; dplyr::select(cell, num_umis),\n        by = \"cell\"\n    ) |&gt;\n    dplyr::group_by(study, batch) |&gt;\n    dplyr::summarise(\n        num_cells = n(),\n        median_umis = median(num_umis)\n    ) |&gt;\n    gt::gt() |&gt;\n    gt::data_color(\n        columns = c(median_umis),\n        fn = scales::col_numeric(\n            palette = c(\n                \"green\", \"orange\", \"red\"\n            ),\n            domain = NULL\n        )\n    ) |&gt;\n    gt::fmt_number(\n        columns = c(median_umis),\n        sep_mark = \",\",\n        decimals = 1,\n        use_seps = TRUE,\n        suffixing = FALSE\n    ) |&gt;\n    gt::fmt_number(\n        columns = c(num_cells),\n        sep_mark = \",\",\n        decimals = 0,\n        use_seps = TRUE,\n        suffixing = FALSE\n    ) |&gt;\n    gt::grand_summary_rows(\n        columns = c(num_cells),\n        fns = list(\n            Sum = ~ sum(.)\n        ),\n        fmt = ~ gt::fmt_number(., decimals = 0, use_seps = TRUE)\n    )\n\n`summarise()` has grouped output by 'study'. You can override using the\n`.groups` argument.\n\n\n\n\n\n\n\n      batch\n      num_cells\n      median_umis\n    \n\n\nThis study\n    \n\n\nLW119\n2,236\n2,956.5\n\n\n\nLW120\n435\n17,392.0\n\n\n\nLW121\n5,130\n12,536.0\n\n\n\nLW122\n287\n100,092.0\n\n\nYu et al. 2021\n    \n\n\nLW60\n4,497\n14,421.0\n\n\n\nLW61\n5,156\n7,625.0\n\n\nYanagida et al. 2021\n    \n\n\nPRJNA720968\n495\n7,690,661.0\n\n\nPetropoulos et al. 2016\n    \n\n\nPRJEB11202\n1,529\n1,551,093.0\n\n\nXiang et al. 2020\n    \n\n\nPRJNA562548\n555\n10,165,004.0\n\n\nTyser et al. 2021\n    \n\n\nPRJEB40781\n1,195\n899,241.0\n\n\nZheng et al. 2019\n    \n\n\nGSM3956280\n5,454\n23,322.0\n\n\n\nGSM3956281\n4,512\n27,887.0\n\n\nSum\n—\n31,481\n—\n\n\n\n\n\n\n\nGEOM_POINT_SIZE &lt;- 0.25\nRASTERISED &lt;- TRUE\nx_column &lt;- \"x_umap_min_dist=0.1\"\ny_column &lt;- \"y_umap_min_dist=0.1\"\n\n\nEMBEDDING_TITLE_PREFIX &lt;- \"UMAP\"\nembedding_type &lt;- EMBEDDING_TITLE_PREFIX\n\n\np_embedding_leiden &lt;- plot_embedding(\n    data = embedding[, c(x_column, y_column)],\n    color = embedding$leiden |&gt; as.factor(),\n    label = glue::glue(\"{EMBEDDING_TITLE_PREFIX}; Cluster\"),\n    color_labels = TRUE,\n    color_legend = FALSE,\n    sort_values = FALSE,\n    shuffle_values = TRUE,\n    rasterise = RASTERISED,\n    geom_point_size = GEOM_POINT_SIZE * 2\n) +\n    theme_customized_embedding()\n\np_embedding_batch &lt;- plot_embedding(\n    data = embedding[, c(x_column, y_column)],\n    color = embedding$batch |&gt; as.factor(),\n    label = glue::glue(\"{EMBEDDING_TITLE_PREFIX}; Batch\"),\n    color_labels = FALSE,\n    color_legend = TRUE,\n    sort_values = FALSE,\n    shuffle_values = TRUE,\n    rasterise = RASTERISED,\n    geom_point_size = GEOM_POINT_SIZE * 2\n) +\n    theme_customized_embedding()\n\np_embedding_UMI &lt;- plot_embedding(\n    data = embedding[, c(x_column, y_column)],\n    color = log10(Matrix::colSums(matrix_readcount_use[, embedding$cell])),\n    label = glue::glue(\"{EMBEDDING_TITLE_PREFIX}; UMI\"),\n    color_legend = TRUE,\n    sort_values = FALSE,\n    shuffle_values = TRUE,\n    rasterise = RASTERISED,\n    geom_point_size = GEOM_POINT_SIZE * 2\n) +\n    theme_customized_embedding()\n\np_embedding_MT &lt;- plot_embedding(\n    data = embedding[, c(x_column, y_column)],\n    color = embedding |&gt;\n        dplyr::left_join(cell_metadata, by = c(\"cell\")) |&gt;\n        dplyr::pull(mt_percentage),\n    label = glue::glue(\"{EMBEDDING_TITLE_PREFIX}; MT %\"),\n    color_legend = TRUE,\n    sort_values = FALSE,\n    shuffle_values = TRUE,\n    rasterise = RASTERISED,\n    geom_point_size = GEOM_POINT_SIZE * 2\n) +\n    theme_customized_embedding()\n\npurrr::reduce(\n    list(\n        p_embedding_leiden,\n        p_embedding_batch,\n        p_embedding_UMI,\n        p_embedding_MT\n    ), `+`\n) +\n    patchwork::plot_layout(ncol = 2) +\n    patchwork::plot_annotation(\n        theme = ggplot2::theme(plot.margin = ggplot2::margin())\n    )"
  },
  {
    "objectID": "interpret_blastoids_public.html#integration-w-other-datasets",
    "href": "interpret_blastoids_public.html#integration-w-other-datasets",
    "title": "Characterization of Human Blastoids",
    "section": "Integration w/ other datasets",
    "text": "Integration w/ other datasets\nMetadata\nBlastoid\nYu et al. 2021; PRJNA632839\n\ncell_metadata_PRJNA632839 &lt;- vroom::vroom(\n    file = file.path(\n        PROJECT_DIR,\n        \"raw\",\n        \"PRJNA632839\",\n        \"embedding.csv.gz\"\n    ),\n    show_col_types = FALSE\n) |&gt;\n    dplyr::filter(batch %in% c(\"LW60\", \"LW61\")) |&gt;\n    dplyr::mutate(\n        lineage = dplyr::case_when(\n            louvain %in% c(11) ~ \"ELCs\",\n            louvain %in% c(18) ~ \"HLCs\",\n            louvain %in% c(0, 1, 8, 9, 12, 17) ~ \"TLCs\",\n            TRUE ~ paste0(\"U\", louvain)\n        ),\n        lineage = factor(\n            lineage,\n            levels = stringr::str_sort(unique(lineage), numeric = TRUE)\n        )\n    )\n\nYanagida et al. 2021; PRJNA720968\n\ncell_metadata_PRJNA720968 &lt;- vroom::vroom(\n    file = file.path(\n        PROJECT_DIR,\n        \"raw/public\",\n        \"PRJNA720968\",\n        \"matrix\",\n        \"cell_metadata.csv\"\n    ),\n    show_col_types = FALSE\n) |&gt;\n    dplyr::mutate(\n        origin = factor(\n            origin,\n            levels = c(\"Blastocyst\", \"Blastoid\")\n        ),\n        #\n        developmental_stage = factor(\n            developmental_stage,\n            levels = stringr::str_sort(\n                x = unique(developmental_stage), numeric = TRUE\n            )\n        ),\n        #\n        lineage = paste(origin, lineage, sep = \": \"),\n        lineage = factor(\n            lineage,\n            levels = c(\n                \"Blastocyst: Epiblast\",\n                \"Blastocyst: Hypoblast\",\n                \"Blastocyst: Inner Cell Mass\",\n                \"Blastocyst: Inner Cell Mass-Trophectoderm Transition\",\n                \"Blastocyst: Early Trophectoderm\",\n                \"Blastocyst: Trophectoderm\",\n                #\n                \"Blastoid: Epiblast\",\n                \"Blastoid: Hypoblast\",\n                \"Blastoid: Transitioning\",\n                \"Blastoid: Trophectoderm\"\n            )\n        )\n    )\n\nPublic\nPetropoulos et al. 2016; PRJEB11202\n\ncell_metadata_PRJEB11202 &lt;- vroom::vroom(\n    file = file.path(\n        PROJECT_DIR,\n        \"raw\",\n        \"public\",\n        \"PRJEB11202\",\n        \"matrix/cell_metadata.csv\"\n    ),\n    show_col_types = FALSE\n) |&gt;\n    dplyr::mutate(\n        developmental_stage = stringr::str_remove(\n            string = individual,\n            pattern = \"\\\\..+$\"\n        ),\n        developmental_stage = factor(\n            developmental_stage,\n            levels = stringr::str_sort(\n                unique(developmental_stage),\n                numeric = TRUE\n            )\n        ),\n        #\n        lineage = factor(\n            inferred_lineage,\n            levels = c(\n                \"epiblast\",\n                \"primitive_endoderm\",\n                \"trophectoderm\",\n                \"not_applicable\"\n            )\n        )\n    ) |&gt;\n    dplyr::select(\n        cell, lineage, developmental_stage\n    )\n\nZhou et al. 2019; PRJNA431392\n\nembryos_selected_PRJNA431392 &lt;- c(\n    \"ha_D6_E2\",\n    \"hm_D6_E1\",\n    \"hm_D6_E2\",\n    \"hm_D8_E2\",\n    \"hm_D8_E3\",\n    \"hm_D8_E5\",\n    \"ha_D8_E1\",\n    \"hm_D8_E1\",\n    \"hv_D8_E1\",\n    \"hv_D8_E2\",\n    \"hv_D8_E3\",\n    \"hv_D10_E6\",\n    \"ha_D10_E1\",\n    \"ha_D10_E2\",\n    \"hm_D10_E4\",\n    \"hm_D10_E9\",\n    \"hv_D10_E7\",\n    \"hv_D10_E8\",\n    \"ha_D12_E1\",\n    \"hv_D12_E1\",\n    \"hv_D12_E2\"\n)\n\ncell_metadata_PRJNA431392 &lt;- vroom::vroom(\n    file = file.path(\n        PROJECT_DIR,\n        \"raw\",\n        \"public\",\n        \"PRJNA431392\",\n        \"matrix/cell_metadata.csv\"\n    ),\n    show_col_types = FALSE\n) |&gt;\n    dplyr::mutate(\n        developmental_stage = factor(\n            Day,\n            levels = stringr::str_sort(\n                unique(Day),\n                numeric = TRUE\n            )\n        ),\n        lineage = factor(\n            Lineage,\n            levels = c(\n                \"EPI\",\n                \"PE\",\n                \"TE\",\n                \"MIX\"\n            )\n        ),\n        `3184` = case_when(\n            Ori_Day_Emb %in% embryos_selected_PRJNA431392 ~ \"1\",\n            TRUE ~ \"0\"\n        )\n    ) |&gt;\n    dplyr::rename(cell = Sample)\n\nrm(embryos_selected_PRJNA431392)\n\nXiang et al. 2020; PRJNA562548\n\ncell_metadata_PRJNA562548 &lt;- vroom::vroom(\n    file = file.path(\n        PROJECT_DIR,\n        \"raw\",\n        \"public\",\n        \"PRJNA562548\",\n        \"matrix/cell_metadata.csv\"\n    ),\n    show_col_types = FALSE\n) |&gt;\n    dplyr::select(\n        cell = `Sample Name`,\n        developmental_stage = Age,\n        lineage = Cell_type\n    ) |&gt;\n    dplyr::mutate(\n        developmental_stage = stringr::str_replace(\n            string = developmental_stage,\n            pattern = \"embryo invitro day \",\n            replacement = \"E\"\n        ),\n        developmental_stage = factor(\n            developmental_stage,\n            levels = stringr::str_sort(\n                x = unique(developmental_stage),\n                numeric = TRUE\n            )\n        ),\n        lineage = factor(\n            lineage,\n            levels = c(\n                \"ICM\",\n                \"EPI\",\n                \"PSA-EPI\",\n                \"Hypoblast\",\n                \"CTBs\",\n                \"STBs\",\n                \"EVTs\"\n            )\n        )\n    )\n\nZheng et al. 2019; PRJNA555602\n\ncell_metadata_PRJNA555602 &lt;- vroom::vroom(\n    file = file.path(\n        PROJECT_DIR,\n        \"raw\",\n        \"public\",\n        \"PRJNA555602\",\n        \"matrix/cell_metadata.csv\"\n    ),\n    show_col_types = FALSE\n) |&gt;\n    dplyr::mutate(\n        batch = case_when(\n            old_ident == \"10X_Embryoid\" ~ \"GSM3956280\",\n            old_ident == \"10X_H9_Amnion\" ~ \"GSM3956281\"\n        ),\n        cell = stringr::str_remove(string = cell, pattern = \"\\\\..+\"),\n        # cell = paste(batch, cell, sep = \"_\"),\n        #\n        cell_type = case_when(\n            rna_snn_res_0.3 %in% 0 ~ \"Transwell-AMLC\",\n            rna_snn_res_0.3 %in% 1 ~ \"MeLC2\",\n            rna_snn_res_0.3 %in% 2 ~ \"Human_ES_cell\",\n            rna_snn_res_0.3 %in% 3 ~ \"MeLC1\",\n            rna_snn_res_0.3 %in% 4 ~ \"hPGCLC\",\n            rna_snn_res_0.3 %in% 5 ~ \"AMLC\"\n        ),\n        cell_type = factor(\n            cell_type,\n            levels = c(\n                \"Human_ES_cell\",\n                # human PGC-like cells\n                \"hPGCLC\",\n                \"Transwell-AMLC\",\n                # amniotic ectoderm-like cells\n                \"AMLC\",\n                # mesoderm-like cell\n                \"MeLC1\",\n                \"MeLC2\"\n            )\n        )\n    )\n\nTyser et al. 2021; PRJEB40781\n\ncell_metadata_PRJEB40781 &lt;- vroom::vroom(\n    file = file.path(\n        PROJECT_DIR,\n        \"raw\",\n        \"public\",\n        \"PRJEB40781\",\n        \"matrix/cell_metadata.csv\"\n    ),\n    show_col_types = FALSE\n) |&gt;\n    dplyr::mutate(\n        lineage = factor(lineage),\n        lineage_ontology = factor(lineage_ontology),\n        sampling_site = factor(sampling_site)\n    )\n\nCell group\nYu et al. 2021; PRJNA632839\n\nbioproject &lt;- \"PRJNA632839\"\ncell_metadata_selected &lt;- cell_metadata_PRJNA632839\n\nLineage\n\nselected_column &lt;- \"lineage\"\n\nvalues &lt;- embedding |&gt;\n    dplyr::left_join(\n        cell_metadata_selected |&gt;\n            dplyr::select(cell, dplyr::all_of(selected_column)),\n        by = \"cell\"\n    ) |&gt;\n    dplyr::pull(.data[[selected_column]])\n\np_embedding_lineage &lt;- plot_embedding(\n    data = embedding[, c(x_column, y_column)],\n    color = values,\n    label = glue::glue(\n        \"{EMBEDDING_TITLE_PREFIX}; {studies[bioproject]}; \",\n        selected_column |&gt;\n            stringr::str_to_title() |&gt;\n            stringr::str_replace(pattern = \"_\", replacement = \" \")\n    ),\n    color_labels = FALSE,\n    color_legend = TRUE,\n    sort_values = FALSE,\n    shuffle_values = TRUE,\n    rasterise = RASTERISED,\n    geom_point_size = GEOM_POINT_SIZE * 1.5\n) +\n    theme_customized_embedding()\n\np_embedding_lineage +\n    ggplot2::scale_color_manual(\n        values = scales::hue_pal()(n = nlevels(values)),\n        na.value = \"grey70\",\n        breaks = levels(values)\n    )\n\n\n\n\n\n\n\nSeparated\n\nnum_columns &lt;- 3\nselected_column &lt;- \"louvain\"\nplot_embedding_highlight(\n    embedding = embedding |&gt;\n        dplyr::select(!.data[[selected_column]]),\n    x = cell_metadata_selected |&gt;\n        dplyr::select(\n            cell, .data[[selected_column]]\n        ) |&gt;\n        dplyr::mutate(\n            louvain = factor(louvain)\n        ),\n    y = selected_column,\n    label = studies[bioproject],\n    geom_point_size = GEOM_POINT_SIZE * 1.5,\n    n_cols = num_columns\n)\n\n\n\n\n\n\n\nYanagida et al. 2021; PRJNA720968\n\nbioproject &lt;- \"PRJNA720968\"\ncell_metadata_selected &lt;- cell_metadata_PRJNA720968\n\nLineage\n\nselected_column &lt;- \"lineage\"\n\nvalues &lt;- embedding |&gt;\n    dplyr::left_join(\n        cell_metadata_selected |&gt;\n            dplyr::select(cell, .data[[selected_column]]),\n        by = \"cell\"\n    ) |&gt;\n    dplyr::pull(.data[[selected_column]])\n\np_embedding_lineage &lt;- plot_embedding(\n    data = embedding[, c(x_column, y_column)],\n    color = values,\n    label = glue::glue(\n        \"{EMBEDDING_TITLE_PREFIX}; {studies[bioproject]}; \",\n        selected_column |&gt;\n            stringr::str_to_title() |&gt;\n            stringr::str_replace(pattern = \"_\", replacement = \" \")\n    ),\n    color_labels = FALSE,\n    color_legend = TRUE,\n    sort_values = FALSE,\n    shuffle_values = TRUE,\n    rasterise = RASTERISED,\n    geom_point_size = GEOM_POINT_SIZE * 2\n) +\n    theme_customized_embedding() +\n    ggplot2::scale_color_manual(\n        values = scales::hue_pal()(n = nlevels(values)),\n        na.value = \"grey70\",\n        breaks = levels(values)\n    )\n\nDevelopmental stage\n\nselected_column &lt;- \"developmental_stage\"\n\nvalues &lt;- embedding |&gt;\n    dplyr::left_join(\n        cell_metadata_selected |&gt;\n            dplyr::select(cell, .data[[selected_column]]),\n        by = \"cell\"\n    ) |&gt;\n    dplyr::pull(.data[[selected_column]])\n\np_embedding_developmental_stage &lt;- plot_embedding(\n    data = embedding[, c(x_column, y_column)],\n    color = values,\n    label = glue::glue(\n        \"{EMBEDDING_TITLE_PREFIX}; {studies[bioproject]}; \",\n        selected_column |&gt;\n            stringr::str_to_title() |&gt;\n            stringr::str_replace(pattern = \"_\", replacement = \" \")\n    ),\n    color_labels = FALSE,\n    color_legend = TRUE,\n    sort_values = FALSE,\n    shuffle_values = TRUE,\n    rasterise = RASTERISED,\n    geom_point_size = GEOM_POINT_SIZE * 2\n) +\n    theme_customized_embedding() +\n    ggplot2::scale_color_manual(\n        values = scales::hue_pal()(n = nlevels(values)),\n        na.value = \"grey70\",\n        breaks = levels(values)\n    )\n\n\nlist(\n    p_embedding_lineage, p_embedding_developmental_stage\n) |&gt;\n    purrr::reduce(`+`) +\n    patchwork::plot_layout(ncol = 2) +\n    patchwork::plot_annotation(\n        theme = ggplot2::theme(plot.margin = ggplot2::margin())\n    )\n\n\n\n\n\n\n\nSeparated\n\nnum_columns &lt;- 3\nselected_column &lt;- \"lineage\"\nplot_embedding_highlight(\n    embedding = embedding,\n    x = cell_metadata_selected |&gt;\n        dplyr::select(cell, .data[[selected_column]]),\n    y = selected_column,\n    label = studies[bioproject],\n    geom_point_size = GEOM_POINT_SIZE * 2,\n    n_cols = num_columns\n)\n\n\n\n\n\n\n\nPetropoulos et al. 2016; PRJEB11202\n\nbioproject &lt;- \"PRJEB11202\"\ncell_metadata_selected &lt;- cell_metadata_PRJEB11202\n\nLineage\n\nselected_column &lt;- \"lineage\"\n\nvalues &lt;- embedding |&gt;\n    dplyr::left_join(cell_metadata_selected, by = \"cell\") |&gt;\n    dplyr::pull(.data[[selected_column]])\n\np_embedding_lineage &lt;- plot_embedding(\n    data = embedding[, c(x_column, y_column)],\n    color = values,\n    label = glue::glue(\n        \"{EMBEDDING_TITLE_PREFIX}; {studies[bioproject]}; \",\n        selected_column |&gt;\n            stringr::str_to_title() |&gt;\n            stringr::str_replace(pattern = \"_\", replacement = \" \")\n    ),\n    color_labels = FALSE,\n    color_legend = TRUE,\n    sort_values = FALSE,\n    shuffle_values = TRUE,\n    rasterise = RASTERISED,\n    geom_point_size = GEOM_POINT_SIZE * 1.5,\n    na_value = \"grey70\"\n) +\n    theme_customized_embedding() +\n    ggplot2::scale_color_manual(\n        values = scales::hue_pal()(n = nlevels(values)),\n        na.value = \"grey70\",\n        breaks = levels(values)\n    )\n\nDevelopmental stage\n\nselected_column &lt;- \"developmental_stage\"\n\nvalues &lt;- embedding |&gt;\n    dplyr::left_join(cell_metadata_selected, by = \"cell\") |&gt;\n    dplyr::pull(.data[[selected_column]])\n\np_embedding_developmental_stage &lt;- plot_embedding(\n    data = embedding[, c(x_column, y_column)],\n    color = values,\n    label = glue::glue(\n        \"{EMBEDDING_TITLE_PREFIX}; {studies[bioproject]}; \",\n        selected_column |&gt;\n            stringr::str_to_title() |&gt;\n            stringr::str_replace(pattern = \"_\", replacement = \" \")\n    ),\n    color_labels = FALSE,\n    color_legend = TRUE,\n    sort_values = FALSE,\n    shuffle_values = TRUE,\n    rasterise = RASTERISED,\n    geom_point_size = GEOM_POINT_SIZE * 1.5,\n    na_value = \"grey70\"\n) +\n    theme_customized_embedding() +\n    ggplot2::scale_color_manual(\n        values = scales::hue_pal()(n = nlevels(values)),\n        na.value = \"grey70\",\n        breaks = levels(values)\n    )\n\n\nlist(\n    p_embedding_lineage,\n    p_embedding_developmental_stage\n) |&gt;\n    purrr::reduce(`+`) +\n    patchwork::plot_layout(ncol = 2) +\n    patchwork::plot_annotation(\n        theme = ggplot2::theme(plot.margin = ggplot2::margin())\n    )\n\n\n\n\n\n\n\nSeparated\n\nnum_columns &lt;- 2\nselected_column &lt;- \"lineage\"\nplot_embedding_highlight(\n    embedding = embedding,\n    x = cell_metadata_selected,\n    y = selected_column,\n    label = studies[bioproject],\n    geom_point_size = GEOM_POINT_SIZE * 1.5,\n    n_cols = num_columns\n)\n\n\n\n\n\n\n\n\nnum_columns &lt;- 2\nselected_column &lt;- \"developmental_stage\"\nplot_embedding_highlight(\n    embedding = embedding,\n    x = cell_metadata_selected,\n    y = selected_column,\n    label = studies[bioproject],\n    geom_point_size = GEOM_POINT_SIZE * 1.5,\n    n_cols = num_columns\n)\n\n\n\n\n\n\n\nXiang et al. 2020; PRJNA562548\n\nbioproject &lt;- \"PRJNA562548\"\ncell_metadata_selected &lt;- cell_metadata_PRJNA562548\n\nLineage\n\nselected_column &lt;- \"lineage\"\n\nvalues &lt;- embedding |&gt;\n    dplyr::left_join(cell_metadata_selected, by = \"cell\") |&gt;\n    dplyr::pull(.data[[selected_column]])\n\np_embedding_lineage &lt;- plot_embedding(\n    data = embedding[, c(x_column, y_column)],\n    color = values,\n    label = glue::glue(\n        \"{EMBEDDING_TITLE_PREFIX}; {studies[bioproject]}; \",\n        selected_column |&gt;\n            stringr::str_to_title() |&gt;\n            stringr::str_replace(pattern = \"_\", replacement = \" \")\n    ),\n    color_labels = FALSE,\n    color_legend = TRUE,\n    sort_values = FALSE,\n    shuffle_values = TRUE,\n    rasterise = RASTERISED,\n    geom_point_size = GEOM_POINT_SIZE * 2,\n    na_value = \"grey70\"\n) +\n    theme_customized_embedding() +\n    ggplot2::scale_color_manual(\n        values = scales::hue_pal()(n = nlevels(values)),\n        na.value = \"grey70\",\n        breaks = levels(values)\n    )\n\nDevelopmental stage\n\nselected_column &lt;- \"developmental_stage\"\n\nvalues &lt;- embedding |&gt;\n    dplyr::left_join(cell_metadata_selected, by = \"cell\") |&gt;\n    dplyr::pull(.data[[selected_column]])\n\np_embedding_developmental_stage &lt;- plot_embedding(\n    data = embedding[, c(x_column, y_column)],\n    color = values,\n    label = glue::glue(\n        \"{EMBEDDING_TITLE_PREFIX}; {studies[bioproject]}; \",\n        selected_column |&gt;\n            stringr::str_to_title() |&gt;\n            stringr::str_replace(pattern = \"_\", replacement = \" \")\n    ),\n    color_labels = FALSE,\n    color_legend = TRUE,\n    sort_values = FALSE,\n    shuffle_values = TRUE,\n    rasterise = RASTERISED,\n    geom_point_size = GEOM_POINT_SIZE * 2,\n    na_value = \"grey70\"\n) +\n    theme_customized_embedding() +\n    ggplot2::scale_color_manual(\n        values = scales::hue_pal()(n = nlevels(values)),\n        na.value = \"grey70\",\n        breaks = levels(values)\n    )\n\n\nlist(\n    p_embedding_lineage,\n    p_embedding_developmental_stage\n) |&gt;\n    purrr::reduce(`+`) +\n    patchwork::plot_layout(ncol = 2) +\n    patchwork::plot_annotation(\n        theme = ggplot2::theme(plot.margin = ggplot2::margin())\n    )\n\n\n\n\n\n\n\nSeparated\n\nnum_columns &lt;- 3\nselected_column &lt;- \"lineage\"\nplot_embedding_highlight(\n    embedding = embedding,\n    x = cell_metadata_selected,\n    y = selected_column,\n    label = studies[bioproject],\n    geom_point_size = GEOM_POINT_SIZE * 2,\n    n_cols = num_columns\n)\n\n\n\n\n\n\n\n\nnum_columns &lt;- 2\nselected_column &lt;- \"developmental_stage\"\nplot_embedding_highlight(\n    embedding = embedding,\n    x = cell_metadata_selected,\n    y = selected_column,\n    label = studies[bioproject],\n    geom_point_size = GEOM_POINT_SIZE * 2,\n    n_cols = num_columns\n)\n\n\n\n\n\n\n\nZheng et al. 2019; PRJNA555602\n\nbioproject &lt;- \"PRJNA555602\"\ncell_metadata_selected &lt;- cell_metadata_PRJNA555602\n\nCell type\n\nselected_column &lt;- \"cell_type\"\n\nvalues &lt;- embedding |&gt;\n    dplyr::left_join(cell_metadata_selected, by = c(\"cell\")) |&gt;\n    dplyr::pull(.data[[selected_column]])\n\np_embedding_cell_type &lt;- plot_embedding(\n    data = embedding[, c(x_column, y_column)],\n    color = values,\n    label = glue::glue(\n        \"{EMBEDDING_TITLE_PREFIX}; {studies[bioproject]}; \",\n        selected_column |&gt;\n            stringr::str_to_title() |&gt;\n            stringr::str_replace(pattern = \"_\", replacement = \" \")\n    ),\n    color_labels = FALSE,\n    color_legend = TRUE,\n    sort_values = FALSE,\n    shuffle_values = TRUE,\n    rasterise = RASTERISED,\n    geom_point_size = GEOM_POINT_SIZE\n) +\n    theme_customized_embedding() +\n    ggplot2::scale_color_manual(\n        values = scales::hue_pal()(n = nlevels(values)),\n        na.value = \"grey70\",\n        breaks = levels(values)\n    )\n\nSeparated\n\nnum_columns &lt;- 3\nselected_column &lt;- \"cell_type\"\nplot_embedding_highlight(\n    embedding = embedding,\n    x = cell_metadata_selected,\n    y = selected_column,\n    label = studies[bioproject],\n    geom_point_size = GEOM_POINT_SIZE * 1.5,\n    n_cols = num_columns\n)\n\n\n\n\n\n\n\nTyser et al. 2021; PRJEB40781\n\nbioproject &lt;- \"PRJEB40781\"\ncell_metadata_selected &lt;- cell_metadata_PRJEB40781\n\nLineage\n\nselected_column &lt;- \"lineage\"\n\nvalues &lt;- embedding |&gt;\n    dplyr::left_join(cell_metadata_selected, by = \"cell\") |&gt;\n    dplyr::pull(.data[[selected_column]])\n\np_embedding_lineage &lt;- plot_embedding(\n    data = embedding[, c(x_column, y_column)],\n    color = values,\n    label = glue::glue(\n        \"{EMBEDDING_TITLE_PREFIX}; {studies[bioproject]}; \",\n        selected_column |&gt;\n            stringr::str_to_title() |&gt;\n            stringr::str_replace(pattern = \"_\", replacement = \" \")\n    ),\n    color_labels = FALSE,\n    color_legend = TRUE,\n    sort_values = TRUE,\n    shuffle_values = TRUE,\n    rasterise = RASTERISED,\n    geom_point_size = GEOM_POINT_SIZE * 2,\n    na_value = \"grey70\"\n) +\n    theme_customized_embedding() +\n    ggplot2::scale_color_manual(\n        values = scales::hue_pal()(n = nlevels(values)),\n        na.value = \"grey70\",\n        breaks = levels(values)\n    )\n\nSampling site\n\nselected_column &lt;- \"sampling_site\"\n\nvalues &lt;- embedding |&gt;\n    dplyr::left_join(cell_metadata_selected, by = \"cell\") |&gt;\n    dplyr::pull(.data[[selected_column]])\n\np_embedding_sampling_site &lt;- plot_embedding(\n    data = embedding[, c(x_column, y_column)],\n    color = values,\n    label = glue::glue(\n        \"{EMBEDDING_TITLE_PREFIX}; {studies[bioproject]}; \",\n        selected_column |&gt;\n            stringr::str_to_title() |&gt;\n            stringr::str_replace(pattern = \"_\", replacement = \" \")\n    ),\n    color_labels = FALSE,\n    color_legend = TRUE,\n    sort_values = FALSE,\n    shuffle_values = TRUE,\n    rasterise = RASTERISED,\n    geom_point_size = GEOM_POINT_SIZE * 2,\n    na_value = \"grey70\"\n) +\n    theme_customized_embedding() +\n    ggplot2::scale_color_manual(\n        values = scales::hue_pal()(n = nlevels(values)),\n        na.value = \"grey70\",\n        breaks = levels(values)\n    )\n\n\nlist(\n    p_embedding_lineage,\n    p_embedding_sampling_site\n) |&gt;\n    purrr::reduce(`+`) +\n    patchwork::plot_layout(ncol = 2) +\n    patchwork::plot_annotation(\n        theme = ggplot2::theme(plot.margin = ggplot2::margin())\n    )"
  },
  {
    "objectID": "interpret_blastoids_public.html#blastoids-globally-resemble-blastocysts",
    "href": "interpret_blastoids_public.html#blastoids-globally-resemble-blastocysts",
    "title": "Characterization of Human Blastoids",
    "section": "Blastoids globally resemble blastocysts",
    "text": "Blastoids globally resemble blastocysts\n\nembedding &lt;- embedding |&gt;\n    dplyr::left_join(\n        cell_metadata_PRJEB11202 |&gt; dplyr::select(cell, lineage),\n        by = c(\"cell\")\n    ) |&gt;\n    dplyr::mutate(\n        lineage = dplyr::case_when(\n            lineage == \"epiblast\" ~ \"EPI\",\n            lineage == \"primitive_endoderm\" ~ \"HYP\",\n            lineage == \"trophectoderm\" ~ \"TE\",\n            lineage == \"not_applicable\" ~ \"Pre-lineage\"\n        )\n    ) |&gt;\n    dplyr::left_join(\n        cell_metadata_PRJNA562548 |&gt;\n            dplyr::filter(\n                developmental_stage %in% c(\"E6\", \"E7\")\n            ) |&gt;\n            dplyr::select(cell, lineage_ = lineage),\n        by = \"cell\"\n    ) |&gt;\n    dplyr::mutate(\n        lineage = dplyr::case_when(\n            lineage_ == \"EPI\" ~ \"EPI\",\n            lineage_ == \"Hypoblast\" ~ \"HYP\",\n            lineage_ == \"CTBs\" ~ \"TE\",\n            lineage_ == \"ICM\" ~ \"ICM\",\n            TRUE ~ lineage\n        )\n    ) |&gt;\n    dplyr::select(!lineage_) |&gt;\n    dplyr::left_join(\n        cell_metadata_PRJNA720968 |&gt;\n            dplyr::filter(origin == \"Blastocyst\") |&gt;\n            dplyr::select(cell, lineage_ = lineage),\n        by = \"cell\"\n    ) |&gt;\n    dplyr::mutate(\n        lineage = dplyr::case_when(\n            lineage_ == \"Blastocyst: Epiblast\" ~ \"EPI\",\n            lineage_ == \"Blastocyst: Hypoblast\" ~ \"HYP\",\n            lineage_ %in% c(\n                \"Blastocyst: Early Trophectoderm\",\n                \"Blastocyst: Trophectoderm\"\n            ) ~ \"TE\",\n            lineage_ %in% c(\n                \"Inner Cell Mass\"\n            ) ~ \"ICM\",\n            lineage_ %in% c(\n                \"Blastocyst: Inner Cell Mass-Trophectoderm Transition\"\n            ) ~ \"ICM-TE\",\n            # lineage_ %in% c(\"Other\") ~ \"NA\",\n            TRUE ~ lineage\n        )\n    ) |&gt;\n    dplyr::select(!lineage_) |&gt;\n    dplyr::mutate(\n        lineage = factor(\n            lineage,\n            levels = c(\n                \"Pre-lineage\",\n                \"EPI\", \"HYP\", \"TE\", \"ICM\", \"ICM-TE\"\n            )\n        )\n    )\n\n\ncells_blastocyst_LW119 &lt;- scan(\n    file = file.path(\n        PROJECT_DIR, \"genotyping\",\n        \"result_vartrix_LW121_no-duplicates_umi_mapq10_consensus\",\n        \"cells_LW119_blastocyst_snp20.txt\"\n    ),\n    what = \"character\"\n)\n\ncells_blastoid_LW119_LW121 &lt;- embedding |&gt;\n    dplyr::filter(\n        batch %in% c(\"LW119\", \"LW121\"),\n        !cell %in% cells_blastocyst_LW119\n    ) |&gt;\n    dplyr::pull(cell)\n\ncells_LW119_LW121 &lt;- embedding |&gt;\n    dplyr::filter(\n        batch %in% c(\"LW119\", \"LW121\")\n    ) |&gt;\n    dplyr::pull(cell)\n\nMap(\n    length,\n    list(cells_LW119_LW121, cells_blastoid_LW119_LW121, cells_blastocyst_LW119)\n) |&gt; unlist()\n\n[1] 7366 7165  201\n\n\nCell group\n\nGEOM_POINT_STROKE &lt;- 0.125\n\n\ncolor_palette_lineage_blastocyst &lt;- c(\n    \"Pre-lineage\" = \"#ffd8b1\",\n    EPI = \"#8ace7e\",\n    HYP = \"#ff684c\",\n    TE = \"#9467bd\",\n    ICM = \"#4E79A7\",\n    \"ICM-TE\" = \"#F97A1F\",\n    \"Non-blastocyst\" = \"grey70\",\n    #\n    \"Blastocyst; This study\" = \"#c969a1\"\n)\n\nshape_palette_study &lt;- c(\n    \"This study\" = 16,\n    \"Petropoulos et al. 2016\" = 15,\n    \"Xiang et al. 2020\" = 17,\n    \"Yu et al. 2021\" = 1,\n    \"Yanagida et al. 2021\" = 18,\n    \"Zheng et al. 2019\\nTyser et al. 2021\" = 4,\n    \"Other\" = 4\n)\n\n\nclusters_Pre_lineage &lt;- c(21, 23)\nclusters_ELCs &lt;- c(3, 6, 7)\nclusters_HLCs &lt;- c(20)\nclusters_TLCs &lt;- c(12, 14, 11, 2, 8, 17, 4, 10, 18)\n\n\nvalues &lt;- embedding |&gt;\n    dplyr::mutate(\n        value = lineage,\n        value = dplyr::case_when(\n            cell %in% cells_blastocyst_LW119 ~ \"Blastocyst; This study\",\n            batch %in% c(\"LW120\", \"LW122\") ~ \"Blastocyst; This study\",\n            is.na(value) ~ \"Non-blastocyst\",\n            TRUE ~ as.character(value)\n        ),\n        value = dplyr::case_when(\n            value %in% c(\"Blastocyst; This study\") & (leiden %in% clusters_Pre_lineage) ~ \"Pre-lineage\",\n            value %in% c(\"Blastocyst; This study\") & (leiden %in% clusters_ELCs) ~ \"EPI\",\n            value %in% c(\"Blastocyst; This study\") & (leiden %in% clusters_HLCs) ~ \"HYP\",\n            value %in% c(\"Blastocyst; This study\") & (leiden %in% clusters_TLCs) ~ \"TE\",\n            TRUE ~ as.character(value)\n        ),\n        value = factor(\n            value,\n            levels = c(\n                \"Non-blastocyst\", levels(embedding$lineage)\n            )\n        )\n    ) |&gt;\n    dplyr::pull(value)\n\nvalues_shape &lt;- embedding |&gt;\n    dplyr::mutate(\n        value = dplyr::case_when(\n            study %in% c(\n                \"Tyser et al. 2021\",\n                \"Zheng et al. 2019\"\n            ) ~ \"Zheng et al. 2019\\nTyser et al. 2021\", # \"Other\",\n            TRUE ~ as.character(study)\n        ),\n        value = factor(\n            value,\n            levels = c(\n                \"Petropoulos et al. 2016\",\n                \"Xiang et al. 2020\",\n                \"Yanagida et al. 2021\",\n                \"Yu et al. 2021\",\n                \"This study\",\n                \"Zheng et al. 2019\\nTyser et al. 2021\"\n            )\n        )\n    ) |&gt;\n    dplyr::pull(value)\n\np_embedding_lineage_blastocyst &lt;- plot_embedding(\n    data = embedding[, c(x_column, y_column)],\n    color = values,\n    # label = glue::glue(\"{EMBEDDING_TITLE_PREFIX}; Blastocyst\"),\n    color_labels = FALSE,\n    color_legend = TRUE,\n    shape = values_shape,\n    sort_values = TRUE,\n    shuffle_values = FALSE,\n    rasterise = TRUE,\n    geom_point_size = GEOM_POINT_SIZE * 1.5 * 2,\n    geom_point_stroke = 0.125,\n    geom_point_legend_ncol = 1\n) +\n    ggplot2::guides(\n        shape = ggplot2::guide_legend(\n            override.aes = list(\n                size = 2,\n                alpha = 1,\n                stroke = c(0, 0, 0, 0.25, 0, 0.25)\n            ),\n            ncol = 1,\n            order = 2\n        )\n    ) +\n    ggplot2::scale_color_manual(\n        values = c(\n            color_palette_lineage_blastocyst\n        ),\n        breaks = c(\n            levels(embedding$lineage),\n            \"Blastocyst; This study\",\n            \"Non-blastocyst\"\n        ),\n        na.value = \"grey70\"\n    ) +\n    ggplot2::scale_shape_manual(\n        values = shape_palette_study\n    ) +\n    theme_customized_embedding(x = 0.035 / 2, y = 0.995, void = TRUE)\n\n\ncluster_labels &lt;- list(\n    sort(unique(embedding$leiden)) |&gt;\n        {\n            \\(x) x[!x %in% c(clusters_ELCs, clusters_HLCs, clusters_TLCs)]\n        }() |&gt;\n        tibble::enframe() |&gt;\n        dplyr::mutate(\n            name = as.character(name)\n        ),\n    sort(clusters_TLCs) |&gt;\n        tibble::enframe() |&gt;\n        dplyr::filter(value != 17) |&gt;\n        dplyr::mutate(\n            name = 1:dplyr::n()\n        ) |&gt;\n        dplyr::mutate(\n            name = paste0(\"TE.\", name)\n        ),\n    sort(clusters_ELCs) |&gt;\n        tibble::enframe() |&gt;\n        dplyr::mutate(\n            name = paste0(\"EPI.\", name)\n        ),\n    data.frame(\n        name = \"Polar.TE\",\n        value = 17\n    ),\n    sort(clusters_HLCs) |&gt;\n        tibble::enframe() |&gt;\n        dplyr::mutate(\n            name = paste0(\"HYP\")\n        )\n) |&gt;\n    dplyr::bind_rows()\n\ncluster_labels &lt;- setNames(\n    object = cluster_labels$name,\n    nm = cluster_labels$value\n)\n\n\ncluster_labels &lt;- embedding |&gt;\n    dplyr::group_by(leiden) |&gt;\n    dplyr::summarise(\n        x = median(.data[[x_column]]),\n        y = median(.data[[y_column]])\n    ) |&gt;\n    dplyr::mutate(\n        label = cluster_labels[as.character(leiden)]\n    ) |&gt;\n    as.data.frame()\n\n\np_embedding_leiden &lt;- plot_embedding(\n    data = embedding[, c(x_column, y_column)],\n    color = embedding$leiden |&gt; as.factor(),\n    # label = glue::glue(\"{EMBEDDING_TITLE_PREFIX}; Cluster\"),\n    color_labels = FALSE,\n    color_legend = FALSE,\n    sort_values = FALSE,\n    shuffle_values = TRUE,\n    rasterise = RASTERISED,\n    geom_point_size = GEOM_POINT_SIZE,\n    geom_point_stroke = GEOM_POINT_STROKE,\n    dpi = 900\n) +\n    ggplot2::annotate(\n        geom = \"text\",\n        x = cluster_labels[, \"x\"],\n        y = cluster_labels[, \"y\"],\n        label = cluster_labels[, \"label\"],\n        family = \"Arial\",\n        color = \"black\",\n        size = 5 / ggplot2::.pt,\n        parse = TRUE\n    ) +\n    theme_customized_embedding(void = TRUE)\n\n\n# Zheng et al. 2019; Amnion\np_embedding_lineage_amnion &lt;- plot_embedding(\n    data = embedding[, c(x_column, y_column)],\n    color = embedding |&gt;\n        dplyr::left_join(\n            cell_metadata_PRJNA555602,\n            by = \"cell\"\n        ) |&gt;\n        dplyr::select(\n            cell,\n            value = cell_type\n        ) |&gt;\n        dplyr::mutate(\n            value = forcats::fct_recode(\n                value,\n                \"Human ES cell\" = \"Human_ES_cell\"\n            )\n        ) |&gt;\n        dplyr::pull(value),\n    # label = glue::glue(),\n    color_labels = FALSE,\n    color_legend = TRUE,\n    shape = embedding |&gt;\n        dplyr::left_join(\n            cell_metadata_PRJNA555602 |&gt;\n                dplyr::select(cell, cell_type) |&gt;\n                dplyr::mutate(\n                    value = \"1\"\n                ),\n            by = \"cell\"\n        ) |&gt;\n        dplyr::mutate(\n            value = dplyr::case_when(\n                is.na(value) ~ \"Other\",\n                TRUE ~ value\n            ),\n            value = factor(\n                value,\n            )\n        ) |&gt;\n        dplyr::pull(value),\n    sort_values = FALSE,\n    shuffle_values = TRUE,\n    rasterise = FALSE,\n    geom_point_size = GEOM_POINT_SIZE * 1.5,\n    geom_point_stroke = GEOM_POINT_STROKE\n) +\n    ggplot2::scale_shape_manual(\n        values = c(16, 3),\n        labels = c(\"Zheng et al. 2019\", \"Other\")\n    ) +\n    ggplot2::scale_color_manual(\n        values = scales::hue_pal()(\n            n = nlevels(cell_metadata_PRJNA555602$cell_type)\n        ),\n        breaks = forcats::fct_recode(\n            cell_metadata_PRJNA555602$cell_type,\n            \"Human ES cell\" = \"Human_ES_cell\"\n        ) |&gt; levels(),\n        na.value = \"grey70\"\n    ) +\n    ggplot2::guides(\n        shape = ggplot2::guide_legend(\n            override.aes = list(\n                size = 2,\n                alpha = 1,\n                stroke = c(0, 0.25)\n            ),\n            ncol = 1,\n            order = 2\n        )\n    ) +\n    theme_customized_embedding(void = TRUE)\n\n\ncolor_palette_lineage_blastoid &lt;- c(\n    \"Pre-lineage-like\" = \"#ffd8b1\",\n    ELCs = \"#8ace7e\",\n    HLCs = \"#ff684c\",\n    TLCs = \"#9467bd\",\n    Transitioning = \"#4E79A7\",\n    \"Other\" = \"grey50\"\n)\n# 16\nclusters_Pre_lineage &lt;- c(21, 23)\nclusters_ELCs &lt;- c(3, 6, 7)\nclusters_HLCs &lt;- c(20)\nclusters_TLCs &lt;- c(12, 14, 11, 2, 8, 17, 4, 10, 18)\nvalues &lt;- embedding |&gt;\n    dplyr::mutate(\n        value = dplyr::case_when(\n            cell %in% cells_blastoid_LW119_LW121 &\n                leiden %in% clusters_Pre_lineage ~ \"Pre-lineage-like\",\n            #\n            cell %in% cells_blastoid_LW119_LW121 &\n                leiden %in% clusters_ELCs ~ \"ELCs\",\n            #\n            cell %in% cells_blastoid_LW119_LW121 &\n                leiden %in% clusters_HLCs ~ \"HLCs\",\n            #\n            cell %in% cells_blastoid_LW119_LW121 &\n                leiden %in% clusters_TLCs ~ \"TLCs\",\n            #\n            cell %in% cells_blastoid_LW119_LW121 & (\n                !leiden %in% c(\n                    clusters_Pre_lineage,\n                    clusters_ELCs,\n                    clusters_HLCs,\n                    clusters_TLCs\n                )\n            ) ~ \"Other\"\n        ),\n        value = factor(\n            value,\n            levels = c(\n                \"Pre-lineage-like\", \"ELCs\", \"HLCs\", \"TLCs\", \"Other\"\n            )\n        )\n    ) |&gt;\n    dplyr::pull(value)\n\np_embedding_lineage_blastocyst_like &lt;- plot_embedding(\n    data = embedding[, c(x_column, y_column)],\n    color = values,\n    # label = glue::glue(\"{EMBEDDING_TITLE_PREFIX}; Group\"),\n    color_labels = FALSE,\n    color_legend = TRUE,\n    shape = embedding |&gt;\n        dplyr::mutate(\n            value = dplyr::case_when(\n                cell %in% cells_blastoid_LW119_LW121 ~ \"1\",\n                TRUE ~ \"Other\"\n            ),\n            value = factor(value)\n        ) |&gt;\n        dplyr::pull(value),\n    sort_values = TRUE,\n    shuffle_values = FALSE,\n    # rasterise = RASTERISED,\n    rasterise = FALSE,\n    geom_point_size = GEOM_POINT_SIZE * 1.5,\n    geom_point_stroke = 0.125,\n) +\n    ggplot2::scale_color_manual(\n        values = color_palette_lineage_blastoid,\n        breaks = levels(values),\n        na.value = \"grey70\"\n    ) +\n    theme_customized_embedding(void = TRUE) +\n    ggplot2::scale_shape_manual(\n        values = c(16, 3),\n        labels = c(\"Blastoid; This study\", \"Other\")\n    ) +\n    ggplot2::guides(\n        shape = ggplot2::guide_legend(\n            override.aes = list(\n                size = 2,\n                alpha = 1,\n                stroke = c(0, 0.25)\n            ),\n            ncol = 1,\n            order = 2\n        )\n    )\n\n\n# Yu et al. 2021; PRJNA632839\np_embedding_blastoid_LW60_LW61 &lt;- plot_embedding(\n    data = embedding[, c(x_column, y_column)],\n    color = values,\n    # label = glue::glue(),\n    color_labels = FALSE,\n    color_legend = TRUE,\n    shape = embedding |&gt;\n        dplyr::mutate(\n            value = dplyr::case_when(\n                batch %in% c(\"LW60\", \"LW61\") ~ \"1\",\n                TRUE ~ \"Other\"\n            ),\n            value = factor(value)\n        ) |&gt;\n        dplyr::pull(value),\n    sort_values = FALSE,\n    shuffle_values = TRUE,\n    rasterise = FALSE,\n    geom_point_size = GEOM_POINT_SIZE * 1.5,\n    geom_point_stroke = GEOM_POINT_STROKE\n) +\n    ggplot2::scale_color_manual(\n        values = c(color_palette_lineage_blastoid),\n        breaks = levels(values),\n        labels = levels(values),\n        na.value = \"grey70\"\n    ) +\n    ggplot2::scale_shape_manual(\n        values = c(16, 3),\n        labels = c(\"Blastoid; Yu et al. 2021\", \"Other\")\n    ) +\n    ggplot2::guides(\n        shape = ggplot2::guide_legend(\n            override.aes = list(\n                size = 2,\n                alpha = 1,\n                stroke = c(0, 0.25)\n            ),\n            ncol = 1,\n            order = 2\n        )\n    ) +\n    theme_customized_embedding(void = TRUE)\n\n\n# Yanagida et al. 2021; PRJNA720968\np_embedding_lineage_PRJNA720968 &lt;- plot_embedding(\n    data = embedding[, c(x_column, y_column)],\n    color = embedding |&gt;\n        dplyr::left_join(\n            cell_metadata_PRJNA720968 |&gt;\n                dplyr::filter(origin != \"Blastocyst\") |&gt;\n                dplyr::select(cell, origin, lineage) |&gt;\n                dplyr::mutate(\n                    value = dplyr::case_when(\n                        lineage %in% \"Blastoid: Epiblast\" ~ \"ELCs\",\n                        lineage %in% \"Blastoid: Hypoblast\" ~ \"HLCs\",\n                        lineage %in% \"Blastoid: Trophectoderm\" ~ \"TLCs\",\n                        lineage %in% \"Blastoid: Transitioning\" ~ \"Transitioning\"\n                    ),\n                    value = factor(\n                        value,\n                        levels = c(\n                            \"ELCs\",\n                            \"HLCs\",\n                            \"TLCs\",\n                            \"Transitioning\"\n                        )\n                    )\n                ),\n            by = \"cell\"\n        ) |&gt;\n        dplyr::pull(value),\n    # label = glue::glue(),\n    color_labels = FALSE,\n    color_legend = TRUE,\n    shape = embedding |&gt;\n        dplyr::left_join(\n            cell_metadata_PRJNA720968 |&gt;\n                dplyr::filter(origin != \"Blastocyst\") |&gt;\n                dplyr::select(cell, origin, lineage) |&gt;\n                dplyr::mutate(\n                    value = \"1\"\n                ),\n            by = \"cell\"\n        ) |&gt;\n        dplyr::mutate(\n            value = dplyr::case_when(\n                is.na(value) ~ \"Other\",\n                TRUE ~ value\n            )\n        ) |&gt;\n        dplyr::pull(value),\n    sort_values = FALSE,\n    shuffle_values = TRUE,\n    rasterise = FALSE,\n    geom_point_size = GEOM_POINT_SIZE * 1.5,\n    geom_point_stroke = GEOM_POINT_STROKE\n) +\n    theme_customized_embedding(void = TRUE) +\n    ggplot2::scale_color_manual(\n        values = color_palette_lineage_blastoid,\n        na.value = \"grey70\"\n    ) +\n    ggplot2::scale_shape_manual(\n        values = c(16, 3),\n        labels = c(\"Blastoid; Yanagida et al. 2021\", \"Other\")\n    ) +\n    ggplot2::guides(\n        shape = ggplot2::guide_legend(\n            override.aes = list(\n                size = 2,\n                alpha = 1,\n                stroke = c(0, 0.25)\n            ),\n            ncol = 1,\n            order = 2\n        )\n    )\n\n\nlayout &lt;- \"\nAAB\nAAC\nDEF\n\"\n\nlist(\n    p_embedding_lineage_blastocyst,\n    p_embedding_leiden,\n    p_embedding_lineage_amnion,\n    p_embedding_lineage_blastocyst_like,\n    p_embedding_blastoid_LW60_LW61,\n    p_embedding_lineage_PRJNA720968\n) |&gt;\n    purrr::map(\\(x) {\n        x + add_panel_border()\n    }) |&gt;\n    purrr::reduce(`+`) +\n    patchwork::plot_layout(design = layout) +\n    patchwork::plot_annotation(\n        theme = ggplot2::theme(plot.margin = ggplot2::margin())\n    ) &\n    ggplot2::theme(\n        legend.background = ggplot2::element_blank(),\n        panel.background = ggplot2::element_blank(),\n        panel.grid.major = ggplot2::element_blank(),\n        panel.grid.minor = ggplot2::element_blank(),\n        #\n        # plot.background = ggplot2::element_blank(),\n        plot.background = element_rect(\n            colour = \"grey70\", fill = NA, linewidth = 0.25\n        ),\n        #\n        axis.ticks.length = ggplot2::unit(0, \"pt\"),\n        panel.border = ggplot2::element_blank(),\n        plot.margin = ggplot2::unit(c(0, 0, 0, 0), \"lines\")\n    )\n\n\n\n\n\n\n\nExpression\nEmbedding\n\nfeatures_selected &lt;- c(\n    \"ENSG00000204531_POU5F1\",\n    \"ENSG00000203909_DPPA5\",\n    \"ENSG00000184344_GDF3\",\n    \"ENSG00000156574_NODAL\",\n    \"ENSG00000111704_NANOG\",\n    \"ENSG00000075388_FGF4\",\n    #\n    \"ENSG00000164736_SOX17\",\n    \"ENSG00000125798_FOXA2\",\n    \"ENSG00000136574_GATA4\",\n    \"ENSG00000141448_GATA6\",\n    \"ENSG00000134853_PDGFRA\",\n    \"ENSG00000115414_FN1\",\n    #\n    \"ENSG00000107485_GATA3\",\n    \"ENSG00000118777_ABCG2\",\n    \"ENSG00000165556_CDX2\",\n    \"ENSG00000137869_CYP19A1\",\n    \"ENSG00000172818_OVOL1\",\n    \"ENSG00000126353_CCR7\"\n)\n\n\nnum_columns &lt;- 3\npurrr::map(features_selected, \\(x) {\n    selected_feature &lt;- x\n    values &lt;- log10(calc_cpm(matrix_readcount_use)[x, embedding$cell] + 1)\n    # values[embedding$batch == \"PRJEB11202\"] &lt;- NA\n\n    plot_embedding(\n        data = embedding[, c(x_column, y_column)],\n        color = values,\n        label = glue::glue(\"{EMBEDDING_TITLE_PREFIX}; {selected_feature}\"),\n        color_labels = TRUE,\n        color_legend = TRUE,\n        sort_values = FALSE,\n        shuffle_values = TRUE,\n        rasterise = RASTERISED,\n        geom_point_size = GEOM_POINT_SIZE * 1.5,\n        na_value = \"grey70\"\n    ) +\n        theme_customized_embedding(\n            # x = CB_POSITION[1],\n            # y = CB_POSITION[2],\n            void = FALSE,\n            # legend_key_size = c(1.5, 1.5)\n        )\n}) |&gt;\n    purrr::reduce(`+`) +\n    patchwork::plot_layout(ncol = num_columns, byrow = FALSE) +\n    patchwork::plot_annotation(\n        theme = ggplot2::theme(plot.margin = ggplot2::margin())\n    )\n\n\n\n\n\n\n\n\nfeatures_selected &lt;- c(\n    \"ENSG00000181449_SOX2\",\n    # \"ENSG00000187498_COL4A1\",\n    \"ENSG00000164736_SOX17\",\n    \"ENSG00000179348_GATA2\",\n    \"ENSG00000137869_CYP19A1\",\n    #\n    \"ENSG00000016082_ISL1\",\n    # \"ENSG00000094755_GABRP\",\n    \"ENSG00000134817_APLNR\"\n    # \"ENSG00000143320_CRABP2\"\n)\n\nlineage_labels &lt;- c(\n    \"(Epiblast)\",\n    \"(Hypoblast)\",\n    \"(Trophectoderm)\",\n    \"(Trophectoderm)\",\n    \"(Amnion)\",\n    \"(Mesoderm)\"\n)\n\n\nx_label &lt;- extract_ggplot2_axes_ranges(p_embedding_lineage_blastocyst)$x |&gt;\n    unlist() |&gt;\n    quantile(0.5)\n\ny_label &lt;- extract_ggplot2_axes_ranges(p_embedding_lineage_blastocyst)$y |&gt;\n    unlist() |&gt;\n    quantile(0.95)\n\npurrr::map2(features_selected, lineage_labels, \\(x, y) {\n    selected_feature &lt;- x\n    values &lt;- log10(\n        calc_cpm(matrix_readcount_use)[selected_feature, embedding$cell] + 1\n    )\n    # values[!embedding$cell %in% cells_blastoid_LW119_LW121] &lt;- NA\n\n    plot_embedding(\n        data = embedding[, c(x_column, y_column)],\n        color = values,\n        # label = glue::glue(y),\n        color_legend = TRUE,\n        sort_values = TRUE,\n        rasterise = RASTERISED,\n        geom_point_size = GEOM_POINT_SIZE * 1.5,\n        na_value = \"grey70\"\n    ) +\n        theme_customized_embedding(\n            # x = CB_POSITION[1],\n            # y = CB_POSITION[2],\n            void = TRUE,\n            legend_key_size = c(1.2, 1.2)\n        ) +\n        ggplot2::annotate(\n            geom = \"text\",\n            x = x_label,\n            y = y_label,\n            label = stringr::str_c(\n                x |&gt; stringr::str_remove(pattern = \"^E.+_\"),\n                y,\n                sep = \" \"\n            ),\n            family = \"Arial\",\n            color = \"black\",\n            size = 5 / ggplot2::.pt,\n            hjust = 0.5,\n            vjust = 0\n            # parse = TRUE\n        )\n}) |&gt;\n    purrr::reduce(`+`) +\n    patchwork::plot_layout(nrow = 3, byrow = FALSE) +\n    patchwork::plot_annotation(\n        theme = ggplot2::theme(plot.margin = ggplot2::margin())\n    )\n\n\n\n\n\n\n\n\nselected_feature &lt;- \"ENSG00000141448_GATA6\"\nvalues &lt;- log10(\n    calc_cpm(matrix_readcount_use)[selected_feature, embedding$cell] + 1\n)\n\np_embedding_GATA6 &lt;- plot_embedding(\n    data = embedding[, c(x_column, y_column)],\n    color = values,\n    label = glue::glue(\n        \"{EMBEDDING_TITLE_PREFIX}; \",\n        gsub(\"^E.+_\", replacement = \"\", x = selected_feature)\n    ),\n    color_labels = TRUE,\n    color_legend = TRUE,\n    sort_values = TRUE,\n    shuffle_values = FALSE,\n    rasterise = RASTERISED,\n    geom_point_size = GEOM_POINT_SIZE * 2,\n    na_value = \"grey70\"\n) +\n    theme_customized_embedding()\n\nvalues[!embedding$cell %in% cells_blastoid_LW119_LW121] &lt;- NA\np_embedding_GATA6_blastoid &lt;- plot_embedding(\n    data = embedding[, c(x_column, y_column)],\n    color = values,\n    label = glue::glue(\n        \"{EMBEDDING_TITLE_PREFIX}; \",\n        gsub(\"^E.+_\", replacement = \"\", x = selected_feature),\n        \"; Blastoid\"\n    ),\n    color_labels = TRUE,\n    color_legend = TRUE,\n    sort_values = TRUE,\n    shuffle_values = FALSE,\n    rasterise = RASTERISED,\n    geom_point_size = GEOM_POINT_SIZE * 2,\n    na_value = \"grey70\"\n) +\n    theme_customized_embedding()\n\nlist(\n    p_embedding_GATA6,\n    p_embedding_GATA6_blastoid\n) |&gt;\n    purrr::reduce(`+`) +\n    patchwork::plot_layout(ncol = 2, byrow = TRUE) +\n    patchwork::plot_annotation(\n        theme = ggplot2::theme(plot.margin = ggplot2::margin())\n    ) &\n    ggplot2::theme(\n        legend.background = ggplot2::element_blank(),\n        panel.background = ggplot2::element_blank(),\n        # panel.grid.major = ggplot2::element_blank(),\n        # panel.grid.minor = ggplot2::element_blank(),\n        #\n        plot.background = ggplot2::element_blank(),\n        # plot.background = element_rect(\n        #     colour = \"grey70\", fill = NA, linewidth = 0.25\n        # ),\n        #\n        # panel.border = ggplot2::element_blank(),\n        # plot.margin = ggplot2::unit(c(0, 0, 0, 0), \"lines\")\n    )\n\n\n\n\n\n\n\nComposition\n\nclusters_selected &lt;- c(\n    clusters_ELCs,\n    clusters_HLCs,\n    clusters_TLCs\n)\n\nvalues &lt;- embedding |&gt;\n    dplyr::filter(\n        leiden %in% clusters_selected\n    ) |&gt;\n    dplyr::mutate(\n        value = dplyr::case_when(\n            cell %in% cells_blastocyst_LW119 ~ \"Blastocyst; This study\",\n            batch %in% c(\"LW120\", \"LW122\") ~ \"Blastocyst; This study\",\n            cell %in% cells_blastoid_LW119_LW121 ~ \"Blastoid; This study\",\n            batch %in% c(\"LW60\", \"LW61\") ~ \"Blastoid; Yu et al. 2021\",\n            lineage %in% c(\n                \"EPI\", \"HYP\", \"ICM\", \"ICM-TE\", \"TE\"\n            ) ~ \"Blastocyst\",\n            TRUE ~ \"Other\"\n        ),\n        value = factor(\n            value,\n            levels = c(\n                \"Blastocyst; This study\",\n                \"Blastocyst\",\n                \"Blastoid; This study\",\n                \"Blastoid; Yu et al. 2021\",\n                \"Other\"\n            ) |&gt; rev()\n        )\n    ) |&gt;\n    dplyr::pull(value)\n\nvalues2 &lt;- stringr::str_sort(cluster_labels[as.character(clusters_selected)],\n    numeric = TRUE\n) |&gt;\n    tibble::enframe() |&gt;\n    dplyr::select(value) |&gt;\n    dplyr::left_join(\n        cluster_labels |&gt;\n            tibble::enframe() |&gt;\n            dplyr::filter(name %in% clusters_selected)\n    )\n\nJoining with `by = join_by(value)`\n\n\n\ncalc_group_composition(\n    data = embedding |&gt;\n        dplyr::filter(\n            leiden %in% clusters_selected\n        ) |&gt;\n        dplyr::mutate(\n            leiden = factor(leiden, levels = rev(sort(unique(leiden)))),\n            value = values, # |&gt; droplevels()\n        ),\n    x = \"leiden\",\n    group = \"value\"\n) |&gt;\n    dplyr::mutate(\n        leiden = factor(leiden, levels = rev(values2$name))\n    ) |&gt;\n    plot_barplot(\n        x = \"leiden\",\n        y = \"percentage\",\n        z = \"value\",\n        legend_ncol = 1\n    ) +\n    ggplot2::coord_flip() +\n    ggplot2::scale_fill_manual(\n        values = c(scales::hue_pal()(n = nlevels(values) - 1), \"grey70\"),\n        breaks = rev(levels(values))\n    ) +\n    ggplot2::scale_x_discrete(\n        name = NULL,\n        labels = rev(values2$value)\n    ) +\n    ggplot2::theme(\n        axis.text.y = ggplot2::element_text(\n            family = \"Arial\",\n            # color = \"black\",\n            color = setNames(\n                object = scales::hue_pal()(n = length(unique(embedding$leiden))),\n                nm = seq_len(length(unique(embedding$leiden)))\n            )[values2$name] |&gt; rev(),\n            size = 5\n        ),\n        #\n        panel.border = ggplot2::element_rect(\n            fill = NA, color = \"purple\"\n        ),\n        strip.background = ggplot2::element_rect(\n            fill = \"#b3b3b3\", color = \"purple\"\n        ),\n    )\n\n\n\n\n\n\n\nViolin\n\nfeatures_selected &lt;- c(\n    \"ENSG00000204531_POU5F1\",\n    \"ENSG00000203909_DPPA5\",\n    #\n    \"ENSG00000136574_GATA4\",\n    \"ENSG00000141448_GATA6\",\n    #\n    \"ENSG00000179348_GATA2\",\n    \"ENSG00000107485_GATA3\"\n)\n\nclusters_selected_violin &lt;- c(\n    c(3, 6, 7),\n    c(20),\n    c(12, 14, 11, 2, 8, 17, 4, 10, 18)\n)\n\n\nclusters_selected_violin &lt;- stringr::str_sort(\n    cluster_labels[as.character(clusters_selected_violin)],\n    numeric = TRUE\n) |&gt;\n    tibble::enframe() |&gt;\n    dplyr::select(value) |&gt;\n    dplyr::left_join(\n        cluster_labels |&gt;\n            tibble::enframe()\n    ) |&gt;\n    dplyr::pull(name)\n\n# blastoid\ncells_violin &lt;- purrr::map(clusters_selected_violin, \\(x) {\n    embedding |&gt;\n        dplyr::filter(\n            leiden == x,\n            cell %in% cells_blastoid_LW119_LW121\n        ) |&gt;\n        dplyr::pull(cell)\n})\nnames(cells_violin) &lt;- clusters_selected_violin\n\np_violin_blastoid &lt;- plot_violin(\n    cells = cells_violin,\n    features = features_selected,\n    matrix_cpm = calc_cpm(matrix_readcount_use),\n    x_range_breaks = NULL\n) +\n    ggplot2::scale_fill_manual(\n        name = NULL,\n        values = setNames(\n            object = scales::hue_pal()(n = length(unique(embedding$leiden))),\n            nm = seq_len(length(unique(embedding$leiden)))\n        )[as.character(clusters_selected_violin)]\n    ) +\n    ggplot2::scale_color_manual(\n        name = NULL,\n        values = setNames(\n            object = scales::hue_pal()(n = length(unique(embedding$leiden))),\n            nm = seq_len(length(unique(embedding$leiden)))\n        )[as.character(clusters_selected_violin)]\n    ) +\n    ggplot2::scale_y_discrete(\n        name = NULL,\n        labels = cluster_labels[clusters_selected_violin]\n    ) +\n    ggplot2::labs(title = \"Blastoids; This study; 10x Genomics\") +\n    theme_customized_violin(\n        axis_title_size = 5,\n        axis_text_size = 5,\n        strip_text_size = 5,\n        strip_background_fill = \"#d9d9d9ff\",\n        panel_border_color = \"purple\"\n    ) +\n    ggplot2::theme(\n        axis.text.y = ggplot2::element_text(\n            family = \"Arial\",\n            # color = \"black\",\n            color = setNames(\n                object = scales::hue_pal()(n = length(unique(embedding$leiden))),\n                nm = seq_len(length(unique(embedding$leiden)))\n            )[as.character(clusters_selected_violin)] |&gt; rev(),\n            size = 5\n        ),\n        #\n        plot.title = ggplot2::element_text(\n            family = \"Arial\",\n            size = 6,\n            margin = ggplot2::margin(\n                t = 0, r = 0, b = 1, l = 0,\n                unit = \"mm\"\n            ),\n            hjust = 0.5\n        ),\n    )\n\n\np_violin_blastoid\n\n\n\n\n\n\n\nDE; Blastocyst vs. blastoid\n\nEDGER_METHOD &lt;- \"lrt\"\nLOG_FC_THRESHOLD &lt;- 1\n\n\n# Lineage\n\n# clusters_Pre_lineage &lt;- c(21, 23)\nclusters_ELCs &lt;- c(3, 6, 7)\nclusters_HLCs &lt;- c(20)\nclusters_TLCs &lt;- c(12, 14, 11, 2, 8, 17, 4, 10, 18)\n\n\nde &lt;- list(\n    ELCs = clusters_ELCs,\n    HLCs = clusters_HLCs,\n    TLCs = clusters_TLCs\n) |&gt;\n    purrr::map(\\(x) {\n        cells_1 &lt;- embedding |&gt;\n            dplyr::filter(\n                leiden %in% x,\n                (\n                    cell %in% c(cells_blastocyst_LW119)\n                ) | batch %in% c(\"LW120\", \"LW122\")\n            ) |&gt;\n            dplyr::pull(cell)\n\n        cells_2 &lt;- embedding |&gt;\n            dplyr::filter(\n                leiden %in% x,\n                !cell %in% c(cells_blastocyst_LW119) &\n                    batch %in% c(\"LW119\") | batch %in% c(\"LW121\")\n            ) |&gt;\n            dplyr::pull(cell)\n\n        cat(x, \"\\n\")\n        cat(length(cells_1), length(cells_2), \"\\n\")\n        cat(sum(cells_1 %in% cells_2), \"\\n\")\n        cat(\"=\", \"\\n\")\n\n        de &lt;- run_pseudobulk_edgeR(\n            matrix = matrix_readcount_use,\n            cells_1 = cells_1,\n            cells_2 = cells_2,\n            method = EDGER_METHOD,\n            log_fc_threshold = LOG_FC_THRESHOLD\n        )\n    })\n\n3 6 7 \n264 1776 \n0 \n= \n\n\nnumber of pseudobulks: 8 (264) vs 10 (1776)\n\n\n20 \n8 9 \n0 \n= \n\n\nnumber of pseudobulks: 2 (10) vs 2 (10)\n\n\nWarning: Zero sample variances detected, have been offset away from zero\n\n\n12 14 11 2 8 17 4 10 18 \n635 5020 \n0 \n= \n\n\nnumber of pseudobulks: 10 (635) vs 9 (5020)\n\nnames(de) &lt;- c(\"ELCs\", \"HLCs\", \"TLCs\")\n\n\nde &lt;- purrr::map(de, \\(x) x[[3]])\n\n\nfeatures_to_mark &lt;- purrr::map(names(de), \\(x) {\n    de[[x]] |&gt;\n        dplyr::mutate(\n            category = x |&gt;\n                stringr::str_remove(\n                    pattern = \"_.+$\"\n                )\n        ) |&gt;\n        tibble::rownames_to_column(var = \"feature\") |&gt;\n        dplyr::filter(\n            fdr &lt; 0.05,\n        ) |&gt;\n        dplyr::mutate(\n            group = dplyr::case_when(\n                log_fc &gt; 0 ~ \"up\",\n                TRUE ~ \"down\"\n            )\n        ) |&gt;\n        split(~group) |&gt;\n        purrr::map(\n            \\(xx) {\n                xx |&gt;\n                    dplyr::arrange(desc(abs(log_fc))) |&gt;\n                    dplyr::slice(1:5)\n            }\n        ) |&gt;\n        dplyr::bind_rows() |&gt;\n        dplyr::mutate(\n            name = stringr::str_remove(string = feature, pattern = \"_.+$\"),\n            symbol = stringr::str_remove(string = feature, pattern = \"^E.+_\")\n        )\n}) |&gt;\n    dplyr::bind_rows()\n\np_scatter_de &lt;- purrr::map(names(de), \\(x) {\n    de[[x]] |&gt;\n        dplyr::mutate(\n            category = x |&gt;\n                stringr::str_remove(\n                    pattern = \"_.+$\"\n                )\n        ) |&gt;\n        tibble::rownames_to_column(var = \"feature\")\n}) |&gt;\n    dplyr::bind_rows() |&gt;\n    dplyr::mutate(\n        de = dplyr::case_when(\n            fdr &lt; 0.05 & abs(log_fc) &gt;= 2 ~ \"1\",\n            TRUE ~ \"0\"\n        )\n    ) |&gt;\n    ggplot2::ggplot(\n        aes(\n            x = log_cpm,\n            y = log_fc,\n            color = de\n        )\n    ) +\n    ggrastr::rasterise(\n        input = ggplot2::geom_point(alpha = 0.8, size = 0.8, stroke = 0),\n        dpi = 900,\n        dev = \"ragg_png\"\n    ) +\n    ggplot2::facet_grid(cols = vars(category), scales = \"free\")\n\np_scatter_de &lt;- p_scatter_de +\n    ggplot2::scale_color_manual(values = c(\"grey70\", \"#00BFC4\")) +\n    ggplot2::scale_x_continuous(\n        name = expression(paste(\"Average CPM \", \"(log\"[2], \")\")),\n    ) +\n    ggplot2::scale_y_continuous(\n        name = expression(paste(\"Fold change \", \"(log\"[2], \")\")),\n    ) +\n    ggplot2::ggtitle(label = \"Blastocyst vs. blastoid\") +\n    ggplot2::guides(color = \"none\") +\n    theme_customized2() +\n    ggplot2::theme(\n        axis.title.x = ggplot2::element_text(\n            family = \"Arial\",\n            size = 5,\n        ),\n        axis.title.y = ggplot2::element_text(\n            family = \"Arial\",\n            size = 5,\n            margin = ggplot2::margin(t = 0, r = 0, b = 0, l = 0, unit = \"mm\")\n        ),\n        axis.text = ggplot2::element_text(\n            family = \"Arial\",\n            color = \"black\",\n            size = 5\n        ),\n        #\n        plot.title = ggplot2::element_text(\n            family = \"Arial\",\n            size = 6,\n            hjust = 0.5,\n            margin = ggplot2::margin(t = 0, r = 0, b = 1, l = 0, unit = \"mm\")\n        ),\n        strip.text = ggplot2::element_text(\n            family = \"Arial\", size = 5\n        ),\n        panel.border = ggplot2::element_rect(\n            fill = NA, color = \"purple\",\n        ),\n        strip.background = ggplot2::element_rect(\n            fill = \"#d9d9d9ff\", color = \"purple\"\n        )\n    )\n\n\ng &lt;- ggplot2::ggplot_gtable(\n    ggplot2::ggplot_build(p_scatter_de)\n)\nstript &lt;- which(grepl(\"strip-t\", g$layout$name))\n\n\nk &lt;- 1\nfor (i in stript) {\n    j &lt;- which(grepl(\"rect\", g$grobs[[i]]$grobs[[1]]$childrenOrder))\n    g$grobs[[i]]$grobs[[1]]$children[[j]]$gp$fill &lt;- setNames(\n        object = c(ELCs = \"#8ace7e\", HLCs = \"#ff684c\", TLCs = \"#9467bd\"),\n        nm = seq_len(3)\n    )[k]\n    k &lt;- k + 1\n}\ngrid::grid.draw(g)\n\n\n\n\n\n\n\nKEGG enrichment\n\nenriched_kegg &lt;- tibble::tribble(\n    ~id, ~description, ~GeneRatio, ~BgRatio, ~pvalue, ~category, ~group,\n    \"hsa04390\", \"Hippo signaling pathway\", \"25/457\", \"157/7919\", 3.04918e-06, \"ELCs\", \"Blastocyst\",\n    \"hsa04350\", \"TGF-beta signaling pathway\", \"17/457\", \"97/7919\", 3.34592e-05, \"ELCs\", \"Blastocyst\",\n    \"hsa04520\", \"Adherens junction\", \"14/457\", \"71/7919\", 4.29448e-05, \"ELCs\", \"Blastocyst\",\n    \"hsa04550\", \"Signaling pathways regulating pluripotency of stem cells\", \"21/457\", \"143/7919\", 6.51467e-05, \"ELCs\", \"Blastocyst\",\n    \"hsa00190\", \"Oxidative phosphorylation\", \"17/457\", \"134/7919\", 0.001733208, \"ELCs\", \"Blastocyst\",\n    \"hsa00190\", \"Oxidative phosphorylation\", \"67/498\", \"134/7919\", 1.43338e-45, \"HLCs\", \"Blastocyst\",\n    \"hsa05208\", \"Chemical carcinogenesis - reactive oxygen species\", \"69/498\", \"221/7919\", 5.58666e-31, \"HLCs\", \"Blastocyst\",\n    \"hsa04723\", \"Retrograde endocannabinoid signaling\", \"31/498\", \"148/7919\", 1.77784e-09, \"HLCs\", \"Blastocyst\",\n    \"hsa04066\", \"HIF-1 signaling pathway\", \"13/498\", \"109/7919\", 0.018816626, \"HLCs\", \"Blastocyst\",\n    \"hsa00010\", \"Glycolysis / Gluconeogenesis\", \"8/498\", \"67/7919\", 0.057839494, \"HLCs\", \"Blastocyst\",\n    \"hsa04390\", \"Hippo signaling pathway\", \"20/493\", \"157/7919\", 0.001693309, \"TLCs\", \"Blastocyst\",\n    \"hsa04350\", \"TGF-beta signaling pathway\", \"14/493\", \"97/7919\", 0.002566891, \"TLCs\", \"Blastocyst\",\n    \"hsa00730\", \"Thiamine metabolism\", \"4/493\", \"15/7919\", 0.011678143, \"TLCs\", \"Blastocyst\",\n    \"hsa00561\", \"Glycerolipid metabolism\", \"9/493\", \"61/7919\", 0.012499814, \"TLCs\", \"Blastocyst\",\n    \"hsa04150\", \"mTOR signaling pathway\", \"17/493\", \"155/7919\", 0.015861416, \"TLCs\", \"Blastocyst\",\n    \"hsa04115\", \"p53 signaling pathway\", \"18/735\", \"73/6234\", 0.001603023, \"ELCs\", \"Blastoid\",\n    \"hsa04010\", \"MAPK signaling pathway\", \"47/735\", \"294/6234\", 0.016867331, \"ELCs\", \"Blastoid\",\n    \"hsa04926\", \"Relaxin signaling pathway\", \"23/735\", \"129/6234\", 0.026882711, \"ELCs\", \"Blastoid\",\n    \"hsa04928\", \"Parathyroid hormone synthesis, secretion and action\", \"19/735\", \"106/6234\", 0.039701834, \"ELCs\", \"Blastoid\",\n    \"hsa04152\", \"AMPK signaling pathway\", \"21/735\", \"121/6234\", 0.043262071, \"ELCs\", \"Blastoid\",\n    \"hsa04115\", \"p53 signaling pathway\", \"9/194\", \"73/6234\", 0.000394004, \"HLCs\", \"Blastoid\",\n    \"hsa04066\", \"HIF-1 signaling pathway\", \"10/194\", \"109/6234\", 0.001979425, \"HLCs\", \"Blastoid\",\n    \"hsa01521\", \"EGFR tyrosine kinase inhibitor resistance\", \"7/194\", \"79/6234\", 0.011092936, \"HLCs\", \"Blastoid\",\n    \"hsa04919\", \"Thyroid hormone signaling pathway\", \"9/194\", \"121/6234\", 0.012770644, \"HLCs\", \"Blastoid\",\n    \"hsa04010\", \"MAPK signaling pathway\", \"17/194\", \"294/6234\", 0.009755139, \"HLCs\", \"Blastoid\",\n    \"hsa04068\", \"FoxO signaling pathway\", \"28/611\", \"130/6234\", 4.37072e-05, \"TLCs\", \"Blastoid\",\n    \"hsa04115\", \"p53 signaling pathway\", \"17/611\", \"73/6234\", 0.000531762, \"TLCs\", \"Blastoid\",\n    \"hsa04066\", \"HIF-1 signaling pathway\", \"22/611\", \"109/6234\", 0.000734062, \"TLCs\", \"Blastoid\",\n    \"hsa05418\", \"Fluid shear stress and atherosclerosis\", \"25/611\", \"136/6234\", 0.001379749, \"TLCs\", \"Blastoid\",\n    \"hsa04926\", \"Relaxin signaling pathway\", \"24/611\", \"129/6234\", 0.001439301, \"TLCs\", \"Blastoid\"\n)\n\n\npurrr::map2(c(\"Blastocyst\", \"Blastoid\"), c(\"#99B898\", \"#F9CDAD\"), \\(x, y) {\n    enriched_kegg |&gt;\n        dplyr::select(\n            go_id = id,\n            term = description,\n            p_value = pvalue,\n            category,\n            group\n        ) |&gt;\n        dplyr::filter(group == x) |&gt;\n        split(~category) |&gt;\n        purrr::map(\n            \\(x)\n            x |&gt;\n                dplyr::arrange(p_value) |&gt;\n                dplyr::slice(1:5) |&gt;\n                dplyr::mutate(rank = 1:dplyr::n())\n        ) |&gt;\n        dplyr::bind_rows() |&gt;\n        dplyr::mutate(\n            p_value_log = -log10(p_value)\n        ) |&gt;\n        {\n            \\(z) {\n                z |&gt;\n                    ggplot2::ggplot(\n                        ggplot2::aes(\n                            x = -log10(p_value),\n                            y = as.factor(rev(rank))\n                        )\n                    ) +\n                    ggplot2::geom_bar(\n                        stat = \"identity\",\n                        fill = y,\n                        alpha = 0.8\n                    ) +\n                    ggplot2::facet_grid(\n                        cols = ggplot2::vars(category), scales = \"free_x\"\n                    ) +\n                    ggplot2::scale_x_continuous(\n                        name = glue::glue(\n                            \"KEGG; {x}; -log&lt;sub&gt;10&lt;/sub&gt; p\"\n                        ),\n                        labels = scales::math_format(10^.x)\n                    ) +\n                    ggplot2::guides(fill = \"none\") +\n                    ggplot2::geom_text(\n                        ggplot2::aes(\n                            x = 0,\n                            label = paste(\" \", term, sep = \"\"),\n                            group = NULL\n                        ),\n                        size = 6 / ggplot2::.pt,\n                        family = \"Arial\",\n                        color = \"black\",\n                        data = z,\n                        hjust = 0\n                    ) +\n                    # ggplot2::theme_classic()\n                    ggplot2::theme(\n                        axis.title.x = ggplot2::element_text(\n                            family = \"Arial\", size = 5\n                        ),\n                        axis.title.y = ggplot2::element_blank(),\n                        axis.text.x = ggplot2::element_text(\n                            family = \"Arial\", size = 5\n                        ),\n                        axis.text.y = ggplot2::element_blank(),\n                        axis.ticks.y = ggplot2::element_blank(),\n                        axis.line.y = ggplot2::element_blank(),\n                        legend.text = ggplot2::element_text(\n                            family = \"Arial\", size = 5\n                        ),\n                        legend.title = ggplot2::element_text(\n                            family = \"Arial\", size = 5\n                        )\n                    ) +\n                    ggplot2::theme(\n                        axis.line.x.bottom = element_line(\n                            color = \"purple\", linewidth = 0.3\n                        ),\n                        panel.background = ggplot2::element_blank(),\n                        plot.background = ggplot2::element_blank(),\n                        #\n                        strip.background = ggplot2::element_rect(\n                            fill = NA,\n                            color = NA\n                        ),\n                        #\n                        strip.text = ggplot2::element_text(\n                            family = \"Arial\",\n                            size = 5,\n                            color = \"black\",\n                            hjust = 0.5,\n                            margin = ggplot2::margin(\n                                t = 0, r = 0, b = 1, l = 0,\n                                unit = \"mm\"\n                            )\n                        ),\n                        axis.title.x = ggtext::element_markdown(),\n                    )\n            }\n        }()\n}) |&gt;\n    purrr::reduce(`+`) +\n    patchwork::plot_layout(ncol = 1, byrow = FALSE) +\n    patchwork::plot_annotation(\n        theme = ggplot2::theme(plot.margin = ggplot2::margin())\n    )"
  },
  {
    "objectID": "interpret_blastoids_public.html#r-session-info",
    "href": "interpret_blastoids_public.html#r-session-info",
    "title": "Characterization of Human Blastoids",
    "section": "R session info",
    "text": "R session info\n\ndevtools::session_info()\n\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.1 (2023-06-16)\n os       macOS Ventura 13.5\n system   aarch64, darwin22.4.0\n ui       unknown\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       America/Chicago\n date     2023-08-12\n pandoc   2.19.2 @ /Users/jialei/.pyenv/shims/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package     * version     date (UTC) lib source\n beeswarm      0.4.0       2021-06-01 [1] CRAN (R 4.3.0)\n bit           4.0.5       2022-11-15 [1] CRAN (R 4.3.0)\n bit64         4.0.5       2020-08-30 [1] CRAN (R 4.3.0)\n cachem        1.0.8       2023-05-01 [1] CRAN (R 4.3.0)\n callr         3.7.3       2022-11-02 [1] CRAN (R 4.3.0)\n cli           3.6.1       2023-03-23 [1] CRAN (R 4.3.0)\n colorspace    2.1-0       2023-01-23 [1] CRAN (R 4.3.0)\n commonmark    1.9.0       2023-03-17 [1] CRAN (R 4.3.0)\n crayon        1.5.2       2022-09-29 [1] CRAN (R 4.3.0)\n devtools      2.4.5.9000  2023-08-11 [1] Github (r-lib/devtools@163c3f2)\n digest        0.6.33      2023-07-07 [1] CRAN (R 4.3.1)\n dplyr       * 1.1.2.9000  2023-07-19 [1] Github (tidyverse/dplyr@c963d4d)\n ellipsis      0.3.2       2021-04-29 [1] CRAN (R 4.3.0)\n evaluate      0.21        2023-05-05 [1] CRAN (R 4.3.0)\n extrafont   * 0.19        2023-01-18 [1] CRAN (R 4.3.0)\n extrafontdb   1.0         2012-06-11 [1] CRAN (R 4.3.0)\n fansi         1.0.4       2023-01-22 [1] CRAN (R 4.3.0)\n farver        2.1.1       2022-07-06 [1] CRAN (R 4.3.0)\n fastmap       1.1.1       2023-02-24 [1] CRAN (R 4.3.0)\n forcats     * 1.0.0.9000  2023-04-23 [1] Github (tidyverse/forcats@4a8525a)\n fs            1.6.3       2023-07-20 [1] CRAN (R 4.3.1)\n generics      0.1.3       2022-07-05 [1] CRAN (R 4.3.0)\n ggbeeswarm    0.7.2       2023-04-29 [1] CRAN (R 4.3.0)\n ggplot2     * 3.4.2.9000  2023-08-11 [1] Github (tidyverse/ggplot2@2cd0e96)\n ggrastr       1.0.2       2023-06-01 [1] CRAN (R 4.3.0)\n ggtext        0.1.2       2022-09-16 [1] CRAN (R 4.3.0)\n glue          1.6.2.9000  2023-04-23 [1] Github (tidyverse/glue@cbac82a)\n gridtext      0.1.5       2022-09-16 [1] CRAN (R 4.3.0)\n gt            0.9.0.9000  2023-08-11 [1] Github (rstudio/gt@a3cc005)\n gtable        0.3.3.9000  2023-04-23 [1] Github (r-lib/gtable@c56fd4f)\n hms           1.1.3       2023-03-21 [1] CRAN (R 4.3.0)\n htmltools     0.5.6       2023-08-10 [1] CRAN (R 4.3.1)\n htmlwidgets   1.6.2       2023-03-17 [1] CRAN (R 4.3.0)\n jsonlite      1.8.7       2023-06-29 [1] CRAN (R 4.3.1)\n knitr         1.43        2023-05-25 [1] CRAN (R 4.3.0)\n labeling      0.4.2       2020-10-20 [1] CRAN (R 4.3.0)\n lattice       0.21-8      2023-04-05 [2] CRAN (R 4.3.1)\n lifecycle     1.0.3       2022-10-07 [1] CRAN (R 4.3.0)\n lubridate   * 1.9.2.9000  2023-07-22 [1] Github (tidyverse/lubridate@cae67ea)\n magrittr      2.0.3       2022-03-30 [1] CRAN (R 4.3.0)\n markdown      1.7         2023-05-16 [1] CRAN (R 4.3.0)\n Matrix      * 1.6-0       2023-07-08 [2] CRAN (R 4.3.1)\n memoise       2.0.1       2021-11-26 [1] CRAN (R 4.3.0)\n munsell       0.5.0       2018-06-12 [1] CRAN (R 4.3.0)\n patchwork   * 1.1.2.9000  2023-08-11 [1] Github (thomasp85/patchwork@bd57553)\n pillar        1.9.0       2023-03-22 [1] CRAN (R 4.3.0)\n pkgbuild      1.4.2       2023-06-26 [1] CRAN (R 4.3.1)\n pkgconfig     2.0.3       2019-09-22 [1] CRAN (R 4.3.0)\n pkgload       1.3.2.9000  2023-07-05 [1] Github (r-lib/pkgload@3cf9896)\n png           0.1-8       2022-11-29 [1] CRAN (R 4.3.0)\n prettyunits   1.1.1.9000  2023-04-23 [1] Github (r-lib/prettyunits@8706d89)\n processx      3.8.2       2023-06-30 [1] CRAN (R 4.3.1)\n ps            1.7.5       2023-04-18 [1] CRAN (R 4.3.0)\n purrr       * 1.0.2.9000  2023-08-11 [1] Github (tidyverse/purrr@ac4f5a9)\n R.cache       0.16.0      2022-07-21 [1] CRAN (R 4.3.0)\n R.methodsS3   1.8.2       2022-06-13 [1] CRAN (R 4.3.0)\n R.oo          1.25.0      2022-06-12 [1] CRAN (R 4.3.0)\n R.utils       2.12.2      2022-11-11 [1] CRAN (R 4.3.0)\n R6            2.5.1.9000  2023-04-23 [1] Github (r-lib/R6@e97cca7)\n ragg          1.2.5       2023-01-12 [1] CRAN (R 4.3.0)\n Rcpp          1.0.11      2023-07-06 [1] CRAN (R 4.3.1)\n readr       * 2.1.4.9000  2023-08-03 [1] Github (tidyverse/readr@80e4dc1)\n remotes       2.4.2.9000  2023-06-09 [1] Github (r-lib/remotes@8875171)\n reticulate    1.31        2023-08-10 [1] CRAN (R 4.3.1)\n rlang         1.1.1.9000  2023-06-09 [1] Github (r-lib/rlang@c55f602)\n rmarkdown     2.23.4      2023-07-27 [1] Github (rstudio/rmarkdown@054d735)\n rstudioapi    0.15.0.9000 2023-07-19 [1] Github (rstudio/rstudioapi@feceaef)\n Rttf2pt1      1.3.12      2023-01-22 [1] CRAN (R 4.3.0)\n sass          0.4.7       2023-07-15 [1] CRAN (R 4.3.1)\n scales        1.2.1       2022-08-20 [1] CRAN (R 4.3.0)\n sessioninfo   1.2.2       2021-12-06 [1] CRAN (R 4.3.0)\n stringi       1.7.12      2023-01-11 [1] CRAN (R 4.3.0)\n stringr     * 1.5.0.9000  2023-08-11 [1] Github (tidyverse/stringr@08ff36f)\n styler      * 1.10.1      2023-07-17 [1] Github (r-lib/styler@aca7223)\n systemfonts   1.0.4       2022-02-11 [1] CRAN (R 4.3.0)\n textshaping   0.3.6       2021-10-13 [1] CRAN (R 4.3.0)\n tibble      * 3.2.1.9005  2023-05-28 [1] Github (tidyverse/tibble@4de5c15)\n tidyr       * 1.3.0.9000  2023-04-23 [1] Github (tidyverse/tidyr@0764e65)\n tidyselect    1.2.0       2022-10-10 [1] CRAN (R 4.3.0)\n tidyverse   * 2.0.0.9000  2023-04-23 [1] Github (tidyverse/tidyverse@8ec2e1f)\n timechange    0.2.0       2023-01-11 [1] CRAN (R 4.3.0)\n tzdb          0.4.0       2023-05-12 [1] CRAN (R 4.3.0)\n usethis       2.2.2.9000  2023-07-11 [1] Github (r-lib/usethis@467ff57)\n utf8          1.2.3       2023-01-31 [1] CRAN (R 4.3.0)\n vctrs         0.6.3       2023-06-14 [1] CRAN (R 4.3.0)\n vipor         0.4.5       2017-03-22 [1] CRAN (R 4.3.0)\n viridisLite   0.4.2       2023-05-02 [1] CRAN (R 4.3.0)\n vroom         1.6.3.9000  2023-04-30 [1] Github (tidyverse/vroom@89b6aac)\n withr         2.5.0       2022-03-03 [1] CRAN (R 4.3.0)\n xfun          0.40        2023-08-09 [1] CRAN (R 4.3.1)\n xml2          1.3.5       2023-07-06 [1] CRAN (R 4.3.1)\n yaml          2.3.7       2023-01-23 [1] CRAN (R 4.3.0)\n\n [1] /opt/homebrew/lib/R/4.3/site-library\n [2] /opt/homebrew/Cellar/r/4.3.1/lib/R/library\n\n─ Python configuration ───────────────────────────────────────────────────────\n python:         /Users/jialei/.pyenv/shims/python\n libpython:      /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/libpython3.10.dylib\n pythonhome:     /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3:/Users/jialei/.pyenv/versions/mambaforge-22.9.0-3\n version:        3.10.9 | packaged by conda-forge | (main, Feb  2 2023, 20:26:08) [Clang 14.0.6 ]\n numpy:          /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/numpy\n numpy_version:  1.24.3\n numpy:          /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/numpy\n \n NOTE: Python version was forced by RETICULATE_PYTHON\n\n──────────────────────────────────────────────────────────────────────────────\n\n\n\n\nStyling  1  files:\n interpret_blastoids_public.qmd ✔ \n────────────────────────────────────────\nStatus  Count   Legend \n✔   1   File unchanged.\nℹ   0   File changed.\n✖   0   Styling threw an error.\n────────────────────────────────────────"
  },
  {
    "objectID": "interpret_blastoids_stromal.html",
    "href": "interpret_blastoids_stromal.html",
    "title": "Blastoids Are Capable of Recapitulating Human Embryo Implantation Events",
    "section": "",
    "text": "Sys.time()\n\n[1] \"2023-08-12 10:56:07 CDT\"\nSys.timezone()\n\n[1] \"America/Chicago\""
  },
  {
    "objectID": "interpret_blastoids_stromal.html#preparation",
    "href": "interpret_blastoids_stromal.html#preparation",
    "title": "Blastoids Are Capable of Recapitulating Human Embryo Implantation Events",
    "section": "Preparation",
    "text": "Preparation\n\nPROJECT_DIR &lt;- file.path(\n    \"/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation\"\n)\n\nFunctions\nLoad required packages.\n\nlibrary(tidyverse)\n## ── Attaching core tidyverse packages ─────────────────── tidyverse 2.0.0.9000 ──\n## ✔ dplyr     1.1.2.9000     ✔ readr     2.1.4.9000\n## ✔ forcats   1.0.0.9000     ✔ stringr   1.5.0.9000\n## ✔ ggplot2   3.4.2.9000     ✔ tibble    3.2.1.9005\n## ✔ lubridate 1.9.2.9000     ✔ tidyr     1.3.0.9000\n## ✔ purrr     1.0.2.9000     \n## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n## ✖ dplyr::filter() masks stats::filter()\n## ✖ dplyr::lag()    masks stats::lag()\n## ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\nlibrary(Matrix)\n## \n## Attaching package: 'Matrix'\n## \n## The following objects are masked from 'package:tidyr':\n## \n##     expand, pack, unpack\nlibrary(patchwork)\nlibrary(extrafont)\n## Registering fonts with R\n\n\nsource(file = file.path(SCRIPT_DIR, \"utilities.R\"))\n\n\n`%+replace%` &lt;- ggplot2::`%+replace%`\n\n\nadd_panel_border &lt;- function() {\n    ggplot2::theme(\n        plot.background = element_rect(\n            colour = \"grey70\", fill = NA, linewidth = 0.25\n        )\n    )\n}\n\n\ntheme_customized_clear &lt;- function() {\n    ggplot2::theme(\n        legend.background = ggplot2::element_blank(),\n        panel.background = ggplot2::element_blank(),\n        panel.grid.major = ggplot2::element_blank(),\n        panel.grid.minor = ggplot2::element_blank(),\n        #\n        plot.background = ggplot2::element_blank(),\n        # plot.background = element_rect(\n        #     colour = \"grey70\", fill = NA, linewidth = 0.25\n        # ),\n        #\n        # axis.ticks.length = ggplot2::unit(0, \"pt\"),\n        panel.border = ggplot2::element_blank(),\n        plot.margin = ggplot2::unit(c(0, 0, 0, 0), \"lines\")\n    )\n}\n\nPython env\n\nnp &lt;- reticulate::import(\"numpy\", convert = TRUE)\n# scipy.sparse &lt;- reticulate::import(module = \"scipy.sparse\", convert = TRUE)\ncat(\"numpy version:\", np$`__version__`, \"\\n\")\n\nnumpy version: 1.24.3 \n\n\n\nad &lt;- reticulate::import(module = \"anndata\", convert = TRUE)\nprint(ad$`__version__`)\n\n[1] \"0.8.0\"\n\n\n\nreticulate::py_config()\n\npython:         /Users/jialei/.pyenv/shims/python\nlibpython:      /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/libpython3.10.dylib\npythonhome:     /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3:/Users/jialei/.pyenv/versions/mambaforge-22.9.0-3\nversion:        3.10.9 | packaged by conda-forge | (main, Feb  2 2023, 20:26:08) [Clang 14.0.6 ]\nnumpy:          /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/numpy\nnumpy_version:  1.24.3\nnumpy:          /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/numpy\n\nNOTE: Python version was forced by RETICULATE_PYTHON\n\n\nEmbedding\n\nembedding &lt;- vroom::vroom(\n    file = file.path(\n        PROJECT_DIR,\n        \"clustering\",\n        \"LW186_LW187_LW188_LW189_LW202_LW203_LW204\",\n        \"exploring\",\n        CLUSTERING_METHOD,\n        EMBEDDING_FILE\n    ),\n    show_col_types = FALSE\n) |&gt;\n    dplyr::mutate(\n        batch = dplyr::case_when(\n            batch == \"GSM4734573\" ~ \"PRJNA658478\",\n            TRUE ~ batch\n        ),\n        bioproject = dplyr::case_when(\n            batch %in% c(\"LW60\", \"LW61\") ~ \"PRJNA632839\",\n            #\n            batch %in% c(\"GSM3956280\", \"GSM3956281\") ~ \"PRJNA555602\",\n            batch %in% c(\"GSM4734573\") ~ \"PRJNA658478\",\n            #\n            batch %in% c(\n                \"GSM4816780\", \"GSM4816781\", \"GSM4816782\"\n            ) ~ \"PRJNA667174\",\n            batch %in% c(\"GSM5387817\", \"GSM5387818\") ~ \"PRJNA738498\",\n            TRUE ~ batch\n        )\n    )\n\n\nembedding_stromal &lt;- vroom::vroom(\n    file = file.path(\n        PROJECT_DIR,\n        \"clustering\",\n        \"LW186_LW187_LW188_LW189_LW202_LW203_LW204_stromal\",\n        \"exploring\",\n        \"Scanpy_Harmony_variable\",\n        \"embedding_ncomponents16_seed20210719.csv.gz\"\n    ),\n    show_col_types = FALSE\n) |&gt;\n    dplyr::mutate(\n        batch_annotated = dplyr::case_when(\n            batch %in% c(\"LW187\", \"LW189\") ~ \"Blastocyst (fibronectin)\",\n            batch %in% c(\"LW186\", \"LW188\") ~ \"Blastocyst (stromal cells)\",\n            batch %in% c(\"LW202\") ~ \"Blastoid (fibronectin)\",\n            batch %in% c(\"LW203\") ~ \"Stromal cells\",\n            batch %in% c(\"LW204\") ~ \"Blastoid (stromal cells)\"\n        )\n    )\n\nMatrix\n\nadata_files &lt;- c(\n    purrr::map(\n        c(\"LW186\", \"LW187\", \"LW188\", \"LW189\", \"LW202\", \"LW203\", \"LW204\"), \\(x) {\n            file.path(\n                PROJECT_DIR,\n                \"raw\",\n                x,\n                \"matrix\",\n                \"adata.h5ad\"\n            )\n        }\n    )\n)\n\nadata_files &lt;- unique(adata_files)\npurrr::map_lgl(adata_files, file.exists)\n\n[1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nBACKED &lt;- NULL\nmatrix_readcount_use &lt;- purrr::map(adata_files, \\(x) {\n    cat(x, \"\\n\")\n    ad$read_h5ad(\n        filename = x, backed = BACKED\n    ) |&gt;\n        extract_matrix_from_adata(cells_selected = embedding$cell)\n}) |&gt;\n    purrr::reduce(cbind)\n\n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/LW186/matrix/adata.h5ad \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/LW187/matrix/adata.h5ad \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/LW188/matrix/adata.h5ad \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/LW189/matrix/adata.h5ad \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/LW202/matrix/adata.h5ad \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/LW203/matrix/adata.h5ad \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/LW204/matrix/adata.h5ad \n\nmatrix_readcount_use &lt;- matrix_readcount_use[\n    , sort(colnames(matrix_readcount_use))\n]\nmatrix_readcount_use |&gt; dim()\n\n[1] 33538 39755\n\n\n\n# sanity check\nstopifnot(\n    ncol(matrix_readcount_use) == nrow(embedding)\n)\n\nMetadata\n\nBACKED &lt;- \"r\"\ncell_metadata &lt;- purrr::map(adata_files, \\(x) {\n    ad$read_h5ad(\n        filename = x, backed = BACKED\n    )$obs |&gt;\n        tibble::rownames_to_column(var = \"cell\") |&gt;\n        dplyr::select(cell, everything())\n}) |&gt;\n    dplyr::bind_rows()\n\n\nembedding |&gt;\n    dplyr::left_join(\n        cell_metadata |&gt;\n            dplyr::select(cell, num_umis),\n        by = \"cell\"\n    ) |&gt;\n    dplyr::group_by(batch) |&gt;\n    dplyr::summarise(\n        num_cells = n(),\n        meidan_umis = median(num_umis)\n    ) |&gt;\n    gt::gt()\n\n\n\n\n\nbatch\n      num_cells\n      meidan_umis\n    \n\n\nLW186\n10977\n3026\n\n\nLW187\n3690\n4980\n\n\nLW188\n6838\n3738\n\n\nLW189\n3250\n5344\n\n\nLW202\n4833\n3834\n\n\nLW203\n2571\n5254\n\n\nLW204\n7596\n2405\n\n\n\n\n\n\nCheck memory usage.\n\nwalk(list(matrix_readcount_use, embedding), \\(x) {\n    print(object.size(x), units = \"auto\", standard = \"SI\")\n})\n\n818.1 MB\n8.6 MB"
  },
  {
    "objectID": "interpret_blastoids_stromal.html#blastoids-resemble-human-embryo-implantation",
    "href": "interpret_blastoids_stromal.html#blastoids-resemble-human-embryo-implantation",
    "title": "Blastoids Are Capable of Recapitulating Human Embryo Implantation Events",
    "section": "Blastoids resemble human embryo implantation",
    "text": "Blastoids resemble human embryo implantation\nInspection\n\nembedding |&gt;\n    dplyr::left_join(\n        cell_metadata |&gt; dplyr::select(cell, num_umis),\n        by = \"cell\"\n    ) |&gt;\n    dplyr::group_by(batch) |&gt;\n    dplyr::summarise(\n        num_cells = n(),\n        median_umis = median(num_umis)\n    ) |&gt;\n    gt::gt() |&gt;\n    gt::data_color(\n        columns = c(median_umis),\n        fn = scales::col_numeric(\n            palette = c(\n                \"green\", \"orange\", \"red\"\n            ),\n            domain = NULL\n        )\n    ) |&gt;\n    gt::fmt_number(\n        columns = c(median_umis),\n        sep_mark = \",\",\n        decimals = 1,\n        use_seps = TRUE,\n        suffixing = FALSE\n    ) |&gt;\n    gt::fmt_number(\n        columns = c(num_cells),\n        sep_mark = \",\",\n        decimals = 0,\n        use_seps = TRUE,\n        suffixing = FALSE\n    ) |&gt;\n    gt::grand_summary_rows(\n        columns = c(num_cells),\n        fns = list(\n            Sum = ~ sum(.)\n        ),\n        fmt = ~ gt::fmt_number(., decimals = 0, use_seps = TRUE)\n    )\n\n\n\n\n\n\n      batch\n      num_cells\n      median_umis\n    \n\n\n\nLW186\n10,977\n3,026.0\n\n\n\nLW187\n3,690\n4,980.0\n\n\n\nLW188\n6,838\n3,738.0\n\n\n\nLW189\n3,250\n5,344.0\n\n\n\nLW202\n4,833\n3,834.0\n\n\n\nLW203\n2,571\n5,254.0\n\n\n\nLW204\n7,596\n2,405.0\n\n\nSum\n—\n39,755\n—\n\n\n\n\n\n\n\nGEOM_POINT_SIZE &lt;- 0.25\nRASTERISED &lt;- TRUE\nx_column &lt;- \"x_umap_min_dist=0.1\"\ny_column &lt;- \"y_umap_min_dist=0.1\"\n\nEMBEDDING_TITLE_PREFIX &lt;- \"UMAP\"\nembedding_type &lt;- EMBEDDING_TITLE_PREFIX\n\n\np_embedding_leiden &lt;- plot_embedding(\n    data = embedding[, c(x_column, y_column)],\n    color = embedding$leiden |&gt; as.factor(),\n    label = glue::glue(\"{EMBEDDING_TITLE_PREFIX}; Cluster\"),\n    color_labels = TRUE,\n    color_legend = FALSE,\n    sort_values = FALSE,\n    shuffle_values = TRUE,\n    rasterise = RASTERISED,\n    geom_point_size = GEOM_POINT_SIZE * 1.5\n) +\n    theme_customized_embedding()\n\np_embedding_batch &lt;- plot_embedding(\n    data = embedding[, c(x_column, y_column)],\n    color = embedding$batch |&gt; as.factor(),\n    label = glue::glue(\"{EMBEDDING_TITLE_PREFIX}; Batch\"),\n    color_labels = FALSE,\n    color_legend = TRUE,\n    sort_values = FALSE,\n    shuffle_values = TRUE,\n    rasterise = RASTERISED,\n    geom_point_size = GEOM_POINT_SIZE\n) +\n    theme_customized_embedding()\n\np_embedding_UMI &lt;- plot_embedding(\n    data = embedding[, c(x_column, y_column)],\n    color = log10(Matrix::colSums(matrix_readcount_use[, embedding$cell])),\n    label = glue::glue(\"{EMBEDDING_TITLE_PREFIX}; UMI\"),\n    color_legend = TRUE,\n    sort_values = TRUE,\n    shuffle_values = FALSE,\n    rasterise = RASTERISED,\n    geom_point_size = GEOM_POINT_SIZE * 1.5\n) +\n    theme_customized_embedding()\n\np_embedding_MT &lt;- plot_embedding(\n    data = embedding[, c(x_column, y_column)],\n    color = embedding |&gt;\n        dplyr::left_join(cell_metadata, by = c(\"cell\")) |&gt;\n        dplyr::pull(mt_percentage),\n    label = glue::glue(\"{EMBEDDING_TITLE_PREFIX}; MT %\"),\n    color_legend = TRUE,\n    sort_values = TRUE,\n    shuffle_values = FALSE,\n    rasterise = RASTERISED,\n    geom_point_size = GEOM_POINT_SIZE * 1.5\n) +\n    theme_customized_embedding()\n\n\npurrr::reduce(\n    list(\n        p_embedding_leiden,\n        p_embedding_batch,\n        p_embedding_UMI,\n        p_embedding_MT\n    ), `+`\n) +\n    patchwork::plot_layout(ncol = 2) +\n    patchwork::plot_annotation(\n        theme = ggplot2::theme(plot.margin = ggplot2::margin())\n    )\n\n\n\n\n\n\n\n\ncells_selected_stromal &lt;- fs::dir_ls(\n    file.path(\n        PROJECT_DIR,\n        \"genotyping/result_vartrix_LW203_no-duplicates_umi_mapq10_consensus\"\n    )\n) |&gt;\n    {\n        \\(x) {\n            x[stringr::str_detect(\n                string = x,\n                pattern = \"c*_stromal_snp*\"\n            )]\n        }\n    }() |&gt;\n    purrr::map(\n        \\(x) {\n            scan(\n                file = x, what = \"charactor\"\n            )\n        }\n    ) |&gt;\n    unlist() |&gt;\n    unname() |&gt;\n    sort()\n\n\ncolor_labels &lt;- embedding[, c(x_column, y_column, \"leiden\")] |&gt;\n    dplyr::group_by(leiden) |&gt;\n    dplyr::summarise(\n        x = median(.data[[x_column]]),\n        y = median(.data[[y_column]]),\n        .groups = \"drop\"\n    ) |&gt;\n    as.data.frame()\n\n\np_embedding_stromal &lt;- plot_embedding(\n    data = embedding[, c(x_column, y_column)],\n    color = as.integer(embedding$cell %in% cells_selected_stromal) |&gt; as.factor(),\n    label = glue::glue(\"{EMBEDDING_TITLE_PREFIX}; IESCs called using SNPs\"),\n    color_labels = FALSE,\n    color_legend = FALSE,\n    sort_values = TRUE,\n    shuffle_values = FALSE,\n    rasterise = RASTERISED,\n    geom_point_size = GEOM_POINT_SIZE * 1.5\n) +\n    theme_customized_embedding(\n        panel_border_color = \"purple\",\n        strip_background_fill = \"#d9d9d9ff\"\n    ) +\n    ggplot2::scale_color_manual(\n        # values = c(\"grey70\", \"salmon\")\n        values = c(\"grey70\", \"#F8B195\")\n    )\n\n\np_embedding_stromal +\n    ggplot2::annotate(\n        geom = \"text\",\n        x = color_labels[, \"x\"],\n        y = color_labels[, \"y\"],\n        label = color_labels[, 1],\n        family = \"Arial\",\n        color = \"black\",\n        size = 5 / ggplot2::.pt,\n        parse = TRUE\n    ) +\n    ggplot2::annotate(\n        \"rect\",\n        xmin = extract_ggplot2_axes_ranges(p_embedding_stromal)$x |&gt;\n            quantile(0.7) - 5.2,\n        xmax = extract_ggplot2_axes_ranges(p_embedding_stromal)$x |&gt;\n            quantile(0.7) + 5.2,\n        ymin = extract_ggplot2_axes_ranges(p_embedding_stromal)$y |&gt;\n            quantile(0.125) - 2.5,\n        ymax = extract_ggplot2_axes_ranges(p_embedding_stromal)$y |&gt;\n            quantile(0.125) + 2.5,\n        alpha = .2\n    ) +\n    ggplot2::annotate(\n        geom = \"text\",\n        # x = Inf,\n        # y = Inf,\n        x = extract_ggplot2_axes_ranges(p_embedding_stromal)$x |&gt;\n            quantile(0.7),\n        y = extract_ggplot2_axes_ranges(p_embedding_stromal)$y |&gt;\n            quantile(0.125),\n        label = glue::glue(\n            \"{scales::percent_format(accuracy = 0.01)(13617 / (13617 + 258))} of\",\n            \"\\ncalled IESCs \",\n            \"are in\\nclusters 1, 2, 6, 11, 12,\\nand 13\"\n        ),\n        size = 5 / ggplot2::.pt,\n        hjust = 0.5,\n        vjust = 0.5,\n        na.rm = FALSE,\n        family = \"Arial\"\n    )\n\n\n\n\n\n\n\n\ncolor_palette_assay &lt;- c(\n    \"Blastocyst (fibronectin)\" = \"#F28E2B\",\n    \"Blastocyst (IESCs)\" = \"#4E79A7\",\n    \"Blastoid (fibronectin)\" = \"#E15759\",\n    \"Blastoid (IESCs)\" = \"#76B7B2\",\n    \"IESCs\" = \"#59A14F\"\n)\n\nembedding &lt;- embedding |&gt;\n    dplyr::mutate(\n        batch_annotated = dplyr::case_when(\n            batch %in% c(\"LW187\", \"LW189\") ~ \"Blastocyst (fibronectin)\",\n            batch %in% c(\"LW186\", \"LW188\") ~ \"Blastocyst (IESCs)\",\n            batch %in% c(\"LW202\") ~ \"Blastoid (fibronectin)\",\n            batch %in% c(\"LW203\") ~ \"IESCs\",\n            batch %in% c(\"LW204\") ~ \"Blastoid (IESCs)\"\n        )\n    )\n\nSample group\n\nx_label &lt;- extract_ggplot2_axes_ranges(p_embedding_leiden)$x |&gt;\n    unlist() |&gt;\n    quantile(0.78)\n\ny_label &lt;- extract_ggplot2_axes_ranges(p_embedding_leiden)$y |&gt;\n    unlist() |&gt;\n    quantile(0.99)\n\nHJUST &lt;- 0.5\nVJUST &lt;- 1\n\n\np_embedding_group &lt;- list(\n    plot_embedding(\n        data = embedding[, c(x_column, y_column)],\n        color = as.factor(embedding$leiden),\n        # label = glue::glue(\"{EMBEDDING_TITLE_PREFIX}; Blastocyst\"),\n        color_labels = TRUE,\n        color_legend = FALSE,\n        # shape = values_shape,\n        sort_values = FALSE,\n        shuffle_values = TRUE,\n        rasterise = RASTERISED,\n        geom_point_size = GEOM_POINT_SIZE * 0.9,\n        # geom_point_stroke = 0.125,\n        geom_point_legend_ncol = 1\n    ) +\n        theme_customized_embedding(void = TRUE) +\n        ggplot2::scale_color_manual(\n            values = scales::hue_pal(\n                l = 75, c = 150\n            )(n = length(unique(embedding$leiden))),\n            na.value = \"grey70\"\n        ),\n    #\n    purrr::map(sort(unique(embedding$batch_annotated)), \\(x) {\n        plot_embedding(\n            data = embedding[, c(x_column, y_column)],\n            color = as.factor(as.integer(embedding$batch_annotated == x)),\n            # label = glue::glue(\"{EMBEDDING_TITLE_PREFIX}; Blastocyst\"),\n            color_labels = FALSE,\n            color_legend = FALSE,\n            sort_values = TRUE,\n            shuffle_values = FALSE,\n            rasterise = RASTERISED,\n            geom_point_size = GEOM_POINT_SIZE * 0.9,\n            geom_point_legend_ncol = 1\n        ) +\n            theme_customized_embedding(\n                void = TRUE\n            ) +\n            ggplot2::scale_color_manual(values = c(\"grey70\", \"salmon\")) +\n            ggplot2::annotate(\n                geom = \"text\",\n                x = x_label,\n                y = y_label,\n                label = x |&gt;\n                    stringr::str_replace(\n                        pattern = \" \",\n                        replacement = \"\\n\"\n                    ),\n                family = \"Arial\",\n                color = \"black\",\n                size = 5 / ggplot2::.pt,\n                hjust = HJUST,\n                vjust = VJUST\n            )\n    })\n)\n\n\n## | column: page\n## | fig-width: 3.425195\n## | fig-height: 1.427165\n\np_embedding_group |&gt;\n    purrr::reduce(`+`) +\n    patchwork::plot_layout(\n        nrow = 2,\n        byrow = TRUE\n    ) +\n    patchwork::plot_annotation(\n        theme = ggplot2::theme(plot.margin = ggplot2::margin())\n    ) &\n    theme_customized_clear()\n\n\n\n\n\n\n\nExpression\nEmbedding\n\nfeatures_selected &lt;- c(\n    \"ENSG00000181449_SOX2\",\n    \"ENSG00000164736_SOX17\",\n    #\n    \"ENSG00000179348_GATA2\",\n    \"ENSG00000137869_CYP19A1\",\n    #\n    \"ENSG00000016082_ISL1\",\n    \"ENSG00000134817_APLNR\"\n)\n\nlineage_labels &lt;- c(\n    \"(Epiblast)\",\n    \"(Hypoblast)\",\n    \"(Trophectoderm)\",\n    \"(Trophectoderm)\",\n    \"(Amnion)\",\n    \"(Mesoderm)\"\n)\n\nx_legend &lt;- 0.0175\ny_legend &lt;- 0.995\n\nnum_columns &lt;- 6\np_embedding_expression_lineage &lt;- purrr::map2(\n    features_selected, lineage_labels, \\(x, y) {\n        selected_feature &lt;- x\n        values &lt;- log10(calc_cpm(matrix_readcount_use)[x, embedding$cell] + 1)\n        # values[!embedding$cell %in% cells_blastoid_LW119_LW121] &lt;- NA\n\n        plot_embedding(\n            data = embedding[, c(x_column, y_column)],\n            color = values,\n            # label = glue::glue(y),\n            color_legend = TRUE,\n            sort_values = TRUE,\n            rasterise = RASTERISED,\n            # geom_point_size = GEOM_POINT_SIZE * 0.7,\n            geom_point_size = GEOM_POINT_SIZE * 0.9,\n            na_value = \"grey70\"\n        ) +\n            theme_customized_embedding(\n                x = x_legend,\n                y = y_legend,\n                void = TRUE,\n                legend_key_size = c(1.2, 1.2)\n            ) +\n            ggplot2::annotate(\n                geom = \"text\",\n                x = x_label,\n                y = y_label,\n                label = stringr::str_c(\n                    x |&gt; stringr::str_remove(pattern = \"^E.+_\"),\n                    y,\n                    sep = \"\\n\"\n                ),\n                family = \"Arial\",\n                color = \"black\",\n                size = 5 / ggplot2::.pt,\n                hjust = HJUST,\n                vjust = VJUST\n            )\n    }\n)\n\n\nfeatures_selected &lt;- c(\n    \"ENSG00000181350_LRRC75A\",\n    \"ENSG00000143443_C1orf56\",\n    \"ENSG00000118137_APOA1\",\n    #\n    \"ENSG00000189334_S100A14\",\n    \"ENSG00000099953_MMP11\",\n    \"ENSG00000111341_MGP\"\n)\n\nnum_columns &lt;- 6\np_embedding_expression &lt;- purrr::map(features_selected, \\(x, y) {\n    selected_feature &lt;- x\n    values &lt;- log10(calc_cpm(matrix_readcount_use)[x, embedding$cell] + 1)\n    # values[!embedding$cell %in% cells_blastoid_LW119_LW121] &lt;- NA\n\n    plot_embedding(\n        data = embedding[, c(x_column, y_column)],\n        color = values,\n        # label = glue::glue(y),\n        color_legend = TRUE,\n        sort_values = TRUE,\n        rasterise = RASTERISED,\n        geom_point_size = GEOM_POINT_SIZE * 0.9,\n        na_value = \"grey70\"\n    ) +\n        theme_customized_embedding(\n            x = x_legend,\n            y = y_legend,\n            void = TRUE,\n            legend_key_size = c(1.2, 1.2)\n        ) +\n        ggplot2::annotate(\n            geom = \"text\",\n            x = x_label,\n            y = y_label,\n            label = stringr::str_c(\n                x |&gt; stringr::str_remove(pattern = \"^E.+_\")\n            ),\n            family = \"Arial\",\n            color = \"black\",\n            size = 5 / ggplot2::.pt,\n            hjust = HJUST,\n            vjust = VJUST\n        )\n})\n\n\nc(\n    p_embedding_expression_lineage,\n    p_embedding_expression\n) |&gt;\n    purrr::reduce(`+`) +\n    patchwork::plot_layout(\n        nrow = 4,\n        byrow = TRUE\n    ) +\n    patchwork::plot_annotation(\n        theme = ggplot2::theme(plot.margin = ggplot2::margin())\n    ) &\n    theme_customized_clear()\n\n\n\n\n\n\n\nLollipop\n\ncolor_palette_leiden &lt;- setNames(\n    object = scales::hue_pal(l = 75, c = 150)(\n        n = length(unique(embedding$leiden))\n    ),\n    nm = sort(unique(embedding$leiden))\n)\n\n\nfeatures_selected &lt;- c(\n    \"ENSG00000187569_DPPA3\",\n    \"ENSG00000265107_GJA5\",\n    \"ENSG00000226887_ERVMER34-1\",\n    \"ENSG00000129009_ISLR\",\n    \"ENSG00000005243_COPZ2\",\n    \"ENSG00000180340_FZD2\",\n    \"ENSG00000189001_SBSN\",\n    \"ENSG00000105198_LGALS13\",\n    \"ENSG00000196154_S100A4\",\n    \"ENSG00000180875_GREM2\",\n    \"ENSG00000130768_SMPDL3B\",\n    \"ENSG00000111704_NANOG\",\n    \"ENSG00000230798_FOXD3-AS1\",\n    \"ENSG00000120937_NPPB\",\n    \"ENSG00000104848_KCNA7\",\n    \"ENSG00000164877_MICALL2\",\n    \"ENSG00000110852_CLEC2B\",\n    \"ENSG00000132530_XAF1\",\n    \"ENSG00000271503_CCL5\",\n    \"ENSG00000026025_VIM\",\n    \"ENSG00000119922_IFIT2\",\n    \"ENSG00000134853_PDGFRA\",\n    \"ENSG00000125798_FOXA2\",\n    \"ENSG00000118137_APOA1\",\n    \"ENSG00000143248_RGS5\",\n    \"ENSG00000113196_HAND1\",\n    \"ENSG00000182053_TRIM49B\",\n    \"ENSG00000026025_VIM\",\n    \"ENSG00000133101_CCNA1\"\n) |&gt;\n    unique()\n\n\nclusters_selected &lt;- sort(unique(embedding$leiden)) |&gt; as.character()\n\np_lollipop &lt;- plot_lollipop(\n    cells = (\n        embedding |&gt;\n            split(~leiden) |&gt;\n            purrr::map(\n                \\(x) {\n                    x |&gt;\n                        dplyr::filter(\n                            batch %in% c(\"LW202\", \"LW204\"),\n                            !cell %in% cells_selected_stromal\n                        ) |&gt;\n                        dplyr::pull(cell)\n                }\n            )\n    )[clusters_selected],\n    features = features_selected,\n    matrix_cpm = calc_cpm(matrix_readcount_use),\n    color_title = expression(paste(\"Avg expr; log\"[10], \"( CPM + 1)\")),\n    size_title = NULL\n)\n\n\np_lollipop +\n    ggplot2::scale_size(\n        name = \"% cells expressing gene\",\n        breaks = seq(0, 1, .2),\n        labels = seq(0, 1, .2) * 100,\n        limits = c(0, 1),\n        range = c(0, 3),\n        guide = ggplot2::guide_legend(\n            title.position = \"top\",\n            title.hjust = 0.5,\n            label.position = \"bottom\",\n            nrow = 1,\n            byrow = TRUE,\n            order = 1\n        )\n    ) +\n    ggplot2::scale_color_viridis_c(\n        name = expression(paste(\"Avg expr; log\"[10], \"( CPM + 1)\")),\n        guide = ggplot2::guide_colourbar(\n            title.position = \"top\",\n            title.hjust = 1,\n            barwidth = 4,\n            barheight = 0.6,\n            direction = \"horizontal\",\n            order = 2\n        )\n    ) +\n    ggplot2::theme(\n        axis.title.x = ggplot2::element_text(\n            family = \"Arial\",\n            size = 6,\n            # margin = ggplot2::margin(t = 0, r = 0, b = 0, l = 0, unit = \"mm\")\n        ),\n        axis.title.y = ggplot2::element_text(\n            family = \"Arial\",\n            size = 6,\n            # margin = ggplot2::margin(t = 0, r = 0, b = 0, l = 0, unit = \"mm\")\n        ),\n        axis.text.y = ggplot2::element_text(\n            family = \"Arial\",\n            color = rev(color_palette_leiden[as.character(clusters_selected)]),\n            size = 5,\n        ),\n        axis.text.x = ggplot2::element_text(\n            family = \"Arial\",\n            color = \"black\",\n            size = 5,\n            angle = -45, vjust = 0.5, hjust = 1\n        ),\n        axis.line = ggplot2::element_blank(),\n        #\n        legend.background = ggplot2::element_blank(),\n        legend.margin = ggplot2::margin(\n            t = 0, r = 0, b = 0, l = 0, unit = \"mm\"\n        ),\n        legend.key = ggplot2::element_blank(),\n        #\n        legend.key.height = ggplot2::unit(2, \"mm\"),\n        legend.key.width = ggplot2::unit(3, \"mm\"),\n        #\n        legend.position = \"bottom\",\n        legend.box = \"horizontal\",\n        #\n        legend.text = ggplot2::element_text(\n            family = \"Arial\",\n            size = 5,\n            margin = ggplot2::margin(\n                t = 0, r = 0, b = 0, l = -0.5,\n                unit = \"mm\"\n            )\n        ),\n        legend.title = ggplot2::element_text(\n            family = \"Arial\",\n            size = 5\n        ),\n        #\n        legend.box.background = ggplot2::element_blank(),\n        #\n        # panel.background = ggplot2::element_blank(),\n        panel.background = ggplot2::element_rect(\n            fill = NA, color = NA, linewidth = NULL\n        ),\n        panel.border = ggplot2::element_rect(\n            fill = NA,\n            color = \"purple\",\n            linewidth = NULL\n        ),\n        panel.grid.major = ggplot2::element_line(\n            color = \"grey\", linewidth = 0.125\n        ),\n        panel.grid.minor = ggplot2::element_blank(),\n        #\n        plot.background = ggplot2::element_blank(),\n        plot.title = ggplot2::element_text(\n            family = \"Arial\",\n            size = 6,\n            hjust = 0.5\n        ),\n    )\n\n\n\n\n\n\n\nComposition\n\np_barplot_composition_leiden &lt;- calc_group_composition(\n    data = embedding,\n    x = \"leiden\",\n    group = \"batch_annotated\"\n) |&gt;\n    dplyr::mutate(\n        leiden = factor(leiden)\n    ) |&gt;\n    dplyr::filter(\n        # leiden %in% clusters_selected\n    ) |&gt;\n    plot_barplot(\n        x = \"leiden\",\n        y = \"percentage\",\n        z = \"batch_annotated\",\n        legend_ncol = 1,\n        #\n        #\n        axis_title_size = 5,\n        axis_text_size = 5,\n        legend_text_size = 5,\n        #\n        x_title = \"Cluster; IESCs\"\n    ) +\n    ggplot2::theme(\n        panel.border = ggplot2::element_rect(\n            fill = NA,\n            color = \"purple\",\n            linewidth = NULL\n        ),\n        axis.ticks = ggplot2::element_line(color = \"black\"),\n        #\n        axis.text.x = ggplot2::element_text(\n            family = \"Arial\",\n            # color = \"black\",\n            color = scales::hue_pal(l = 75, c = 150)(\n                n = length(unique(embedding$leiden))\n            ),\n            size = 5\n        ),\n    ) +\n    ggplot2::scale_fill_manual(\n        name = \"Sample\",\n        values = color_palette_assay\n    )\n\n`summarise()` has grouped output by 'leiden'. You can override using the\n`.groups` argument.\n\n\nWarning: Vectorized input to `element_text()` is not officially supported.\nℹ Results may be unexpected or may change in future versions of ggplot2.\n\n\n\np_barplot_composition_leiden\n\n\n\n\n\n\n\nDE\n\nprepare_features_to_mark &lt;- function(d, num_features = 5) {\n    purrr::map(names(d), \\(x) {\n        d[[x]] |&gt;\n            dplyr::mutate(\n                category = x |&gt;\n                    stringr::str_remove(\n                        pattern = \"_.+$\"\n                    )\n            ) |&gt;\n            tibble::rownames_to_column(var = \"feature\") |&gt;\n            dplyr::filter(\n                fdr &lt; 0.05,\n            ) |&gt;\n            dplyr::mutate(\n                group = dplyr::case_when(\n                    log_fc &gt; 0 ~ \"up\",\n                    TRUE ~ \"down\"\n                )\n            ) |&gt;\n            split(~group) |&gt;\n            purrr::map(\n                \\(xx) {\n                    xx |&gt;\n                        dplyr::arrange(desc(abs(log_fc))) |&gt;\n                        dplyr::slice(1:num_features)\n                }\n            ) |&gt;\n            dplyr::bind_rows() |&gt;\n            dplyr::mutate(\n                name = stringr::str_remove(string = feature, pattern = \"_.+$\"),\n                symbol = stringr::str_remove(string = feature, pattern = \"^E.+_\")\n            )\n    }) |&gt;\n        dplyr::bind_rows()\n}\n\nadd_labels &lt;- function(f) {\n    ggrepel::geom_text_repel(\n        data = f,\n        ggplot2::aes(\n            label = symbol,\n        ),\n        color = \"black\",\n        size = 5 / ggplot2::.pt,\n        family = \"Arial\",\n        fontface = \"plain\",\n        min.segment.length = -1e-10, box.padding = 0.5,\n        segment.color = \"grey30\", # \"grey70\",\n        segment.size = 0.25,\n        segment.curvature = -10,\n        segment.angle = 20,\n        segment.ncp = 0,\n        arrow = ggplot2::arrow(length = ggplot2::unit(0.0075, \"npc\")),\n        #\n        seed = 20220724 + 2023,\n        max.iter = Inf,\n        max.overlaps = Inf,\n        nudge_x = 0,\n        nudge_y = 0,\n        point.padding = 0,\n        #\n        hjust = 0\n    )\n}\n\ntheme_customized_scatter &lt;- function() {\n    ggplot2::theme(\n        axis.title.x = ggplot2::element_text(\n            family = \"Arial\",\n            size = 5,\n        ),\n        axis.title.y = ggplot2::element_text(\n            family = \"Arial\",\n            size = 5,\n            margin = ggplot2::margin(t = 0, r = 0, b = 0, l = 0, unit = \"mm\")\n        ),\n        axis.text = ggplot2::element_text(\n            family = \"Arial\",\n            color = \"black\",\n            size = 5\n        ),\n        #\n        plot.title = ggplot2::element_text(\n            family = \"Arial\",\n            size = 6,\n            hjust = 0.5,\n            margin = ggplot2::margin(t = 0, r = 0, b = 1, l = 0, unit = \"mm\")\n        ),\n        strip.text = ggplot2::element_text(\n            family = \"Arial\", size = 5\n        ),\n        panel.border = ggplot2::element_rect(\n            fill = NA, color = \"purple\",\n        ),\n        strip.background = ggplot2::element_rect(\n            fill = \"#d9d9d9ff\", color = \"purple\"\n        )\n    )\n}\n\n\nEDGER_METHOD &lt;- \"lrt\"\nLOG_FC_THRESHOLD &lt;- 1\n\nBlastocyst vs. blastoid\n\nclusters_selected &lt;- list(\n    ELCs = c(8),\n    HLCs = c(14),\n    TLCs = c(0, 3, 4, 5, 7, 9, 10)\n)\n\nde &lt;- purrr::map(names(clusters_selected), \\(x) {\n    cells_1 &lt;- embedding |&gt;\n        dplyr::filter(\n            leiden %in% clusters_selected[[x]],\n            !cell %in% cells_selected_stromal,\n            batch %in% c(\"LW186\", \"LW188\", \"LW187\", \"LW189\")\n        ) |&gt;\n        dplyr::pull(cell)\n\n    cells_2 &lt;- embedding |&gt;\n        dplyr::filter(\n            leiden %in% clusters_selected[[x]],\n            !cell %in% cells_selected_stromal,\n            batch %in% c(\"LW204\", \"LW202\")\n        ) |&gt;\n        dplyr::pull(cell)\n\n    cat(x, length(cells_1), length(cells_2), \"\\n\")\n\n    # if (length(cells_1) &gt;= 100 & length(cells_2) &gt;= 100) {\n    out &lt;- run_pseudobulk_edgeR(\n        matrix = matrix_readcount_use,\n        cells_1 = cells_1,\n        cells_2 = cells_2,\n        method = EDGER_METHOD,\n        log_fc_threshold = LOG_FC_THRESHOLD\n    )\n    # } else {\n    #    out &lt;- NULL\n    # }\n    return(out)\n})\n\nELCs 269 1963 \n\n\nnumber of pseudobulks: 8 (269) vs 10 (1963)\n\n\nHLCs 530 284 \n\n\nnumber of pseudobulks: 9 (530) vs 9 (284)\n\n\nTLCs 12707 8340 \n\n\nnumber of pseudobulks: 10 (12707) vs 9 (8340)\n\nnames(de) &lt;- names(clusters_selected)\n\n\nde &lt;- purrr::map(de, \\(x) {\n    x$edgeR_result\n})\n\n\nfeatures_to_mark &lt;- prepare_features_to_mark(de)\n\np_scatter_de &lt;- purrr::map(names(de), \\(x) {\n    de[[x]] |&gt;\n        dplyr::mutate(\n            category = x |&gt;\n                stringr::str_remove(\n                    pattern = \"_.+$\"\n                )\n        ) |&gt;\n        tibble::rownames_to_column(var = \"feature\")\n}) |&gt;\n    dplyr::bind_rows() |&gt;\n    dplyr::mutate(\n        de = dplyr::case_when(\n            fdr &lt; 0.05 & abs(log_fc) &gt;= 2 ~ \"1\",\n            TRUE ~ \"0\"\n        )\n    ) |&gt;\n    ggplot2::ggplot(\n        aes(\n            x = log_cpm,\n            y = log_fc,\n            color = de\n        )\n    ) +\n    ggrastr::rasterise(\n        input = ggplot2::geom_point(alpha = 0.8, size = 0.8, stroke = 0),\n        dpi = 900,\n        dev = \"ragg_png\"\n    ) +\n    ggplot2::facet_grid(cols = vars(category), scales = \"free\")\n\n\np_scatter_de &lt;- p_scatter_de +\n    ggplot2::scale_color_manual(values = c(\"grey70\", \"#00BFC4\")) +\n    ggplot2::scale_x_continuous(\n        name = expression(paste(\"Average CPM \", \"(log\"[2], \")\")),\n    ) +\n    ggplot2::scale_y_continuous(\n        name = expression(paste(\"Fold change \", \"(log\"[2], \")\")),\n    ) +\n    ggplot2::ggtitle(label = \"Blastocyst vs. blastoid\") +\n    ggplot2::guides(color = \"none\") +\n    theme_customized2() +\n    theme_customized_scatter() # + add_labels(features_to_mark)\n\n\ng &lt;- ggplot2::ggplot_gtable(\n    ggplot2::ggplot_build(p_scatter_de)\n)\nstript &lt;- which(grepl(\"strip-t\", g$layout$name))\n\n\nk &lt;- 1\nfor (i in stript) {\n    j &lt;- which(grepl(\"rect\", g$grobs[[i]]$grobs[[1]]$childrenOrder))\n    g$grobs[[i]]$grobs[[1]]$children[[j]]$gp$fill &lt;- setNames(\n        object = c(ELCs = \"#8ace7e\", HLCs = \"#ff684c\", TLCs = \"#9467bd\"),\n        nm = seq_len(3)\n    )[k]\n    k &lt;- k + 1\n}\ngrid::grid.draw(g)\n\n\n\n\n\n\n\nClusters 3-5 vs. 0-7-9\n\nclusters_selected_1 &lt;- c(3, 5)\nclusters_selected_2 &lt;- c(0, 7, 9)\n\ncells_1 &lt;- embedding |&gt;\n    dplyr::filter(\n        leiden %in% clusters_selected_1,\n        !batch %in% c(\"LW203\")\n    ) |&gt;\n    dplyr::pull(cell)\n\n\ncells_2 &lt;- embedding |&gt;\n    dplyr::filter(\n        leiden %in% clusters_selected_2,\n        !batch %in% c(\"LW203\")\n    ) |&gt;\n    dplyr::pull(cell)\n\ncat(length(cells_1), length(cells_2), \"\\n\")\n\n6645 9817 \n\nde &lt;- run_pseudobulk_edgeR(\n    matrix = matrix_readcount_use,\n    cells_1 = cells_1,\n    cells_2 = cells_2,\n    method = EDGER_METHOD,\n    log_fc_threshold = LOG_FC_THRESHOLD\n)\n\nnumber of pseudobulks: 10 (6645) vs 10 (9817)\n\n\n\n# de &lt;- de$edgeR_result\n\n\nfeatures_to_mark &lt;- de$edgeR_result |&gt;\n    tibble::rownames_to_column(var = \"feature\") |&gt;\n    dplyr::mutate(\n        symbol = stringr::str_remove_all(\n            string = feature,\n            pattern = \"^E.+_\"\n        )\n    ) |&gt;\n    dplyr::filter(\n        symbol %in% c(\n            \"MMP10\",\n            \"MMP3\",\n            \"CTGF\",\n            \"KRT17\",\n            \"CNN1\",\n            \"SERPINE2\",\n            \"FN1\",\n            \"DBP\"\n        )\n    )\n\n\np_scatter_de &lt;- de$edgeR_result |&gt;\n    tibble::rownames_to_column(var = \"feature\") |&gt;\n    dplyr::mutate(\n        de = dplyr::case_when(\n            fdr &lt; 0.05 & abs(log_fc) &gt;= 1 ~ \"1\",\n            TRUE ~ \"0\"\n        )\n    ) |&gt;\n    dplyr::arrange((de)) |&gt;\n    ggplot2::ggplot(\n        aes(\n            x = log_cpm,\n            y = log_fc,\n            color = de\n        )\n    ) +\n    ggrastr::rasterise(\n        input = ggplot2::geom_point(alpha = 0.8, size = 0.8, stroke = 0),\n        dpi = 900,\n        dev = \"ragg_png\"\n    )\n\n\np_scatter_de +\n    ggplot2::scale_color_manual(values = c(\"grey70\", \"#00BFC4\")) +\n    ggplot2::scale_x_continuous(\n        name = expression(paste(\"Average CPM \", \"(log\"[2], \")\")),\n    ) +\n    ggplot2::scale_y_continuous(\n        name = expression(paste(\"Fold change \", \"(log\"[2], \")\")),\n        limits = c(-4, 5.862482)\n    ) +\n    ggplot2::ggtitle(label = \"Cluster 3-5 vs. 0-7-9\") +\n    ggplot2::guides(color = \"none\") +\n    theme_customized2() +\n    theme_customized_scatter() +\n    add_labels(features_to_mark)\n\n\n\n\n\n\n\nGene Ontology enrichment\n\nplot_barplot_go &lt;- function(x, x_title) {\n    ggplot2::ggplot(\n        data = x,\n        ggplot2::aes(\n            x = -log10(p_value),\n            y = as.factor(rev(rank))\n        )\n    ) +\n        ggplot2::geom_bar(\n            stat = \"identity\",\n            fill = \"#707d75\",\n            alpha = 0.8\n        ) +\n        ggplot2::scale_x_continuous(\n            # name = expression(paste(\"Cluster 0-7-9; -log\"[10], \" p\", sep = \"\")),\n            name = x_title,\n            labels = scales::math_format(10^.x)\n        ) +\n        ggplot2::guides(fill = \"none\") +\n        ggplot2::geom_text(\n            ggplot2::aes(\n                x = 0,\n                label = paste(\" \", term, sep = \"\"),\n                group = NULL\n            ),\n            size = 6 / ggplot2::.pt,\n            family = \"Arial\",\n            color = \"black\",\n            data = x,\n            hjust = 0\n        ) +\n        ggplot2::theme_classic() +\n        ggplot2::theme(\n            axis.title.x = ggplot2::element_text(family = \"Arial\", size = 5),\n            axis.title.y = ggplot2::element_blank(),\n            axis.text.x = ggplot2::element_text(family = \"Arial\", size = 5),\n            axis.text.y = ggplot2::element_blank(),\n            axis.ticks.y = ggplot2::element_blank(),\n            axis.line.y = ggplot2::element_blank(),\n            legend.text = ggplot2::element_text(family = \"Arial\", size = 5),\n            legend.title = ggplot2::element_text(family = \"Arial\", size = 5)\n        ) +\n        ggplot2::theme(\n            axis.line.x.bottom = element_line(color = \"purple\", linewidth = 0.3),\n            panel.background = ggplot2::element_blank(),\n            plot.background = ggplot2::element_blank()\n        )\n}\n\n\nenriched_go &lt;- tibble::tribble(\n    ~go_id, ~term, ~p_value,\n    \"GO:0030198\", \"extracellular matrix organization\", 1.6e-18,\n    \"GO:0045229\", \"external encapsulating structure organization\", 2.5e-18,\n    \"GO:0001944\", \"vasculature development\", 1e-16,\n    \"GO:0001568\", \"blood vessel development\", 1.3e-16,\n    \"GO:0030199\", \"collagen fibril organization\", 1.4e-15,\n    \"GO:0016477\", \"cell migration\", 2e-16,\n    \"GO:0032963\", \"collagen metabolic process\", 6.1e-21,\n    \"GO:0009653\", \"anatomical structure morphogenesis\", 2.8e-15,\n    \"GO:0048514\", \"blood vessel morphogenesis\", 3.2e-14,\n    \"GO:0072359\", \"circulatory system development\", 8e-15,\n    \"GO:0097435\", \"supramolecular fiber organization\", 7.4e-14,\n    \"GO:0035295\", \"tube development\", 2.3e-13\n) |&gt;\n    dplyr::mutate(\n        p_value_log = -log10(p_value),\n        term = stringr::str_replace_all(\n            string = term,\n            pattern = \"organization0\",\n            replacement = \"org.\"\n        )\n    ) |&gt;\n    dplyr::arrange(\n        p_value\n    ) |&gt;\n    dplyr::mutate(rank = 1:dplyr::n())\n\n\np_barplot_go_bp_3_5 &lt;- plot_barplot_go(\n    enriched_go,\n    x_title = expression(paste(\"Cluster 3-5; -log\"[10], \" p\", sep = \"\"))\n)\n\n\nenriched_go &lt;- tibble::tribble(\n    ~go_id, ~term, ~p_value,\n    \"GO:0051276\", \"chromosome organization\", 1.3e-16,\n    \"GO:0090304\", \"nucleic acid metabolic process\", 6.2e-16,\n    \"GO:0006139\", \"nucleobase-containing compound metabolic process\", 1.3e-12,\n    \"GO:0097659\", \"nucleic acid-templated transcription\", 1.1e-13,\n    \"GO:0032774\", \"RNA biosynthetic process\", 1.8e-13,\n    \"GO:0006351\", \"transcription, DNA-templated\", 2.3e-13,\n    \"GO:0051252\", \"regulation of RNA metabolic process\", 8.3e-13,\n    \"GO:0006996\", \"organelle organization\", 3.8e-12,\n    \"GO:0046483\", \"heterocycle metabolic process\", 4.3e-12,\n    \"GO:0019438\", \"aromatic compound biosynthetic process\", 5.2e-12,\n    \"GO:0006725\", \"cellular aromatic compound metabolic process\", 7.2e-12,\n    \"GO:0016570\", \"histone modification\", 8e-12\n) |&gt;\n    dplyr::arrange(p_value) |&gt;\n    dplyr::mutate(\n        p_value_log = -log10(p_value),\n        term = stringr::str_replace_all(\n            string = term,\n            pattern = \"organization0\",\n            replacement = \"org.\"\n        )\n    ) |&gt;\n    dplyr::arrange(\n        p_value\n    ) |&gt;\n    dplyr::mutate(rank = 1:dplyr::n())\n\n\np_barplot_go_bp_0_7_9 &lt;- plot_barplot_go(\n    enriched_go,\n    x_title = expression(paste(\"Cluster 0-7-9; -log\"[10], \" p\", sep = \"\"))\n)\n\n\nlist(\n    p_barplot_go_bp_3_5,\n    p_barplot_go_bp_0_7_9\n) |&gt;\n    purrr::reduce(`+`) +\n    patchwork::plot_layout(nrow = 1) +\n    patchwork::plot_annotation(\n        theme = theme(plot.margin = margin())\n    ) &\n    theme_customized_clear()\n\n\n\n\n\n\n\nKEGG enrichment\n\nenriched_kegg &lt;- tibble::tribble(\n    ~id, ~description, ~GeneRatio, ~BgRatio, ~pvalue, ~category, ~group,\n    \"hsa04512\", \"ECM-receptor interaction\", \"5/42\", \"88/6234\", 0.000281855, \"ELCs\", \"blastocyst\",\n    \"hsa04612\", \"Antigen processing and presentation\", \"4/42\", \"68/6234\", 0.001060988, \"ELCs\", \"blastocyst\",\n    \"hsa04974\", \"Protein digestion and absorption\", \"4/42\", \"103/6234\", 0.004859407, \"ELCs\", \"blastocyst\",\n    \"hsa04510\", \"Focal adhesion\", \"5/42\", \"202/6234\", 0.010913578, \"ELCs\", \"blastocyst\",\n    \"hsa03320\", \"PPAR signaling pathway\", \"3/42\", \"75/6234\", 0.013720541, \"ELCs\", \"blastocyst\",\n    \"hsa05205\", \"Proteoglycans in cancer\", \"11/81\", \"202/6234\", 5.22765e-05, \"HLCs\", \"blastocyst\",\n    \"hsa04512\", \"ECM-receptor interaction\", \"7/81\", \"88/6234\", 0.000130988, \"HLCs\", \"blastocyst\",\n    \"hsa04510\", \"Focal adhesion\", \"9/81\", \"202/6234\", 0.001139082, \"HLCs\", \"blastocyst\",\n    \"hsa04974\", \"Protein digestion and absorption\", \"6/81\", \"103/6234\", 0.002095322, \"HLCs\", \"blastocyst\",\n    \"hsa04979\", \"Cholesterol metabolism\", \"4/81\", \"51/6234\", 0.004159024, \"HLCs\", \"blastocyst\",\n    \"hsa04510\", \"Focal adhesion\", \"28/292\", \"202/6234\", 1.7399e-07, \"TLCs\", \"blastocyst\",\n    \"hsa04512\", \"ECM-receptor interaction\", \"15/292\", \"88/6234\", 1.14579e-05, \"TLCs\", \"blastocyst\",\n    \"hsa05205\", \"Proteoglycans in cancer\", \"23/292\", \"202/6234\", 6.13288e-05, \"TLCs\", \"blastocyst\",\n    \"hsa04974\", \"Protein digestion and absorption\", \"13/292\", \"103/6234\", 0.000958324, \"TLCs\", \"blastocyst\",\n    \"hsa04151\", \"PI3K-Akt signaling pathway\", \"28/292\", \"353/6234\", 0.003988003, \"TLCs\", \"blastocyst\",\n    \"hsa04115\", \"p53 signaling pathway\", \"10/126\", \"73/6234\", 1.68217e-06, \"ELCs\", \"blastoid\",\n    \"hsa04068\", \"FoxO signaling pathway\", \"9/126\", \"130/6234\", 0.001188586, \"ELCs\", \"blastoid\",\n    \"hsa04210\", \"Apoptosis\", \"9/126\", \"135/6234\", 0.001550454, \"ELCs\", \"blastoid\",\n    \"hsa04550\", \"Signaling pathways regulating pluripotency of stem cells\", \"9/126\", \"143/6234\", 0.002309383, \"ELCs\", \"blastoid\",\n    \"hsa04310\", \"Wnt signaling pathway\", \"9/126\", \"170/6234\", 0.00724, \"ELCs\", \"blastoid\",\n    \"hsa04917\", \"Prolactin signaling pathway\", \"3/56\", \"70/6234\", 0.024598088, \"HLCs\", \"blastoid\",\n    \"hsa05230\", \"Central carbon metabolism in cancer\", \"3/56\", \"70/6234\", 0.024598088, \"HLCs\", \"blastoid\",\n    \"hsa04137\", \"Mitophagy - animal\", \"3/56\", \"72/6234\", 0.026466658, \"HLCs\", \"blastoid\",\n    \"hsa04115\", \"p53 signaling pathway\", \"3/56\", \"73/6234\", 0.027428868, \"HLCs\", \"blastoid\",\n    \"hsa04210\", \"Apoptosis\", \"4/56\", \"135/6234\", 0.032458563, \"HLCs\", \"blastoid\",\n    \"hsa04066\", \"HIF-1 signaling pathway\", \"21/422\", \"109/6234\", 9.77485e-06, \"TLCs\", \"blastoid\",\n    \"hsa04068\", \"FoxO signaling pathway\", \"22/422\", \"130/6234\", 5.04122e-05, \"TLCs\", \"blastoid\",\n    \"hsa04010\", \"MAPK signaling pathway\", \"37/422\", \"294/6234\", 0.000152211, \"TLCs\", \"blastoid\",\n    \"hsa04115\", \"p53 signaling pathway\", \"14/422\", \"73/6234\", 0.000314539, \"TLCs\", \"blastoid\",\n    \"hsa04012\", \"ErbB signaling pathway\", \"14/422\", \"84/6234\", 0.001361888, \"TLCs\", \"blastoid\"\n)\n\n\npurrr::map2(c(\"Blastocyst\", \"Blastoid\"), c(\"#99B898\", \"#F9CDAD\"), \\(x, y) {\n    enriched_kegg |&gt;\n        dplyr::mutate(\n            group = stringr::str_to_title(group)\n        ) |&gt;\n        dplyr::select(\n            go_id = id,\n            term = description,\n            p_value = pvalue,\n            category,\n            group\n        ) |&gt;\n        dplyr::filter(group == x) |&gt;\n        split(~category) |&gt;\n        purrr::map(\n            \\(x)\n            x |&gt;\n                dplyr::arrange(p_value) |&gt;\n                dplyr::slice(1:5) |&gt;\n                dplyr::mutate(rank = 1:dplyr::n())\n        ) |&gt;\n        dplyr::bind_rows() |&gt;\n        dplyr::mutate(\n            p_value_log = -log10(p_value)\n        ) |&gt;\n        {\n            \\(z) {\n                z |&gt;\n                    ggplot2::ggplot(\n                        ggplot2::aes(\n                            x = -log10(p_value),\n                            y = as.factor(rev(rank))\n                        )\n                    ) +\n                    ggplot2::geom_bar(\n                        stat = \"identity\",\n                        fill = y,\n                        alpha = 0.8\n                    ) +\n                    ggplot2::facet_grid(\n                        cols = ggplot2::vars(category), scales = \"free_x\"\n                    ) +\n                    ggplot2::scale_x_continuous(\n                        name = glue::glue(\n                            \"KEGG; {x}; -log&lt;sub&gt;10&lt;/sub&gt; p\"\n                        ),\n                        labels = scales::math_format(10^.x)\n                    ) +\n                    ggplot2::guides(fill = \"none\") +\n                    ggplot2::geom_text(\n                        ggplot2::aes(\n                            x = 0,\n                            label = paste(\" \", term, sep = \"\"),\n                            group = NULL\n                        ),\n                        size = 6 / ggplot2::.pt,\n                        family = \"Arial\",\n                        color = \"black\",\n                        data = z,\n                        hjust = 0\n                    ) +\n                    ggplot2::theme(\n                        axis.title.x = ggplot2::element_text(\n                            family = \"Arial\", size = 5\n                        ),\n                        axis.title.y = ggplot2::element_blank(),\n                        axis.text.x = ggplot2::element_text(\n                            family = \"Arial\", size = 5\n                        ),\n                        axis.text.y = ggplot2::element_blank(),\n                        axis.ticks.y = ggplot2::element_blank(),\n                        axis.line.y = ggplot2::element_blank(),\n                        legend.text = ggplot2::element_text(\n                            family = \"Arial\", size = 5\n                        ),\n                        legend.title = ggplot2::element_text(\n                            family = \"Arial\", size = 5\n                        )\n                    ) +\n                    ggplot2::theme(\n                        axis.line.x.bottom = ggplot2::element_line(\n                            color = \"purple\", linewidth = 0.3\n                        ),\n                        panel.background = ggplot2::element_blank(),\n                        plot.background = ggplot2::element_blank(),\n                        #\n                        strip.background = ggplot2::element_rect(\n                            fill = NA,\n                            color = NA\n                        ),\n                        #\n                        strip.text = ggplot2::element_text(\n                            family = \"Arial\",\n                            size = 5,\n                            color = \"black\",\n                            hjust = 0.5,\n                            margin = ggplot2::margin(\n                                t = 0, r = 0, b = 1, l = 0,\n                                unit = \"mm\"\n                            )\n                        ),\n                        axis.title.x = ggtext::element_markdown(),\n                    )\n            }\n        }()\n}) |&gt;\n    purrr::reduce(`+`) +\n    patchwork::plot_layout(ncol = 1, byrow = FALSE) +\n    patchwork::plot_annotation(\n        theme = ggplot2::theme(plot.margin = ggplot2::margin())\n    )"
  },
  {
    "objectID": "interpret_blastoids_stromal.html#r-session-info",
    "href": "interpret_blastoids_stromal.html#r-session-info",
    "title": "Blastoids Are Capable of Recapitulating Human Embryo Implantation Events",
    "section": "R session info",
    "text": "R session info\n\ndevtools::session_info()\n\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.1 (2023-06-16)\n os       macOS Ventura 13.5\n system   aarch64, darwin22.4.0\n ui       unknown\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       America/Chicago\n date     2023-08-12\n pandoc   2.19.2 @ /Users/jialei/.pyenv/shims/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package     * version     date (UTC) lib source\n beeswarm      0.4.0       2021-06-01 [1] CRAN (R 4.3.0)\n bit           4.0.5       2022-11-15 [1] CRAN (R 4.3.0)\n bit64         4.0.5       2020-08-30 [1] CRAN (R 4.3.0)\n cachem        1.0.8       2023-05-01 [1] CRAN (R 4.3.0)\n callr         3.7.3       2022-11-02 [1] CRAN (R 4.3.0)\n cli           3.6.1       2023-03-23 [1] CRAN (R 4.3.0)\n colorspace    2.1-0       2023-01-23 [1] CRAN (R 4.3.0)\n commonmark    1.9.0       2023-03-17 [1] CRAN (R 4.3.0)\n crayon        1.5.2       2022-09-29 [1] CRAN (R 4.3.0)\n devtools      2.4.5.9000  2023-08-11 [1] Github (r-lib/devtools@163c3f2)\n digest        0.6.33      2023-07-07 [1] CRAN (R 4.3.1)\n dplyr       * 1.1.2.9000  2023-07-19 [1] Github (tidyverse/dplyr@c963d4d)\n ellipsis      0.3.2       2021-04-29 [1] CRAN (R 4.3.0)\n evaluate      0.21        2023-05-05 [1] CRAN (R 4.3.0)\n extrafont   * 0.19        2023-01-18 [1] CRAN (R 4.3.0)\n extrafontdb   1.0         2012-06-11 [1] CRAN (R 4.3.0)\n fansi         1.0.4       2023-01-22 [1] CRAN (R 4.3.0)\n farver        2.1.1       2022-07-06 [1] CRAN (R 4.3.0)\n fastmap       1.1.1       2023-02-24 [1] CRAN (R 4.3.0)\n forcats     * 1.0.0.9000  2023-04-23 [1] Github (tidyverse/forcats@4a8525a)\n fs            1.6.3       2023-07-20 [1] CRAN (R 4.3.1)\n generics      0.1.3       2022-07-05 [1] CRAN (R 4.3.0)\n ggbeeswarm    0.7.2       2023-04-29 [1] CRAN (R 4.3.0)\n ggplot2     * 3.4.2.9000  2023-08-11 [1] Github (tidyverse/ggplot2@2cd0e96)\n ggrastr       1.0.2       2023-06-01 [1] CRAN (R 4.3.0)\n ggrepel       0.9.3       2023-02-03 [1] CRAN (R 4.3.0)\n ggtext        0.1.2       2022-09-16 [1] CRAN (R 4.3.0)\n glue          1.6.2.9000  2023-04-23 [1] Github (tidyverse/glue@cbac82a)\n gridtext      0.1.5       2022-09-16 [1] CRAN (R 4.3.0)\n gt            0.9.0.9000  2023-08-11 [1] Github (rstudio/gt@a3cc005)\n gtable        0.3.3.9000  2023-04-23 [1] Github (r-lib/gtable@c56fd4f)\n hms           1.1.3       2023-03-21 [1] CRAN (R 4.3.0)\n htmltools     0.5.6       2023-08-10 [1] CRAN (R 4.3.1)\n htmlwidgets   1.6.2       2023-03-17 [1] CRAN (R 4.3.0)\n jsonlite      1.8.7       2023-06-29 [1] CRAN (R 4.3.1)\n knitr         1.43        2023-05-25 [1] CRAN (R 4.3.0)\n labeling      0.4.2       2020-10-20 [1] CRAN (R 4.3.0)\n lattice       0.21-8      2023-04-05 [2] CRAN (R 4.3.1)\n lifecycle     1.0.3       2022-10-07 [1] CRAN (R 4.3.0)\n lubridate   * 1.9.2.9000  2023-07-22 [1] Github (tidyverse/lubridate@cae67ea)\n magrittr      2.0.3       2022-03-30 [1] CRAN (R 4.3.0)\n markdown      1.7         2023-05-16 [1] CRAN (R 4.3.0)\n Matrix      * 1.6-0       2023-07-08 [2] CRAN (R 4.3.1)\n memoise       2.0.1       2021-11-26 [1] CRAN (R 4.3.0)\n munsell       0.5.0       2018-06-12 [1] CRAN (R 4.3.0)\n patchwork   * 1.1.2.9000  2023-08-11 [1] Github (thomasp85/patchwork@bd57553)\n pillar        1.9.0       2023-03-22 [1] CRAN (R 4.3.0)\n pkgbuild      1.4.2       2023-06-26 [1] CRAN (R 4.3.1)\n pkgconfig     2.0.3       2019-09-22 [1] CRAN (R 4.3.0)\n pkgload       1.3.2.9000  2023-07-05 [1] Github (r-lib/pkgload@3cf9896)\n png           0.1-8       2022-11-29 [1] CRAN (R 4.3.0)\n prettyunits   1.1.1.9000  2023-04-23 [1] Github (r-lib/prettyunits@8706d89)\n processx      3.8.2       2023-06-30 [1] CRAN (R 4.3.1)\n ps            1.7.5       2023-04-18 [1] CRAN (R 4.3.0)\n purrr       * 1.0.2.9000  2023-08-11 [1] Github (tidyverse/purrr@ac4f5a9)\n R.cache       0.16.0      2022-07-21 [1] CRAN (R 4.3.0)\n R.methodsS3   1.8.2       2022-06-13 [1] CRAN (R 4.3.0)\n R.oo          1.25.0      2022-06-12 [1] CRAN (R 4.3.0)\n R.utils       2.12.2      2022-11-11 [1] CRAN (R 4.3.0)\n R6            2.5.1.9000  2023-04-23 [1] Github (r-lib/R6@e97cca7)\n ragg          1.2.5       2023-01-12 [1] CRAN (R 4.3.0)\n Rcpp          1.0.11      2023-07-06 [1] CRAN (R 4.3.1)\n readr       * 2.1.4.9000  2023-08-03 [1] Github (tidyverse/readr@80e4dc1)\n remotes       2.4.2.9000  2023-06-09 [1] Github (r-lib/remotes@8875171)\n reticulate    1.31        2023-08-10 [1] CRAN (R 4.3.1)\n rlang         1.1.1.9000  2023-06-09 [1] Github (r-lib/rlang@c55f602)\n rmarkdown     2.23.4      2023-07-27 [1] Github (rstudio/rmarkdown@054d735)\n rstudioapi    0.15.0.9000 2023-07-19 [1] Github (rstudio/rstudioapi@feceaef)\n Rttf2pt1      1.3.12      2023-01-22 [1] CRAN (R 4.3.0)\n sass          0.4.7       2023-07-15 [1] CRAN (R 4.3.1)\n scales        1.2.1       2022-08-20 [1] CRAN (R 4.3.0)\n sessioninfo   1.2.2       2021-12-06 [1] CRAN (R 4.3.0)\n stringi       1.7.12      2023-01-11 [1] CRAN (R 4.3.0)\n stringr     * 1.5.0.9000  2023-08-11 [1] Github (tidyverse/stringr@08ff36f)\n styler      * 1.10.1      2023-07-17 [1] Github (r-lib/styler@aca7223)\n systemfonts   1.0.4       2022-02-11 [1] CRAN (R 4.3.0)\n textshaping   0.3.6       2021-10-13 [1] CRAN (R 4.3.0)\n tibble      * 3.2.1.9005  2023-05-28 [1] Github (tidyverse/tibble@4de5c15)\n tidyr       * 1.3.0.9000  2023-04-23 [1] Github (tidyverse/tidyr@0764e65)\n tidyselect    1.2.0       2022-10-10 [1] CRAN (R 4.3.0)\n tidyverse   * 2.0.0.9000  2023-04-23 [1] Github (tidyverse/tidyverse@8ec2e1f)\n timechange    0.2.0       2023-01-11 [1] CRAN (R 4.3.0)\n tzdb          0.4.0       2023-05-12 [1] CRAN (R 4.3.0)\n usethis       2.2.2.9000  2023-07-11 [1] Github (r-lib/usethis@467ff57)\n utf8          1.2.3       2023-01-31 [1] CRAN (R 4.3.0)\n vctrs         0.6.3       2023-06-14 [1] CRAN (R 4.3.0)\n vipor         0.4.5       2017-03-22 [1] CRAN (R 4.3.0)\n viridisLite   0.4.2       2023-05-02 [1] CRAN (R 4.3.0)\n vroom         1.6.3.9000  2023-04-30 [1] Github (tidyverse/vroom@89b6aac)\n withr         2.5.0       2022-03-03 [1] CRAN (R 4.3.0)\n xfun          0.40        2023-08-09 [1] CRAN (R 4.3.1)\n xml2          1.3.5       2023-07-06 [1] CRAN (R 4.3.1)\n yaml          2.3.7       2023-01-23 [1] CRAN (R 4.3.0)\n\n [1] /opt/homebrew/lib/R/4.3/site-library\n [2] /opt/homebrew/Cellar/r/4.3.1/lib/R/library\n\n─ Python configuration ───────────────────────────────────────────────────────\n python:         /Users/jialei/.pyenv/shims/python\n libpython:      /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/libpython3.10.dylib\n pythonhome:     /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3:/Users/jialei/.pyenv/versions/mambaforge-22.9.0-3\n version:        3.10.9 | packaged by conda-forge | (main, Feb  2 2023, 20:26:08) [Clang 14.0.6 ]\n numpy:          /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/numpy\n numpy_version:  1.24.3\n numpy:          /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/numpy\n \n NOTE: Python version was forced by RETICULATE_PYTHON\n\n──────────────────────────────────────────────────────────────────────────────\n\n\n\n\nStyling  1  files:\n interpret_blastoids_stromal.qmd ✔ \n────────────────────────────────────────\nStatus  Count   Legend \n✔   1   File unchanged.\nℹ   0   File changed.\n✖   0   Styling threw an error.\n────────────────────────────────────────"
  },
  {
    "objectID": "genotype_stromal_cells.html",
    "href": "genotype_stromal_cells.html",
    "title": "Genotyping of Immortalized Primary Endometrial Stromal Cells (IESCs)",
    "section": "",
    "text": "Sys.time()\n\n[1] \"2023-08-12 10:57:15 CDT\"\nSys.timezone()\n\n[1] \"America/Chicago\""
  },
  {
    "objectID": "genotype_stromal_cells.html#preparation",
    "href": "genotype_stromal_cells.html#preparation",
    "title": "Genotyping of Immortalized Primary Endometrial Stromal Cells (IESCs)",
    "section": "Preparation",
    "text": "Preparation\n\nPROJECT_DIR &lt;- \"/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation\"\n\nFunctions\n\nscore_snps &lt;- function(m, cells, snp_concensus) {\n    furrr::future_map(c(cells), \\(x) {\n        selected_cell &lt;- x\n\n        snps_for_testing &lt;- rownames(\n            m\n        )[m[, selected_cell] != 0]\n        snps_for_testing &lt;- snps_for_testing[\n            snps_for_testing %in% names(snp_concensus)\n        ]\n        # cat(length(snps_for_testing), \"\\n\")\n\n        data.frame(\n            cell = selected_cell,\n            score = mean(\n                m[\n                    snps_for_testing,\n                    selected_cell\n                ] == snp_concensus[snps_for_testing]\n            ),\n            num_snps = length(snps_for_testing)\n        )\n    }) |&gt;\n        dplyr::bind_rows() |&gt;\n        dplyr::mutate(batch = stringr::str_remove(cell, \"_[A-Z]{16}$\"))\n}\n\nLoad required packages.\n\nlibrary(tidyverse)\n## ── Attaching core tidyverse packages ─────────────────── tidyverse 2.0.0.9000 ──\n## ✔ dplyr     1.1.2.9000     ✔ readr     2.1.4.9000\n## ✔ forcats   1.0.0.9000     ✔ stringr   1.5.0.9000\n## ✔ ggplot2   3.4.2.9000     ✔ tibble    3.2.1.9005\n## ✔ lubridate 1.9.2.9000     ✔ tidyr     1.3.0.9000\n## ✔ purrr     1.0.2.9000     \n## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n## ✖ dplyr::filter() masks stats::filter()\n## ✖ dplyr::lag()    masks stats::lag()\n## ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\nlibrary(Matrix)\n## \n## Attaching package: 'Matrix'\n## \n## The following objects are masked from 'package:tidyr':\n## \n##     expand, pack, unpack\nlibrary(patchwork)\nlibrary(extrafont)\n## Registering fonts with R\nlibrary(furrr)\n## Loading required package: future\n\n\nsource(\n    file = file.path(\n        SCRIPT_DIR,\n        \"utilities.R\"\n    )\n)\n\n\nget_mode &lt;- function(v, exclude_zero = FALSE) {\n    if (exclude_zero) {\n        v &lt;- v[v != 0]\n    }\n\n    uniqv &lt;- unique(v)\n    uniqv[which.max(tabulate(match(v, uniqv)))]\n}\n\nnormalize &lt;- function(x) {\n    return((x - min(x)) / (max(x) - min(x)))\n}\n\nadd_panel_border &lt;- function() {\n    ggplot2::theme(\n        plot.background = element_rect(\n            color = \"grey70\", fill = NA, linewidth = 0.25\n        )\n    )\n}\n\n\n`%+replace%` &lt;- ggplot2::`%+replace%`\n`%&lt;-%` &lt;- zeallot::`%&lt;-%`\n\nPython env\n\nad &lt;- reticulate::import(module = \"anndata\", convert = TRUE)\nprint(ad$`__version__`)\n\n[1] \"0.8.0\"\n\n\n\nreticulate::py_config()\n\npython:         /Users/jialei/.pyenv/shims/python\nlibpython:      /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/libpython3.10.dylib\npythonhome:     /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3:/Users/jialei/.pyenv/versions/mambaforge-22.9.0-3\nversion:        3.10.9 | packaged by conda-forge | (main, Feb  2 2023, 20:26:08) [Clang 14.0.6 ]\nnumpy:          /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/numpy\nnumpy_version:  1.24.3\nanndata:        /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/anndata\n\nNOTE: Python version was forced by RETICULATE_PYTHON\n\n\nMatrix\nSNP matrix\n\nVARTRIX_VCF &lt;- \"vartrix_LW203\"\nVARTRIX_MATRIX_DIR &lt;- \"no-duplicates_umi_mapq10_consensus\"\n\nmatrix_snp &lt;- purrr::map(c(\n    \"LW186\", \"LW187\", \"LW188\",\n    \"LW189\", \"LW202\", \"LW203\", \"LW204\"\n), \\(x) {\n    read_snp_matrix(\n        matrix_dir = file.path(\n            PROJECT_DIR, \"genotyping\", x,\n            VARTRIX_VCF, VARTRIX_MATRIX_DIR\n        )\n    )\n}) |&gt;\n    purrr::reduce(cbind)\n\nmatrix_snp |&gt; dim()\n\n[1] 48238 39755\n\n\n\ncell_metadata_snp &lt;- Matrix::colSums(matrix_snp) |&gt;\n    tibble::enframe(name = \"cell\", value = \"num_umis\") |&gt;\n    dplyr::mutate(\n        batch = stringr::str_remove(\n            string = cell,\n            pattern = \"_[A-Z]{16}\"\n        )\n    )\ncell_metadata_snp |&gt; head()\n\n# A tibble: 6 × 3\n  cell                   num_umis batch\n  &lt;chr&gt;                     &lt;dbl&gt; &lt;chr&gt;\n1 LW186_AAACCCAAGCCTCACG      348 LW186\n2 LW186_AAACCCAAGTTGTAGA      396 LW186\n3 LW186_AAACCCACAAATCGGG      271 LW186\n4 LW186_AAACCCACAGCCTACG       96 LW186\n5 LW186_AAACCCACAGGAAGTC       77 LW186\n6 LW186_AAACCCACATTCAGGT      198 LW186\n\n\nExpression\n\nadata_files &lt;- purrr::map(c(\"LW119\", \"LW120\", \"LW121\", \"LW122\"), \\(x) {\n    file.path(\n        PROJECT_DIR,\n        \"raw\",\n        x,\n        \"matrix\",\n        \"adata.h5ad\"\n    )\n})\n\npurrr::map_lgl(adata_files, file.exists)\n\n[1] TRUE TRUE TRUE TRUE\n\nBACKED &lt;- NULL\nmatrix_readcount_use &lt;- purrr::map(adata_files, \\(x) {\n    cat(x, \"\\n\")\n    ad$read_h5ad(\n        filename = x, backed = BACKED\n    ) |&gt;\n        extract_matrix_from_adata()\n}) |&gt;\n    purrr::reduce(cbind)\n\n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/LW119/matrix/adata.h5ad \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/LW120/matrix/adata.h5ad \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/LW121/matrix/adata.h5ad \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/LW122/matrix/adata.h5ad \n\nmatrix_readcount_use &lt;- matrix_readcount_use[\n    , sort(colnames(matrix_readcount_use))\n]\nmatrix_readcount_use |&gt; dim()\n\n[1] 33538  8831"
  },
  {
    "objectID": "genotype_stromal_cells.html#score-cells",
    "href": "genotype_stromal_cells.html#score-cells",
    "title": "Genotyping of Immortalized Primary Endometrial Stromal Cells (IESCs)",
    "section": "Score cells",
    "text": "Score cells\nLW203\n\ncells_LW203 &lt;- cell_metadata_snp |&gt;\n    dplyr::filter(batch == \"LW203\") |&gt;\n    dplyr::pull(cell)\n\ncells_LW203 |&gt; length()\n\n[1] 2571\n\n\nIESCs\n\nsnp_group &lt;- split(\n    rownames(matrix_snp),\n    ceiling(seq_along(rownames(matrix_snp)) / 1000)\n)\n\n# get concensus snp table\nsnp_concensus_LW203 &lt;- purrr::map(seq_len(length(snp_group)), \\(x) {\n    apply(\n        matrix_snp[snp_group[[x]], cells_LW203],\n        MARGIN = 1, get_mode, TRUE\n    )\n}) |&gt;\n    unlist()\n\nsnp_concensus_LW203 &lt;- snp_concensus_LW203[!is.na(snp_concensus_LW203)]\n\nScoring\n\nsnp_scores_LW203 &lt;- score_snps(\n    m = matrix_snp,\n    cells = cells_LW203,\n    snp_concensus = snp_concensus_LW203\n)\n\nLW187, LW189\n\ncells_LW187_LW189 &lt;- cell_metadata_snp |&gt;\n    dplyr::filter(batch %in% c(\"LW187\", \"LW189\")) |&gt;\n    dplyr::pull(cell) |&gt;\n    sort()\n\nScoring\n\nsnp_scores_LW187_LW189 &lt;- score_snps(\n    m = matrix_snp,\n    cells = cells_LW187_LW189,\n    snp_concensus = snp_concensus_LW203\n)\n\nLW202, LW204\n\ncells_LW202_LW204 &lt;- cell_metadata_snp |&gt;\n    dplyr::filter(batch %in% c(\"LW202\", \"LW204\")) |&gt;\n    dplyr::pull(cell) |&gt;\n    sort()\n\nScoring\n\nsnp_scores_LW202_LW204 &lt;- score_snps(\n    m = matrix_snp,\n    cells = cells_LW202_LW204,\n    snp_concensus = snp_concensus_LW203\n)\n\nLW186, LW188\n\ncells_LW186_LW188 &lt;- cell_metadata_snp |&gt;\n    dplyr::filter(batch %in% c(\"LW186\", \"LW188\")) |&gt;\n    dplyr::pull(cell) |&gt;\n    sort()\n\nScoring\n\nsnp_scores_LW186_LW188 &lt;- score_snps(\n    m = matrix_snp,\n    cells = cells_LW186_LW188,\n    snp_concensus = snp_concensus_LW203\n)\n\n\nfile_name &lt;- \"snp_scores_LW186_LW188.csv\"\n# file_name &lt;- file.path(OUTPUT_DIR, file_name)\ncat(file_name, \"\\n\")\n\nsnp_scores_LW186_LW188.csv \n\nif (!file.exists(file_name)) {\n    vroom::vroom_write(\n        x = snp_scores_LW186_LW188,\n        file = file_name,\n        delim = \",\"\n    )\n}"
  },
  {
    "objectID": "genotype_stromal_cells.html#calc-cutoff",
    "href": "genotype_stromal_cells.html#calc-cutoff",
    "title": "Genotyping of Immortalized Primary Endometrial Stromal Cells (IESCs)",
    "section": "Calc cutoff",
    "text": "Calc cutoff\n\nMINIMAL_SNPS &lt;- 20\nBINWIDTH &lt;- 0.0005\n\ncutoff &lt;- system(\n    glue::glue(\n        file.path(\n            PROJECT_DIR, \"genotyping\", \"call_gmm.py\"\n        ),\n        \" \",\n        file.path(\n            # OUTPUT_DIR,\n            \"snp_scores_LW186_LW188.csv\"\n        )\n    ),\n    intern = TRUE\n) |&gt;\n    stringr::str_remove(\n        pattern = \"\\\\[\"\n    ) |&gt;\n    stringr::str_remove(\n        pattern = \"\\\\]\"\n    ) |&gt;\n    stringr::str_split(\n        pattern = \" \"\n    ) |&gt;\n    unlist() |&gt;\n    as.numeric() |&gt;\n    rev()\n\nsnp_score_cutoff &lt;- cutoff[4]\nsnp_score_cutoff\n\n[1] 0.8289474"
  },
  {
    "objectID": "genotype_stromal_cells.html#visualize",
    "href": "genotype_stromal_cells.html#visualize",
    "title": "Genotyping of Immortalized Primary Endometrial Stromal Cells (IESCs)",
    "section": "Visualize",
    "text": "Visualize\n\ncolor_palette_assay &lt;- c(\n    \"Blastocyst (fibronectin)\" = \"#F28E2B\",\n    \"Blastocyst (stromal cells)\" = \"#4E79A7\",\n    \"Blastoid (fibronectin)\" = \"#E15759\",\n    \"Blastoid (stromal cells)\" = \"#76B7B2\",\n    \"Stromal cells\" = \"#59A14F\"\n)\n\n\nann_text &lt;- data.frame(\n    num_cells = snp_scores_LW203 |&gt;\n        dplyr::filter(\n            num_snps &gt;= MINIMAL_SNPS,\n            batch == \"LW203\",\n            score &lt;= snp_score_cutoff\n        ) |&gt;\n        nrow(),\n    batch = \"LW203\"\n)\n\n\np_histogram_snp_scores &lt;- list(\n    snp_scores_LW203,\n    snp_scores_LW187_LW189,\n    snp_scores_LW186_LW188,\n    snp_scores_LW202_LW204\n) |&gt;\n    dplyr::bind_rows() |&gt;\n    dplyr::mutate(\n        batch_annotated = dplyr::case_when(\n            batch %in% c(\"LW187\", \"LW189\") ~ \"Blastocyst (fibronectin)\",\n            batch %in% c(\"LW186\", \"LW188\") ~ \"Blastocyst (IESCs)\",\n            batch %in% c(\"LW202\") ~ \"Blastoid (fibronectin)\",\n            batch %in% c(\"LW203\") ~ \"IESCs\",\n            batch %in% c(\"LW204\") ~ \"Blastoid (IESCs)\"\n        ),\n        label = dplyr::case_when(\n            batch %in% c(\"LW187\", \"LW189\") ~ paste(\n                batch_annotated, \"LW187, LW189\",\n                sep = \"\\n\"\n            ),\n            batch %in% c(\"LW186\", \"LW188\") ~ paste(\n                batch_annotated, \"LW186, LW188\",\n                sep = \"\\n\"\n            ),\n            batch %in% c(\"LW202\") ~ paste(\n                batch_annotated, \"LW202\",\n                sep = \"\\n\"\n            ),\n            batch %in% c(\"LW203\") ~ paste(\n                batch_annotated, \"LW203 \",\n                sep = \"\\n\"\n            ),\n            batch %in% c(\"LW204\") ~ paste(\n                batch_annotated, \"LW204\",\n                sep = \"\\n\"\n            ),\n        )\n    ) |&gt;\n    dplyr::filter(\n        num_snps &gt;= MINIMAL_SNPS,\n    ) |&gt;\n    dplyr::mutate(\n        color = dplyr::case_when(\n            score &gt;= snp_score_cutoff ~ \"#F8B195\",\n            TRUE ~ \"grey35\"\n        )\n    ) |&gt;\n    {\n        \\(x) {\n            x |&gt;\n                ggplot2::ggplot(\n                    ggplot2::aes(\n                        x = score, fill = color\n                    )\n                ) +\n                ggplot2::geom_histogram(\n                    binwidth = 0.02,\n                    boundary = 0,\n                    closed = \"left\"\n                ) +\n                ggplot2::geom_vline(\n                    xintercept = snp_score_cutoff,\n                    color = \"salmon\",\n                    linewidth = 0.25\n                ) +\n                ggplot2::scale_x_continuous(\n                    name = \"SNP score\"\n                ) +\n                ggplot2::scale_y_continuous(\n                    name = \"Number of cells\"\n                ) +\n                ggplot2::scale_fill_identity() +\n                ggplot2::facet_wrap(\n                    ggplot2::vars(label),\n                    scales = \"free_y\",\n                    nrow = 1\n                ) +\n                ggplot2::theme_grey(\n                    base_size = 6, base_family = \"Arial\"\n                ) +\n                ggplot2::theme(\n                    legend.background = ggplot2::element_blank(),\n                    legend.key = ggplot2::element_blank(),\n                    #\n                    # panel.background = ggplot2::element_blank(),\n                    #\n                    plot.background = ggplot2::element_blank(),\n                    strip.text = ggplot2::element_text(\n                        family = \"Arial\", size = 6\n                    )\n                )\n        }\n    }()\n\n\ng &lt;- ggplot2::ggplot_gtable(\n    ggplot2::ggplot_build(p_histogram_snp_scores)\n)\nstript &lt;- which(grepl(\"strip-t\", g$layout$name))\n\n\nk &lt;- 1\nfor (i in stript) {\n    j &lt;- which(grepl(\"rect\", g$grobs[[i]]$grobs[[1]]$childrenOrder))\n    g$grobs[[i]]$grobs[[1]]$children[[j]]$gp$fill &lt;- setNames(\n        object = color_palette_assay,\n        nm = seq_len(length(color_palette_assay))\n    )[k]\n    k &lt;- k + 1\n}\ngrid::grid.draw(g)"
  },
  {
    "objectID": "genotype_stromal_cells.html#r-session-info",
    "href": "genotype_stromal_cells.html#r-session-info",
    "title": "Genotyping of Immortalized Primary Endometrial Stromal Cells (IESCs)",
    "section": "R session info",
    "text": "R session info\n\ndevtools::session_info()\n\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.1 (2023-06-16)\n os       macOS Ventura 13.5\n system   aarch64, darwin22.4.0\n ui       unknown\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       America/Chicago\n date     2023-08-12\n pandoc   2.19.2 @ /Users/jialei/.pyenv/shims/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package     * version     date (UTC) lib source\n cachem        1.0.8       2023-05-01 [1] CRAN (R 4.3.0)\n callr         3.7.3       2022-11-02 [1] CRAN (R 4.3.0)\n cli           3.6.1       2023-03-23 [1] CRAN (R 4.3.0)\n codetools     0.2-19      2023-02-01 [2] CRAN (R 4.3.1)\n colorspace    2.1-0       2023-01-23 [1] CRAN (R 4.3.0)\n crayon        1.5.2       2022-09-29 [1] CRAN (R 4.3.0)\n devtools      2.4.5.9000  2023-08-11 [1] Github (r-lib/devtools@163c3f2)\n digest        0.6.33      2023-07-07 [1] CRAN (R 4.3.1)\n dplyr       * 1.1.2.9000  2023-07-19 [1] Github (tidyverse/dplyr@c963d4d)\n ellipsis      0.3.2       2021-04-29 [1] CRAN (R 4.3.0)\n evaluate      0.21        2023-05-05 [1] CRAN (R 4.3.0)\n extrafont   * 0.19        2023-01-18 [1] CRAN (R 4.3.0)\n extrafontdb   1.0         2012-06-11 [1] CRAN (R 4.3.0)\n fansi         1.0.4       2023-01-22 [1] CRAN (R 4.3.0)\n farver        2.1.1       2022-07-06 [1] CRAN (R 4.3.0)\n fastmap       1.1.1       2023-02-24 [1] CRAN (R 4.3.0)\n forcats     * 1.0.0.9000  2023-04-23 [1] Github (tidyverse/forcats@4a8525a)\n fs            1.6.3       2023-07-20 [1] CRAN (R 4.3.1)\n furrr       * 0.3.1       2022-08-15 [1] CRAN (R 4.3.1)\n future      * 1.33.0      2023-07-01 [1] CRAN (R 4.3.1)\n generics      0.1.3       2022-07-05 [1] CRAN (R 4.3.0)\n ggplot2     * 3.4.2.9000  2023-08-11 [1] Github (tidyverse/ggplot2@2cd0e96)\n globals       0.16.2      2022-11-21 [1] CRAN (R 4.3.0)\n glue          1.6.2.9000  2023-04-23 [1] Github (tidyverse/glue@cbac82a)\n gtable        0.3.3.9000  2023-04-23 [1] Github (r-lib/gtable@c56fd4f)\n hms           1.1.3       2023-03-21 [1] CRAN (R 4.3.0)\n htmltools     0.5.6       2023-08-10 [1] CRAN (R 4.3.1)\n htmlwidgets   1.6.2       2023-03-17 [1] CRAN (R 4.3.0)\n jsonlite      1.8.7       2023-06-29 [1] CRAN (R 4.3.1)\n knitr         1.43        2023-05-25 [1] CRAN (R 4.3.0)\n labeling      0.4.2       2020-10-20 [1] CRAN (R 4.3.0)\n lattice       0.21-8      2023-04-05 [2] CRAN (R 4.3.1)\n lifecycle     1.0.3       2022-10-07 [1] CRAN (R 4.3.0)\n listenv       0.9.0       2022-12-16 [1] CRAN (R 4.3.0)\n lubridate   * 1.9.2.9000  2023-07-22 [1] Github (tidyverse/lubridate@cae67ea)\n magrittr      2.0.3       2022-03-30 [1] CRAN (R 4.3.0)\n Matrix      * 1.6-0       2023-07-08 [2] CRAN (R 4.3.1)\n memoise       2.0.1       2021-11-26 [1] CRAN (R 4.3.0)\n munsell       0.5.0       2018-06-12 [1] CRAN (R 4.3.0)\n parallelly    1.36.0      2023-05-26 [1] CRAN (R 4.3.0)\n patchwork   * 1.1.2.9000  2023-08-11 [1] Github (thomasp85/patchwork@bd57553)\n pillar        1.9.0       2023-03-22 [1] CRAN (R 4.3.0)\n pkgbuild      1.4.2       2023-06-26 [1] CRAN (R 4.3.1)\n pkgconfig     2.0.3       2019-09-22 [1] CRAN (R 4.3.0)\n pkgload       1.3.2.9000  2023-07-05 [1] Github (r-lib/pkgload@3cf9896)\n png           0.1-8       2022-11-29 [1] CRAN (R 4.3.0)\n prettyunits   1.1.1.9000  2023-04-23 [1] Github (r-lib/prettyunits@8706d89)\n processx      3.8.2       2023-06-30 [1] CRAN (R 4.3.1)\n ps            1.7.5       2023-04-18 [1] CRAN (R 4.3.0)\n purrr       * 1.0.2.9000  2023-08-11 [1] Github (tidyverse/purrr@ac4f5a9)\n R.cache       0.16.0      2022-07-21 [1] CRAN (R 4.3.0)\n R.methodsS3   1.8.2       2022-06-13 [1] CRAN (R 4.3.0)\n R.oo          1.25.0      2022-06-12 [1] CRAN (R 4.3.0)\n R.utils       2.12.2      2022-11-11 [1] CRAN (R 4.3.0)\n R6            2.5.1.9000  2023-04-23 [1] Github (r-lib/R6@e97cca7)\n Rcpp          1.0.11      2023-07-06 [1] CRAN (R 4.3.1)\n readr       * 2.1.4.9000  2023-08-03 [1] Github (tidyverse/readr@80e4dc1)\n remotes       2.4.2.9000  2023-06-09 [1] Github (r-lib/remotes@8875171)\n reticulate    1.31        2023-08-10 [1] CRAN (R 4.3.1)\n rlang         1.1.1.9000  2023-06-09 [1] Github (r-lib/rlang@c55f602)\n rmarkdown     2.23.4      2023-07-27 [1] Github (rstudio/rmarkdown@054d735)\n rstudioapi    0.15.0.9000 2023-07-19 [1] Github (rstudio/rstudioapi@feceaef)\n Rttf2pt1      1.3.12      2023-01-22 [1] CRAN (R 4.3.0)\n scales        1.2.1       2022-08-20 [1] CRAN (R 4.3.0)\n sessioninfo   1.2.2       2021-12-06 [1] CRAN (R 4.3.0)\n stringi       1.7.12      2023-01-11 [1] CRAN (R 4.3.0)\n stringr     * 1.5.0.9000  2023-08-11 [1] Github (tidyverse/stringr@08ff36f)\n styler      * 1.10.1      2023-07-17 [1] Github (r-lib/styler@aca7223)\n tibble      * 3.2.1.9005  2023-05-28 [1] Github (tidyverse/tibble@4de5c15)\n tidyr       * 1.3.0.9000  2023-04-23 [1] Github (tidyverse/tidyr@0764e65)\n tidyselect    1.2.0       2022-10-10 [1] CRAN (R 4.3.0)\n tidyverse   * 2.0.0.9000  2023-04-23 [1] Github (tidyverse/tidyverse@8ec2e1f)\n timechange    0.2.0       2023-01-11 [1] CRAN (R 4.3.0)\n tzdb          0.4.0       2023-05-12 [1] CRAN (R 4.3.0)\n usethis       2.2.2.9000  2023-07-11 [1] Github (r-lib/usethis@467ff57)\n utf8          1.2.3       2023-01-31 [1] CRAN (R 4.3.0)\n vctrs         0.6.3       2023-06-14 [1] CRAN (R 4.3.0)\n withr         2.5.0       2022-03-03 [1] CRAN (R 4.3.0)\n xfun          0.40        2023-08-09 [1] CRAN (R 4.3.1)\n yaml          2.3.7       2023-01-23 [1] CRAN (R 4.3.0)\n zeallot       0.1.0.9000  2023-06-11 [1] Github (nteetor/zeallot@55167bf)\n\n [1] /opt/homebrew/lib/R/4.3/site-library\n [2] /opt/homebrew/Cellar/r/4.3.1/lib/R/library\n\n─ Python configuration ───────────────────────────────────────────────────────\n python:         /Users/jialei/.pyenv/shims/python\n libpython:      /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/libpython3.10.dylib\n pythonhome:     /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3:/Users/jialei/.pyenv/versions/mambaforge-22.9.0-3\n version:        3.10.9 | packaged by conda-forge | (main, Feb  2 2023, 20:26:08) [Clang 14.0.6 ]\n numpy:          /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/numpy\n numpy_version:  1.24.3\n anndata:        /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/anndata\n \n NOTE: Python version was forced by RETICULATE_PYTHON\n\n──────────────────────────────────────────────────────────────────────────────"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Blastoid·verse",
    "section": "",
    "text": "from datetime import datetime\ndatetime.today().strftime(\"%Y-%m-%d %H:%M:%S\")\n\n'2023-08-12 10:59:02'\n\n\n Location\n\n\n\n\n\n\n\n\n Citation\n\nLeqian Yu#, Toshihiko Ezashi#, Yulei Wei#, Jialei Duan#, Deirdre Logsdon, Linfeng Zhan, Asrafun Nahar, Carlos A. Pinzon Arteaga, Lizhong Liu, Caitlen Stobbe, Mandy Katz-Jaffe, William B Schoolcraft, Lei Wang, Tao Tan, Gary C. Hon*, Ye Yuan*, Jun Wu*. (2022). Large scale production of human blastoids amenable to modeling blastocyst development and maternal-fetal crosstalk. bioRxiv, 2022.09.14.507946. DOI:10.1101/2022.09.14.507946\n\n\n Datasets\n\nIn this manuscript, several human transcriptome data sets generated by different technologies were included. To minimize platform and processing differences, raw fastq files of public datasets were downloaded and re-processed.\n\nYu, L., Wei, Y., Duan, J., Schmitz, D.A., Sakurai, M., Wang, L., Wang, K., Zhao, S., Hon, G.C., and Wu, J. (2021). Blastocyst-like structures generated from human pluripotent stem cells. Nature 591, 620–626.\nPetropoulos, S., Edsgärd, D., Reinius, B., Deng, Q., Panula, S.P., Codeluppi, S., Plaza Reyes, A., Linnarsson, S., Sandberg, R., and Lanner, F. (2016). Single-cell RNA-Seq reveals lineage and X chromosome dynamics in human preimplantation embryos. Cell 165, 1012–1026.\nZheng, Y., Xue, X., Shao, Y., Wang, S., Esfahani, S.N., Li, Z., Muncie, J.M., Lakins, J.N., Weaver, V.M., Gumucio, D.L., et al. (2019). Controlled modelling of human epiblast and amnion development using stem cells. Nature 573, 421–425.\nXiang, L., Yin, Y., Zheng, Y., Ma, Y., Li, Y., Zhao, Z., Guo, J., Ai, Z., Niu, Y., Duan, K., et al. (2020). A developmental landscape of 3D-cultured human pre-gastrulation embryos. Nature 577, 537–542.\nYanagida, A., Spindlow, D., Nichols, J., Dattani, A., Smith, A., and Guo, G. (2021). Naive stem cell blastocyst model captures human embryo lineage segregation. Cell Stem Cell 28, 1016–1022.e4.\nTyser, R.C.V., Mahammadov, E., Nakanoh, S., Vallier, L., Scialdone, A., and Srinivas, S. (2021). Single-cell transcriptomic characterization of a gastrulating human embryo. Nature 600, 285–289.\n\n\nCodeembedding |&gt;\n    dplyr::mutate(num_umis = Matrix::colSums(matrix_readcount_use[, cell])) |&gt;\n    dplyr::group_by(study, batch) |&gt;\n    dplyr::summarise(\n        num_cells = dplyr::n(),\n        median_umis = median(num_umis)\n    ) |&gt;\n    gt::gt(groupname_col = \"study\") |&gt;\n    gt::row_group_order(\n        groups = c(\n            \"This study\",\n            \"Yu et al. 2021\",\n            \"Petropoulos et al. 2016\",\n            \"Zheng et al. 2019\",\n            \"Xiang et al. 2020\",\n            \"Yanagida et al. 2021\",\n            \"Tyser et al. 2021\"\n        )\n    ) |&gt;\n    gt::data_color(\n        columns = c(median_umis),\n        fn = scales::col_numeric(\n            palette = c(\n                \"green\", \"orange\", \"red\"\n            ),\n            domain = NULL\n        )\n    ) |&gt;\n    gt::fmt_number(\n        columns = c(median_umis),\n        sep_mark = \",\",\n        decimals = 1,\n        use_seps = TRUE,\n        suffixing = FALSE\n    ) |&gt;\n    gt::fmt_number(\n        columns = c(num_cells),\n        sep_mark = \",\",\n        decimals = 0,\n        use_seps = TRUE,\n        suffixing = FALSE\n    ) |&gt;\n    gt::grand_summary_rows(\n        columns = c(num_cells),\n        fns = list(\n            Sum = ~ sum(.)\n        ),\n        fmt = ~ gt::fmt_number(., decimals = 0, use_seps = TRUE)\n    ) |&gt;\n    gt::tab_header(\n        title = gt::md(\"**Dataset Summary**\"),\n        subtitle = gt::md(\"Human single-cell datasets used in this study\")\n    ) |&gt;\n    gt::cols_label(\n        \"batch\" = gt::md(\"**Batch**\"),\n        \"num_cells\" = gt::md(\"**Num of cells**\"),\n        \"median_umis\" = gt::md(\"**Median UMIs**\")\n    )\n\n\n\n\n\n\nDataset Summary\n    \n\nHuman single-cell datasets used in this study\n    \n\n\n      Batch\n      Num of cells\n      Median UMIs\n    \n\n\n\nThis study\n    \n\n\nLW119\n2,236\n2,956.5\n\n\n\nLW120\n435\n17,392.0\n\n\n\nLW121\n5,130\n12,536.0\n\n\n\nLW122\n287\n100,092.0\n\n\n\nLW186\n10,977\n3,026.0\n\n\n\nLW187\n3,690\n4,980.0\n\n\n\nLW188\n6,838\n3,738.0\n\n\n\nLW189\n3,250\n5,344.0\n\n\n\nLW202\n4,833\n3,834.0\n\n\n\nLW203\n2,571\n5,254.0\n\n\n\nLW204\n7,596\n2,405.0\n\n\nYu et al. 2021\n    \n\n\nLW60\n4,497\n14,421.0\n\n\n\nLW61\n5,156\n7,625.0\n\n\nPetropoulos et al. 2016\n    \n\n\nPRJEB11202\n1,529\n1,551,093.0\n\n\nZheng et al. 2019\n    \n\n\nGSM3956280\n5,454\n23,322.0\n\n\n\nGSM3956281\n4,512\n27,887.0\n\n\nXiang et al. 2020\n    \n\n\nPRJNA562548\n555\n10,165,004.0\n\n\nYanagida et al. 2021\n    \n\n\nPRJNA720968\n495\n7,690,661.0\n\n\nTyser et al. 2021\n    \n\n\nPRJEB40781\n1,195\n899,241.0\n\n\nSum\n—\n71,236\n—\n\n\n\n\n\n\n\n\n\nStyling  1  files:\n index.qmd ✔ \n────────────────────────────────────────\nStatus  Count   Legend \n✔   1   File unchanged.\nℹ   0   File changed.\n✖   0   Styling threw an error.\n────────────────────────────────────────"
  },
  {
    "objectID": "genotype_blastocysts.html",
    "href": "genotype_blastocysts.html",
    "title": "Genotyping of Human Blastocysts",
    "section": "",
    "text": "Sys.time()\n\n[1] \"2023-08-12 10:59:43 CDT\"\nSys.timezone()\n\n[1] \"America/Chicago\""
  },
  {
    "objectID": "genotype_blastocysts.html#preparation",
    "href": "genotype_blastocysts.html#preparation",
    "title": "Genotyping of Human Blastocysts",
    "section": "Preparation",
    "text": "Preparation\n\nPROJECT_DIR &lt;- \"/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation\"\n\nFunctions\nLoad required packages.\n\nlibrary(tidyverse)\n## ── Attaching core tidyverse packages ─────────────────── tidyverse 2.0.0.9000 ──\n## ✔ dplyr     1.1.2.9000     ✔ readr     2.1.4.9000\n## ✔ forcats   1.0.0.9000     ✔ stringr   1.5.0.9000\n## ✔ ggplot2   3.4.2.9000     ✔ tibble    3.2.1.9005\n## ✔ lubridate 1.9.2.9000     ✔ tidyr     1.3.0.9000\n## ✔ purrr     1.0.2.9000     \n## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n## ✖ dplyr::filter() masks stats::filter()\n## ✖ dplyr::lag()    masks stats::lag()\n## ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\nlibrary(Matrix)\n## \n## Attaching package: 'Matrix'\n## \n## The following objects are masked from 'package:tidyr':\n## \n##     expand, pack, unpack\nlibrary(patchwork)\nlibrary(extrafont)\n## Registering fonts with R\nlibrary(furrr)\n## Loading required package: future\n\n\nsource(\n    file = file.path(\n        SCRIPT_DIR,\n        \"utilities.R\"\n    )\n)\n\n\nget_mode &lt;- function(v, exclude_zero = FALSE) {\n    if (exclude_zero) {\n        v &lt;- v[v != 0]\n    }\n\n    uniqv &lt;- unique(v)\n    uniqv[which.max(tabulate(match(v, uniqv)))]\n}\n\nnormalize &lt;- function(x) {\n    return((x - min(x)) / (max(x) - min(x)))\n}\n\nadd_panel_border &lt;- function() {\n    ggplot2::theme(\n        plot.background = element_rect(\n            color = \"grey70\", fill = NA, linewidth = 0.25\n        )\n    )\n}\n\nscore_snps &lt;- function(m, cells, snp_concensus) {\n    furrr::future_map(c(cells), \\(x) {\n        selected_cell &lt;- x\n\n        snps_for_testing &lt;- rownames(\n            m\n        )[m[, selected_cell] != 0]\n        snps_for_testing &lt;- snps_for_testing[\n            snps_for_testing %in% names(snp_concensus)\n        ]\n        # cat(length(snps_for_testing), \"\\n\")\n\n        data.frame(\n            cell = selected_cell,\n            score = mean(\n                m[\n                    snps_for_testing,\n                    selected_cell\n                ] == snp_concensus[snps_for_testing]\n            ),\n            num_snps = length(snps_for_testing)\n        )\n    }) |&gt;\n        dplyr::bind_rows() |&gt;\n        dplyr::mutate(batch = stringr::str_remove(cell, \"_[A-Z]{16}$\"))\n}\n\n\n`%+replace%` &lt;- ggplot2::`%+replace%`\n`%&lt;-%` &lt;- zeallot::`%&lt;-%`\n\nPython env\n\nad &lt;- reticulate::import(module = \"anndata\", convert = TRUE)\nprint(ad$`__version__`)\n\n[1] \"0.8.0\"\n\n\n\nreticulate::py_config()\n\npython:         /Users/jialei/.pyenv/shims/python\nlibpython:      /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/libpython3.10.dylib\npythonhome:     /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3:/Users/jialei/.pyenv/versions/mambaforge-22.9.0-3\nversion:        3.10.9 | packaged by conda-forge | (main, Feb  2 2023, 20:26:08) [Clang 14.0.6 ]\nnumpy:          /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/numpy\nnumpy_version:  1.24.3\nanndata:        /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/anndata\n\nNOTE: Python version was forced by RETICULATE_PYTHON\n\n\nMatrix\nSNP matrix\n\nVARTRIX_VCF &lt;- \"vartrix_LW121\"\nVARTRIX_MATRIX_DIR &lt;- \"no-duplicates_umi_mapq10_consensus\"\n\nmatrix_snp &lt;- purrr::map(c(\"LW119\", \"LW120\", \"LW121\", \"LW122\"), \\(x) {\n    read_snp_matrix(\n        matrix_dir = file.path(\n            PROJECT_DIR, \"genotyping\", x,\n            VARTRIX_VCF, VARTRIX_MATRIX_DIR\n        )\n    )\n}) |&gt;\n    purrr::reduce(cbind)\n\nmatrix_snp |&gt; dim()\n\n[1] 192277   8088\n\n\n\nVARTRIX_PALETTE &lt;- c(\n    \"vartrix_LW121\" = \"#BCBD22FF\",\n    \"vartrix_1000genomes_AF1e-1\" = \"#17BECFFF\"\n)\n\n\ncell_metadata_snp &lt;- Matrix::colSums(matrix_snp) |&gt;\n    tibble::enframe(name = \"cell\", value = \"num_umis\") |&gt;\n    dplyr::mutate(\n        batch = stringr::str_remove(\n            string = cell,\n            pattern = \"_[A-Z]{16}\"\n        )\n    )\ncell_metadata_snp |&gt; head()\n\n# A tibble: 6 × 3\n  cell                   num_umis batch\n  &lt;chr&gt;                     &lt;dbl&gt; &lt;chr&gt;\n1 LW119_AAACGCTAGGGAGGCA      342 LW119\n2 LW119_AAACGCTCAGCTGGTC      330 LW119\n3 LW119_AAACGCTTCAGTCAGT     1065 LW119\n4 LW119_AAAGAACAGGCTCAAG      988 LW119\n5 LW119_AAAGAACCAGCTGAGA      756 LW119\n6 LW119_AAAGAACCATTAAAGG      877 LW119\n\n\nExpression\n\nadata_files &lt;- purrr::map(c(\"LW119\", \"LW120\", \"LW121\", \"LW122\"), \\(x) {\n    file.path(\n        PROJECT_DIR,\n        \"raw\",\n        x,\n        \"matrix\",\n        \"adata.h5ad\"\n    )\n})\n\npurrr::map_lgl(adata_files, file.exists)\n\n[1] TRUE TRUE TRUE TRUE\n\nBACKED &lt;- NULL\nmatrix_readcount_use &lt;- purrr::map(adata_files, \\(x) {\n    cat(x, \"\\n\")\n    ad$read_h5ad(\n        filename = x, backed = BACKED\n    ) |&gt;\n        extract_matrix_from_adata()\n}) |&gt;\n    purrr::reduce(cbind)\n\n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/LW119/matrix/adata.h5ad \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/LW120/matrix/adata.h5ad \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/LW121/matrix/adata.h5ad \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/raw/LW122/matrix/adata.h5ad \n\nmatrix_readcount_use &lt;- matrix_readcount_use[\n    , sort(colnames(matrix_readcount_use))\n]\nmatrix_readcount_use |&gt; dim()\n\n[1] 33538  8831\n\n\nEmbedding\n\nembedding_blastocyst &lt;- vroom::vroom(\n    file = file.path(\n        PROJECT_DIR, \"clustering\",\n        \"LW119_blastocyst_LW120_LW122/exploring\",\n        \"Scanpy_Harmony\",\n        \"embedding_ncomponents14_seed20210719.csv.gz\"\n    ),\n    show_col_types = FALSE\n)"
  },
  {
    "objectID": "genotype_blastocysts.html#scoring-cells",
    "href": "genotype_blastocysts.html#scoring-cells",
    "title": "Genotyping of Human Blastocysts",
    "section": "Scoring cells",
    "text": "Scoring cells\nLW119, LW121\n\ncells_LW119 &lt;- cell_metadata_snp |&gt;\n    dplyr::filter(batch == \"LW119\") |&gt;\n    dplyr::pull(cell)\n\ncells_LW121 &lt;- cell_metadata_snp |&gt;\n    dplyr::filter(batch == \"LW121\") |&gt;\n    dplyr::pull(cell)\n\nBlastoid concensus\n\nsnp_group &lt;- split(\n    rownames(matrix_snp),\n    ceiling(seq_along(rownames(matrix_snp)) / 1000)\n)\n\nsnp_concensus_LW121 &lt;- purrr::map(seq_len(length(snp_group)), \\(x) {\n    apply(\n        matrix_snp[snp_group[[x]], cells_LW121],\n        MARGIN = 1, get_mode, TRUE\n    )\n}) |&gt;\n    unlist()\nsnp_concensus_LW121 &lt;- snp_concensus_LW121[!is.na(snp_concensus_LW121)]\n\ntable(snp_concensus_LW121) |&gt;\n    enframe(name = \"type\", value = \"num_cells\")\n## # A tibble: 3 × 2\n##   type  num_cells  \n##   &lt;chr&gt; &lt;table[1d]&gt;\n## 1 1        587     \n## 2 2     191193     \n## 3 3          8\n\nScoring\n\nsnp_scores_LW119_LW121 &lt;- score_snps(\n    m = matrix_snp,\n    cells = c(cells_LW119, cells_LW121),\n    snp_concensus = snp_concensus_LW121\n)\n\n\nfile_name &lt;- \"snp_scores_LW119_LW121.csv\"\ncat(file_name, \"\\n\")\n\nsnp_scores_LW119_LW121.csv \n\nif (!file.exists(file_name)) {\n    vroom::vroom_write(\n        x = snp_scores_LW119_LW121,\n        file = file_name,\n        delim = \",\"\n    )\n}\n\n\nhead(snp_scores_LW119_LW121)\n\n                    cell     score num_snps batch\n1 LW119_AAACGCTAGGGAGGCA 0.9378531      177 LW119\n2 LW119_AAACGCTCAGCTGGTC 0.9818182      165 LW119\n3 LW119_AAACGCTTCAGTCAGT 0.9794776      536 LW119\n4 LW119_AAAGAACAGGCTCAAG 0.9798387      496 LW119\n5 LW119_AAAGAACCAGCTGAGA 0.9634465      383 LW119\n6 LW119_AAAGAACCATTAAAGG 0.9707207      444 LW119\n\n\nLW120, LW122\n\ncells_LW120_LW122 &lt;- cell_metadata_snp |&gt;\n    dplyr::filter(batch %in% c(\"LW120\", \"LW122\")) |&gt;\n    dplyr::pull(cell) |&gt;\n    sort()\n\nScoring\n\nsnp_scores_LW120_LW122 &lt;- score_snps(\n    m = matrix_snp,\n    cells = cells_LW120_LW122,\n    snp_concensus = snp_concensus_LW121\n)\n\n\nhead(snp_scores_LW120_LW122)\n\n                    cell     score num_snps batch\n1 LW120_AAACGCTAGGTCATAA 0.7445443     1558 LW120\n2 LW120_AAACGCTCAACAACAA 0.7852349      149 LW120\n3 LW120_AAAGGATAGTATGAAC 0.7414661     1787 LW120\n4 LW120_AACAACCGTGTATTGC 0.7427184      206 LW120\n5 LW120_AACAGGGGTTTGTTGG 0.7166338     1521 LW120\n6 LW120_AACAGGGTCAGACTGT 0.6964038     6479 LW120\n\n\nCut-off determination\n\nMINIMAL_SNPS &lt;- 20\nBINWIDTH &lt;- 0.01\n\n\ncutoff &lt;- system(\n    glue::glue(\n        \"{file.path(PROJECT_DIR, \\\"genotyping\\\")}/call_gmm_2022-06-05.py \",\n        file.path(\n            \"snp_scores_LW119_LW121.csv\"\n        )\n    ),\n    intern = TRUE\n) |&gt;\n    stringr::str_remove(\n        pattern = \"\\\\[\"\n    ) |&gt;\n    stringr::str_remove(\n        pattern = \"\\\\]\"\n    ) |&gt;\n    stringr::str_split(\n        pattern = \" \"\n    ) |&gt;\n    unlist() |&gt;\n    as.numeric() |&gt;\n    rev()\n\nsnp_score_cutoff &lt;- cutoff[4]\nsnp_score_cutoff\n\n[1] 0.9236111\n\n\nVisualization\n\nif (FALSE) {\n    cells_LW119_blastocyst &lt;- snp_scores |&gt;\n        dplyr::filter(\n            batch == \"LW119\",\n            num_snps &gt;= 20,\n            score &lt;= snp_score_cutoff\n        ) |&gt;\n        dplyr::pull(cell)\n\n    num_cells_LW119_blastocyst &lt;- length(cells_LW119_blastocyst)\n}\n\n\nhist_out &lt;- hist(\n    snp_scores_LW119_LW121 |&gt;\n        dplyr::filter(\n            num_snps &gt;= MINIMAL_SNPS,\n            batch == \"LW119\",\n        ) |&gt;\n        dplyr::pull(score),\n    breaks = seq(0, 1, BINWIDTH),\n    plot = FALSE\n)\n\nann_text &lt;- data.frame(\n    num_cells = snp_scores_LW119_LW121 |&gt;\n        dplyr::filter(\n            num_snps &gt;= MINIMAL_SNPS,\n            batch == \"LW119\",\n            score &lt;= snp_score_cutoff\n        ) |&gt;\n        nrow(),\n    batch = \"LW119\"\n)\n\n\nlist(snp_scores_LW119_LW121, snp_scores_LW120_LW122) |&gt;\n    dplyr::bind_rows() |&gt;\n    dplyr::mutate(\n        batch = dplyr::case_when(\n            batch %in% c(\"LW120\", \"LW122\") ~ \"LW120 + LW122\",\n            TRUE ~ batch\n        )\n    ) |&gt;\n    dplyr::filter(\n        num_snps &gt;= MINIMAL_SNPS,\n    ) |&gt;\n    dplyr::mutate(\n        color = dplyr::case_when(\n            (\n                score &lt;= snp_score_cutoff & batch %in% c(\"LW119\")\n            ) ~ VARTRIX_PALETTE[VARTRIX_VCF],\n            TRUE ~ \"grey35\"\n        )\n    ) |&gt;\n    ggplot2::ggplot(\n        ggplot2::aes(\n            x = score, fill = color\n        )\n    ) +\n    ggplot2::geom_histogram(\n        binwidth = BINWIDTH,\n        boundary = 0,\n        closed = \"left\"\n    ) +\n    ggplot2::scale_x_continuous(name = \"SNP score\") +\n    ggplot2::scale_y_continuous(name = \"Number of cells\") +\n    ggplot2::scale_fill_identity() +\n    ggplot2::facet_wrap(\n        ggplot2::vars(batch),\n        scales = \"free_y\",\n        labeller = ggplot2::as_labeller(\n            c(\n                \"LW119\" = \"Blastocyst + Blastoid (LW119)\",\n                \"LW120 + LW122\" = \"Blastocyst (LW120, LW122)\",\n                \"LW121\" = \"Blastoid (LW121)\"\n            )\n        )\n    ) +\n    ggplot2::theme_grey(base_size = 6, base_family = \"Arial\") +\n    ggplot2::theme(\n        legend.background = ggplot2::element_blank(),\n        legend.key = ggplot2::element_blank(),\n        #\n        # panel.background = ggplot2::element_blank(),\n        #\n        plot.background = ggplot2::element_blank(),\n        strip.text = ggplot2::element_text(\n            family = \"Arial\", size = 6\n        )\n    ) +\n    ggplot2::geom_vline(\n        xintercept = snp_score_cutoff,\n        color = \"salmon\",\n        linewidth = 0.25\n    ) +\n    ggplot2::geom_text(\n        data = ann_text |&gt; dplyr::mutate(color = \"black\"),\n        ggplot2::aes(\n            x = snp_score_cutoff,\n            y = quantile(1:max(hist_out$counts), 1),\n        ),\n        label = glue::glue(\"Num of cells: {ann_text$num_cells}  \"),\n        size = 6 / ggplot2::.pt,\n        family = \"Arial\",\n        hjust = 1,\n        vjust = 1\n    ) +\n    ggplot2::geom_vline(\n        xintercept = snp_score_cutoff,\n        color = \"salmon\",\n        linewidth = 0.25\n    )"
  },
  {
    "objectID": "genotype_blastocysts.html#genotyping",
    "href": "genotype_blastocysts.html#genotyping",
    "title": "Genotyping of Human Blastocysts",
    "section": "Genotyping",
    "text": "Genotyping\nClusters\n\nSOUPORCELL_RESULT_DIR &lt;- \"result_vartrix_LW121\"\n\nsouporcell_clusters &lt;- fs::dir_ls(\n    file.path(\n        PROJECT_DIR, \"genotyping\", \"souporcell\",\n        SOUPORCELL_RESULT_DIR, \"raw\"\n    ),\n    regexp = \"troublet_.+tsv$\"\n) |&gt;\n    purrr::map(\\(x) {\n        cat(x, \"\\n\")\n        data.frame(\n            num_clusters = x |&gt;\n                basename() |&gt;\n                stringr::str_remove(\n                    pattern = \"clusters_souporcell_troublet_\"\n                ) |&gt;\n                stringr::str_remove(\n                    pattern = \".tsv\"\n                ),\n            log_prob_singleton = vroom::vroom(\n                file = x, show_col_types = FALSE\n            ) |&gt;\n                dplyr::select(log_prob_singleton) |&gt;\n                sum()\n        )\n    }) |&gt;\n    dplyr::bind_rows() |&gt;\n    dplyr::mutate(\n        num_clusters = as.integer(num_clusters)\n    )\n\n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/genotyping/souporcell/result_vartrix_LW121/raw/clusters_souporcell_troublet_10.tsv \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/genotyping/souporcell/result_vartrix_LW121/raw/clusters_souporcell_troublet_11.tsv \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/genotyping/souporcell/result_vartrix_LW121/raw/clusters_souporcell_troublet_12.tsv \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/genotyping/souporcell/result_vartrix_LW121/raw/clusters_souporcell_troublet_13.tsv \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/genotyping/souporcell/result_vartrix_LW121/raw/clusters_souporcell_troublet_14.tsv \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/genotyping/souporcell/result_vartrix_LW121/raw/clusters_souporcell_troublet_15.tsv \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/genotyping/souporcell/result_vartrix_LW121/raw/clusters_souporcell_troublet_16.tsv \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/genotyping/souporcell/result_vartrix_LW121/raw/clusters_souporcell_troublet_17.tsv \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/genotyping/souporcell/result_vartrix_LW121/raw/clusters_souporcell_troublet_18.tsv \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/genotyping/souporcell/result_vartrix_LW121/raw/clusters_souporcell_troublet_19.tsv \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/genotyping/souporcell/result_vartrix_LW121/raw/clusters_souporcell_troublet_20.tsv \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/genotyping/souporcell/result_vartrix_LW121/raw/clusters_souporcell_troublet_24.tsv \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/genotyping/souporcell/result_vartrix_LW121/raw/clusters_souporcell_troublet_25.tsv \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/genotyping/souporcell/result_vartrix_LW121/raw/clusters_souporcell_troublet_5.tsv \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/genotyping/souporcell/result_vartrix_LW121/raw/clusters_souporcell_troublet_50.tsv \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/genotyping/souporcell/result_vartrix_LW121/raw/clusters_souporcell_troublet_6.tsv \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/genotyping/souporcell/result_vartrix_LW121/raw/clusters_souporcell_troublet_8.tsv \n/Users/jialei/Dropbox/Data/Projects/UTSW/Peri-implantation/genotyping/souporcell/result_vartrix_LW121/raw/clusters_souporcell_troublet_9.tsv \n\n\n\nsouporcell_clusters_longer &lt;- rbind(\n    souporcell_clusters |&gt;\n        dplyr::select(\n            num_clusters,\n            y = log_prob_singleton\n        ) |&gt;\n        dplyr::mutate(type = \"y_log_prob_singleton\"),\n    #\n    data.frame(\n        num_clusters = min(\n            souporcell_clusters$num_clusters\n        ):max(souporcell_clusters$num_clusters)\n    ) |&gt;\n        dplyr::mutate(\n            y_pred = approxfun(\n                x = souporcell_clusters$num_clusters,\n                y = souporcell_clusters$log_prob_singleton,\n                method = \"linear\",\n                n = 50\n            )(num_clusters),\n            num_clusters_normalized = normalize(num_clusters),\n            y_pred_normalized = normalize(y_pred),\n            y_difference = y_pred_normalized - num_clusters_normalized,\n            y_difference = y_difference * (\n                max(y_pred) - min(y_pred)) + min(y_pred)\n        ) |&gt;\n        dplyr::select(num_clusters, y_pred, y_difference) |&gt;\n        tidyr::pivot_longer(cols = c(y_pred, y_difference)) |&gt;\n        dplyr::select(\n            num_clusters,\n            type = name,\n            y = value\n        )\n) |&gt;\n    dplyr::filter(type != \"y_pred\") |&gt;\n    dplyr::mutate(\n        type = factor(type)\n    )\n\n\nidx_num_clusters &lt;- souporcell_clusters_longer[\n    souporcell_clusters_longer$type != \"y_log_prob_singleton\",\n    \"num_clusters\",\n    drop = TRUE\n][which.max(\n    souporcell_clusters_longer[\n        souporcell_clusters_longer$type != \"y_log_prob_singleton\",\n        \"y\",\n        drop = TRUE\n    ]\n)]\n\n\np_souporcell_log_prob &lt;- souporcell_clusters_longer |&gt;\n    dplyr::filter(type == \"y_log_prob_singleton\") |&gt;\n    ggplot2::ggplot(\n        aes(\n            x = num_clusters,\n            y = y,\n            color = type\n        )\n    ) +\n    ggplot2::geom_point() +\n    ggplot2::geom_line() +\n    ggplot2::geom_line(\n        data = souporcell_clusters_longer |&gt;\n            dplyr::filter(type != \"y_log_prob_singleton\")\n    ) +\n    ggplot2::geom_vline(\n        xintercept = idx_num_clusters,\n        color = \"steelblue\", linewidth = 0.3\n    ) +\n    ggplot2::annotate(\n        geom = \"text\",\n        x = idx_num_clusters,\n        y = min(souporcell_clusters_longer$y),\n        label = glue::glue(\n            \" Number of genotype clusters: {idx_num_clusters}\"\n        ),\n        family = \"Arial\",\n        color = \"black\",\n        size = 5 / ggplot2::.pt,\n        hjust = 0,\n        vjust = 0\n    ) +\n    ggplot2::scale_x_continuous(\n        name = \"Number of genotype clusters\"\n    ) +\n    ggplot2::scale_y_continuous(\n        name = \"Total log likehood\",\n        labels = scales::scientific\n    ) +\n    ggplot2::scale_color_manual(\n        name = NULL,\n        values = c(\"#da3490\", \"#9089fa\"),\n        breaks = c(\"y_log_prob_singleton\", \"y_difference\"),\n        labels = c(\n            \"Souporcell; total log likehood\",\n            \"Normalized difference curve\"\n        )\n    ) +\n    ggplot2::theme_grey(base_size = 6, base_family = \"Arial\") +\n    ggplot2::theme(\n        legend.background = ggplot2::element_blank(),\n        legend.margin = ggplot2::margin(\n            t = 0, r = 0, b = 0, l = 0, unit = \"mm\"\n        ),\n        legend.spacing.y = grid::unit(0, \"mm\"),\n        legend.key = ggplot2::element_blank(),\n        legend.key.size = grid::unit(3, \"mm\"),\n        legend.text = ggplot2::element_text(\n            family = \"Arial\",\n            size = 5,\n            margin = ggplot2::margin(\n                t = 0, r = 0, b = 0, l = -1, unit = \"mm\"\n            )\n        ),\n        legend.position = c(0.5, 0.9),\n        legend.justification = c(0, 1),\n        plot.title = ggplot2::element_text(\n            family = \"Arial\", size = 6, hjust = 0.5\n        ),\n        plot.background = ggplot2::element_blank()\n    )\n\nGender\n\nfeature_symbols &lt;- setNames(\n    object = rownames(matrix_readcount_use) |&gt;\n        stringr::str_remove(\n            pattern = \".+_\"\n        ),\n    nm = rownames(matrix_readcount_use) |&gt;\n        stringr::str_remove(\n            pattern = \"_.+$\"\n        )\n)\n\nsouporcell_result &lt;- vroom::vroom(\n    file = file.path(\n        PROJECT_DIR, \"genotyping\", \"souporcell\",\n        SOUPORCELL_RESULT_DIR, \"raw\",\n        \"clusters_souporcell_troublet_15.tsv\"\n    ),\n    show_col_types = FALSE\n) |&gt;\n    dplyr::rename(cell = barcode)\n\n\nhead(feature_symbols)\n\nENSG00000243485 ENSG00000237613 ENSG00000186092 ENSG00000238009 ENSG00000239945 \n  \"MIR1302-2HG\"       \"FAM138A\"         \"OR4F5\"    \"AL627309.1\"    \"AL627309.3\" \nENSG00000239906 \n   \"AL627309.2\" \n\n\n\nfeatures_XY &lt;- purrr::map(c(\"X\", \"Y\"), \\(x) {\n    vroom::vroom(\n        file = file.path(\n            PROJECT_DIR,\n            \"misc/annotations/refdata-cellranger-GRCh38-3.0.0\",\n            \"genes.gtf.gz\"\n        ),\n        delim = \"\\t\",\n        col_names = FALSE,\n        comment = \"#\",\n        show_col_types = FALSE\n    ) |&gt;\n        dplyr::filter(X1 == x) |&gt;\n        dplyr::select(X1, X9) |&gt;\n        dplyr::mutate(\n            feature = stringr::str_remove(\n                string = X9, pattern = \";.+$\"\n            )\n        ) |&gt;\n        dplyr::select(X1, feature) |&gt;\n        dplyr::mutate(\n            feature = stringr::str_remove_all(\n                string = feature,\n                pattern = \"\\\"\"\n            ),\n            feature = stringr::str_remove_all(\n                string = feature,\n                pattern = \"gene_id \"\n            )\n        ) |&gt;\n        dplyr::pull(feature) |&gt;\n        unique() |&gt;\n        {\n            \\(x)            {\n                paste(x, feature_symbols[x], sep = \"_\")\n            }\n        }()\n})\nnames(features_XY) &lt;- c(\"X\", \"Y\")\n\n\npurrr::map_int(features_XY, length)\n\n   X    Y \n1078  100 \n\n\n\nY_expression_cutoff &lt;- 100\n\np_histogram_y &lt;- calc_cpm(\n    matrix_readcount_use[, souporcell_result$cell]\n)[features_XY$Y, ] |&gt;\n    Matrix::colSums() |&gt;\n    tibble::enframe(name = \"cell\", value = \"value\") |&gt;\n    dplyr::mutate(\n        gender = dplyr::case_when(\n            value &gt;= Y_expression_cutoff ~ \"male\",\n            TRUE ~ \"female\"\n        )\n    ) |&gt;\n    {\n        \\(x) {\n            num_cells &lt;- calc_cpm(\n                matrix_readcount_use[, souporcell_result$cell]\n            )[features_XY$Y, ] |&gt;\n                Matrix::colSums() |&gt;\n                tibble::enframe(name = \"cell\", value = \"value\") |&gt;\n                dplyr::filter(value &gt;= Y_expression_cutoff) |&gt;\n                nrow()\n\n            x |&gt;\n                ggplot2::ggplot(\n                    ggplot2::aes(x = value, fill = gender)\n                ) +\n                ggplot2::geom_histogram(\n                    binwidth = 50,\n                    boundary = 0,\n                    closed = \"left\"\n                ) +\n                ggplot2::scale_x_continuous(\n                    name = \"Sum expression of Y genes, CPM\"\n                ) +\n                ggplot2::scale_y_continuous(\n                    name = \"Number of cells\"\n                ) +\n                ggplot2::scale_fill_manual(\n                    name = NULL,\n                    values = paletteer::paletteer_d(\n                        n = length(unique(x$gender)),\n                        palette = \"colorblindr::OkabeIto\"\n                    )\n                ) +\n                ggplot2::geom_vline(\n                    xintercept = 100, color = \"steelblue\", linewidth = 0.3\n                ) +\n                ggplot2::annotate(\n                    geom = \"text\",\n                    x = 100,\n                    y = 400,\n                    label = glue::glue(\n                        \" Number of male cells: {num_cells}\"\n                    ),\n                    family = \"Arial\",\n                    color = \"black\",\n                    size = 5 / ggplot2::.pt,\n                    hjust = 0,\n                    vjust = 0\n                ) +\n                ggplot2::theme_grey(base_size = 6, base_family = \"Arial\") +\n                ggplot2::theme(\n                    legend.background = ggplot2::element_blank(),\n                    legend.margin = ggplot2::margin(\n                        t = 0, r = 0, b = 0, l = 0, unit = \"mm\"\n                    ),\n                    legend.spacing.y = grid::unit(0, \"mm\"),\n                    legend.key = ggplot2::element_blank(),\n                    legend.key.size = grid::unit(3, \"mm\"),\n                    legend.text = ggplot2::element_text(\n                        family = \"Arial\",\n                        size = 5,\n                        margin = ggplot2::margin(\n                            t = 0, r = 0, b = 0, l = -1, unit = \"mm\"\n                        )\n                    ),\n                    legend.position = c(0.8, 0.9),\n                    legend.justification = c(0, 1),\n                    plot.background = ggplot2::element_blank()\n                )\n        }\n    }()\n\n\nlist(\n    p_souporcell_log_prob,\n    p_histogram_y\n) |&gt;\n    purrr::reduce(`+`) +\n    patchwork::plot_layout(ncol = 1) +\n    patchwork::plot_annotation(\n        theme = theme(plot.margin = margin())\n    )"
  },
  {
    "objectID": "genotype_blastocysts.html#clustering",
    "href": "genotype_blastocysts.html#clustering",
    "title": "Genotyping of Human Blastocysts",
    "section": "Clustering",
    "text": "Clustering\nVisualization\n\nRASTERISED &lt;- FALSE\n\nc(x_label, y_label) %&lt;-% purrr::map2(\n    c(\"x.range\", \"y.range\"), c(0.035, 0.065), \\(x, y) {\n        ggplot2::ggplot_build(\n            p_embedding_leiden\n        )$layout$panel_params[[1]][c(x)] |&gt;\n            unlist() |&gt;\n            quantile(y)\n    }\n) |&gt;\n    unlist()\n\n      3.5%       6.5% \n 0.4392287 -0.5908886 \n\n\n\n# batch\np_embedding_batch &lt;- plot_embedding(\n    data = embedding_blastocyst[, c(x_column, y_column)],\n    color = embedding_blastocyst$batch |&gt; as.factor(),\n    color_labels = FALSE,\n    color_legend = TRUE,\n    sort_values = FALSE,\n    shuffle_values = TRUE,\n    rasterise = RASTERISED,\n    geom_point_size = GEOM_POINT_SIZE * 1.5\n) +\n    theme_customized_embedding(void = TRUE) +\n    ggplot2::annotate(\n        geom = \"text\",\n        x = x_label,\n        y = y_label,\n        label = glue::glue(\"Blastocyst; This study\\nBatch\"),\n        family = \"Arial\",\n        color = \"black\",\n        size = 5 / ggplot2::.pt,\n        hjust = 0,\n        vjust = 0\n    ) +\n    ggplot2::scale_color_manual(\n        values = RColorBrewer::brewer.pal(n = 3, name = \"Set2\")\n    )\n\n# genotype assignment\nvalues &lt;- embedding_blastocyst |&gt;\n    dplyr::left_join(\n        souporcell_result |&gt;\n            dplyr::filter(status == \"singlet\") |&gt;\n            dplyr::select(cell, assignment),\n        by = \"cell\"\n    ) |&gt;\n    dplyr::pull(assignment) |&gt;\n    as.numeric() |&gt;\n    as.factor()\n\np_embedding_assignment &lt;- plot_embedding(\n    data = embedding_blastocyst[, c(x_column, y_column)],\n    color = values,\n    color_legend = TRUE,\n    sort_values = FALSE,\n    shuffle_values = TRUE,\n    rasterise = RASTERISED,\n    geom_point_size = GEOM_POINT_SIZE * 1.5,\n    geom_point_legend_ncol = 4\n) +\n    theme_customized_embedding(void = TRUE) +\n    ggplot2::scale_color_manual(\n        values = scales::hue_pal(l = 75, c = 150)(n = nlevels(values)),\n        labels = c(levels(values), \"Other\"),\n        na.value = \"grey70\"\n    ) +\n    ggplot2::annotate(\n        geom = \"text\",\n        x = x_label,\n        y = y_label,\n        label = glue::glue(\"Blastocyst; This study\\nGenotype\"),\n        family = \"Arial\",\n        color = \"black\",\n        size = 5 / ggplot2::.pt,\n        hjust = 0,\n        vjust = 0\n    )\n\n# gender\nvalues &lt;- embedding_blastocyst |&gt;\n    dplyr::left_join(\n        calc_cpm(\n            matrix_readcount_use[, souporcell_result$cell]\n        )[features_XY$Y, ] |&gt;\n            Matrix::colSums() |&gt;\n            tibble::enframe(name = \"cell\", value = \"value\") |&gt;\n            dplyr::mutate(\n                sex = ifelse(value &gt;= 100, \"male\", \"female\")\n            ) |&gt;\n            dplyr::left_join(\n                souporcell_result |&gt;\n                    dplyr::select(cell, status, assignment),\n                by = \"cell\"\n            ),\n        by = \"cell\"\n    ) |&gt;\n    dplyr::pull(sex) |&gt;\n    as.factor()\n\np_embedding_gender &lt;- plot_embedding(\n    data = embedding_blastocyst[, c(x_column, y_column)],\n    color = values |&gt; as.factor(),\n    color_legend = TRUE,\n    sort_values = FALSE,\n    shuffle_values = TRUE,\n    rasterise = RASTERISED,\n    geom_point_size = GEOM_POINT_SIZE * 1.5\n) +\n    theme_customized_embedding(void = TRUE) +\n    ggplot2::scale_color_manual(\n        values = paletteer::paletteer_d(\n            n = nlevels(values), palette = \"colorblindr::OkabeIto\"\n        ),\n        labels = c(levels(values), \"Other\"),\n        na.value = \"grey70\"\n    ) +\n    ggplot2::annotate(\n        geom = \"text\",\n        x = x_label,\n        y = y_label,\n        label = glue::glue(\"Blastocyst; This study\\nGender\"),\n        family = \"Arial\",\n        color = \"black\",\n        size = 5 / ggplot2::.pt,\n        hjust = 0,\n        vjust = 0\n    )\n\n\nlist(\n    p_embedding_batch,\n    p_embedding_assignment,\n    p_embedding_gender\n) |&gt;\n    purrr::map(\n        \\(x) {\n            x + add_panel_border()\n        }\n    ) |&gt;\n    purrr::reduce(`+`) +\n    patchwork::plot_layout(ncol = 1, byrow = TRUE) +\n    patchwork::plot_annotation(\n        theme = ggplot2::theme(plot.margin = ggplot2::margin())\n    )"
  },
  {
    "objectID": "genotype_blastocysts.html#r-session-info",
    "href": "genotype_blastocysts.html#r-session-info",
    "title": "Genotyping of Human Blastocysts",
    "section": "R session info",
    "text": "R session info\n\ndevtools::session_info()\n\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.1 (2023-06-16)\n os       macOS Ventura 13.5\n system   aarch64, darwin22.4.0\n ui       unknown\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       America/Chicago\n date     2023-08-12\n pandoc   2.19.2 @ /Users/jialei/.pyenv/shims/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package      * version     date (UTC) lib source\n beeswarm       0.4.0       2021-06-01 [1] CRAN (R 4.3.0)\n bit            4.0.5       2022-11-15 [1] CRAN (R 4.3.0)\n bit64          4.0.5       2020-08-30 [1] CRAN (R 4.3.0)\n cachem         1.0.8       2023-05-01 [1] CRAN (R 4.3.0)\n callr          3.7.3       2022-11-02 [1] CRAN (R 4.3.0)\n cli            3.6.1       2023-03-23 [1] CRAN (R 4.3.0)\n codetools      0.2-19      2023-02-01 [2] CRAN (R 4.3.1)\n colorspace     2.1-0       2023-01-23 [1] CRAN (R 4.3.0)\n crayon         1.5.2       2022-09-29 [1] CRAN (R 4.3.0)\n devtools       2.4.5.9000  2023-08-11 [1] Github (r-lib/devtools@163c3f2)\n digest         0.6.33      2023-07-07 [1] CRAN (R 4.3.1)\n dplyr        * 1.1.2.9000  2023-07-19 [1] Github (tidyverse/dplyr@c963d4d)\n ellipsis       0.3.2       2021-04-29 [1] CRAN (R 4.3.0)\n evaluate       0.21        2023-05-05 [1] CRAN (R 4.3.0)\n extrafont    * 0.19        2023-01-18 [1] CRAN (R 4.3.0)\n extrafontdb    1.0         2012-06-11 [1] CRAN (R 4.3.0)\n fansi          1.0.4       2023-01-22 [1] CRAN (R 4.3.0)\n farver         2.1.1       2022-07-06 [1] CRAN (R 4.3.0)\n fastmap        1.1.1       2023-02-24 [1] CRAN (R 4.3.0)\n forcats      * 1.0.0.9000  2023-04-23 [1] Github (tidyverse/forcats@4a8525a)\n fs             1.6.3       2023-07-20 [1] CRAN (R 4.3.1)\n furrr        * 0.3.1       2022-08-15 [1] CRAN (R 4.3.1)\n future       * 1.33.0      2023-07-01 [1] CRAN (R 4.3.1)\n generics       0.1.3       2022-07-05 [1] CRAN (R 4.3.0)\n ggbeeswarm     0.7.2       2023-04-29 [1] CRAN (R 4.3.0)\n ggplot2      * 3.4.2.9000  2023-08-11 [1] Github (tidyverse/ggplot2@2cd0e96)\n ggrastr        1.0.2       2023-06-01 [1] CRAN (R 4.3.0)\n globals        0.16.2      2022-11-21 [1] CRAN (R 4.3.0)\n glue           1.6.2.9000  2023-04-23 [1] Github (tidyverse/glue@cbac82a)\n gtable         0.3.3.9000  2023-04-23 [1] Github (r-lib/gtable@c56fd4f)\n hms            1.1.3       2023-03-21 [1] CRAN (R 4.3.0)\n htmltools      0.5.6       2023-08-10 [1] CRAN (R 4.3.1)\n htmlwidgets    1.6.2       2023-03-17 [1] CRAN (R 4.3.0)\n jsonlite       1.8.7       2023-06-29 [1] CRAN (R 4.3.1)\n knitr          1.43        2023-05-25 [1] CRAN (R 4.3.0)\n labeling       0.4.2       2020-10-20 [1] CRAN (R 4.3.0)\n lattice        0.21-8      2023-04-05 [2] CRAN (R 4.3.1)\n lifecycle      1.0.3       2022-10-07 [1] CRAN (R 4.3.0)\n listenv        0.9.0       2022-12-16 [1] CRAN (R 4.3.0)\n lubridate    * 1.9.2.9000  2023-07-22 [1] Github (tidyverse/lubridate@cae67ea)\n magrittr       2.0.3       2022-03-30 [1] CRAN (R 4.3.0)\n Matrix       * 1.6-0       2023-07-08 [2] CRAN (R 4.3.1)\n memoise        2.0.1       2021-11-26 [1] CRAN (R 4.3.0)\n munsell        0.5.0       2018-06-12 [1] CRAN (R 4.3.0)\n paletteer      1.5.0       2022-10-19 [1] CRAN (R 4.3.0)\n parallelly     1.36.0      2023-05-26 [1] CRAN (R 4.3.0)\n patchwork    * 1.1.2.9000  2023-08-11 [1] Github (thomasp85/patchwork@bd57553)\n pillar         1.9.0       2023-03-22 [1] CRAN (R 4.3.0)\n pkgbuild       1.4.2       2023-06-26 [1] CRAN (R 4.3.1)\n pkgconfig      2.0.3       2019-09-22 [1] CRAN (R 4.3.0)\n pkgload        1.3.2.9000  2023-07-05 [1] Github (r-lib/pkgload@3cf9896)\n png            0.1-8       2022-11-29 [1] CRAN (R 4.3.0)\n prettyunits    1.1.1.9000  2023-04-23 [1] Github (r-lib/prettyunits@8706d89)\n prismatic      1.1.1       2022-08-15 [1] CRAN (R 4.3.0)\n processx       3.8.2       2023-06-30 [1] CRAN (R 4.3.1)\n ps             1.7.5       2023-04-18 [1] CRAN (R 4.3.0)\n purrr        * 1.0.2.9000  2023-08-11 [1] Github (tidyverse/purrr@ac4f5a9)\n R.cache        0.16.0      2022-07-21 [1] CRAN (R 4.3.0)\n R.methodsS3    1.8.2       2022-06-13 [1] CRAN (R 4.3.0)\n R.oo           1.25.0      2022-06-12 [1] CRAN (R 4.3.0)\n R.utils        2.12.2      2022-11-11 [1] CRAN (R 4.3.0)\n R6             2.5.1.9000  2023-04-23 [1] Github (r-lib/R6@e97cca7)\n RColorBrewer   1.1-3       2022-04-03 [1] CRAN (R 4.3.0)\n Rcpp           1.0.11      2023-07-06 [1] CRAN (R 4.3.1)\n readr        * 2.1.4.9000  2023-08-03 [1] Github (tidyverse/readr@80e4dc1)\n rematch2       2.1.2       2020-05-01 [1] CRAN (R 4.3.0)\n remotes        2.4.2.9000  2023-06-09 [1] Github (r-lib/remotes@8875171)\n reticulate     1.31        2023-08-10 [1] CRAN (R 4.3.1)\n rlang          1.1.1.9000  2023-06-09 [1] Github (r-lib/rlang@c55f602)\n rmarkdown      2.23.4      2023-07-27 [1] Github (rstudio/rmarkdown@054d735)\n rstudioapi     0.15.0.9000 2023-07-19 [1] Github (rstudio/rstudioapi@feceaef)\n Rttf2pt1       1.3.12      2023-01-22 [1] CRAN (R 4.3.0)\n scales         1.2.1       2022-08-20 [1] CRAN (R 4.3.0)\n sessioninfo    1.2.2       2021-12-06 [1] CRAN (R 4.3.0)\n stringi        1.7.12      2023-01-11 [1] CRAN (R 4.3.0)\n stringr      * 1.5.0.9000  2023-08-11 [1] Github (tidyverse/stringr@08ff36f)\n styler       * 1.10.1      2023-07-17 [1] Github (r-lib/styler@aca7223)\n tibble       * 3.2.1.9005  2023-05-28 [1] Github (tidyverse/tibble@4de5c15)\n tidyr        * 1.3.0.9000  2023-04-23 [1] Github (tidyverse/tidyr@0764e65)\n tidyselect     1.2.0       2022-10-10 [1] CRAN (R 4.3.0)\n tidyverse    * 2.0.0.9000  2023-04-23 [1] Github (tidyverse/tidyverse@8ec2e1f)\n timechange     0.2.0       2023-01-11 [1] CRAN (R 4.3.0)\n tzdb           0.4.0       2023-05-12 [1] CRAN (R 4.3.0)\n usethis        2.2.2.9000  2023-07-11 [1] Github (r-lib/usethis@467ff57)\n utf8           1.2.3       2023-01-31 [1] CRAN (R 4.3.0)\n vctrs          0.6.3       2023-06-14 [1] CRAN (R 4.3.0)\n vipor          0.4.5       2017-03-22 [1] CRAN (R 4.3.0)\n vroom          1.6.3.9000  2023-04-30 [1] Github (tidyverse/vroom@89b6aac)\n withr          2.5.0       2022-03-03 [1] CRAN (R 4.3.0)\n xfun           0.40        2023-08-09 [1] CRAN (R 4.3.1)\n yaml           2.3.7       2023-01-23 [1] CRAN (R 4.3.0)\n zeallot        0.1.0.9000  2023-06-11 [1] Github (nteetor/zeallot@55167bf)\n\n [1] /opt/homebrew/lib/R/4.3/site-library\n [2] /opt/homebrew/Cellar/r/4.3.1/lib/R/library\n\n─ Python configuration ───────────────────────────────────────────────────────\n python:         /Users/jialei/.pyenv/shims/python\n libpython:      /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/libpython3.10.dylib\n pythonhome:     /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3:/Users/jialei/.pyenv/versions/mambaforge-22.9.0-3\n version:        3.10.9 | packaged by conda-forge | (main, Feb  2 2023, 20:26:08) [Clang 14.0.6 ]\n numpy:          /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/numpy\n numpy_version:  1.24.3\n anndata:        /Users/jialei/.pyenv/versions/mambaforge-22.9.0-3/lib/python3.10/site-packages/anndata\n \n NOTE: Python version was forced by RETICULATE_PYTHON\n\n──────────────────────────────────────────────────────────────────────────────"
  }
]